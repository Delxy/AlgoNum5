%!PS-Adobe-3.1
%ADO_DSC_Encoding: MacOS Roman
%%Title: c3-3.pdf
%%Creator: Adobe Acrobat 8.0
%%For: renault
%%CreationDate: 04/15/08, 08:50:32
%%BoundingBox: 12 51 584 791
%%HiResBoundingBox: 12 51.3777 583.0801 790.4224
%%CropBox: 12 51.3777 583.0801 790.4224
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%TargetDevice: (hp LaserJet 4250) (3010.107) 0
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
%ADOBeginClientInjection: DocumentSetup Start "No Re-Distill"
%% Removing the following eleven lines is illegal, subject to the Digital Copyright Act of 1998.
mark currentfile eexec
54dc5232e897cbaaa7584b7da7c23a6c59e7451851159cdbf40334cc2600
30036a856fabb196b3ddab71514d79106c969797b119ae4379c5ac9b7318
33471fc81a8e4b87bac59f7003cddaebea2a741c4e80818b4b136660994b
18a85d6b60e3c6b57cc0815fe834bc82704ac2caf0b6e228ce1b2218c8c7
67e87aef6db14cd38dda844c855b4e9c46d510cab8fdaa521d67cbb83ee1
af966cc79653b9aca2a5f91f908bbd3f06ecc0c940097ec77e210e6184dc
2f5777aacfc6907d43f1edb490a2a89c9af5b90ff126c0c3c5da9ae99f59
d47040be1c0336205bf3c6169b1b01cd78f922ec384cd0fcab955c0c20de
000000000000000000000000000000000000000000000000000000000000
cleartomark
%ADOEndClientInjection: DocumentSetup Start "No Re-Distill"
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
false Adobe_AGM_Core/begin_feature gx false {
%%BeginFeature: *PageSize A4

    <</DeferredMediaSelection true /PageSize [595 842] /ImagingBBox null /MediaClass null >> setpagedevice
%%EndFeature
} Adobe_AGM_Core/end_feature gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 2178 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c320 44.293068, Sun Jul 08 2007 18:06:15">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xap="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xap:CreateDate="2002-03-16T09:47:36Z"
   xap:CreatorTool="dvips(k) 5.85 Copyright 1999 Radical Eye Software"
   xap:ModifyDate="2002-03-16T09:47:37-07:00"
   pdf:Producer="Acrobat Distiller 4.0 for Windows"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[{Catalog} {Doc_Metadata} /Metadata pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
[
[/Label (1)]
[/TrimBox [12 51.377624511719 583.08001708984 790.42236328125]]
[/BleedBox [12 51.377624511719 583.08001708984 790.42236328125]]
[/ArtBox [12 51.5776 583.08 790.622 ]]
]xpdfm
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
/0 {
<~!!*-'"9eu7#RLhG$k3[W&.oNg'GVB"(`=52*$$(B+<_pR,UFcb-n-Vr/1iJ-0JP==1c70M3&s#]4?Ykm
5X@_(6q'R884cEH9MJ8X:f1+h<)lt#=BSg3>[:ZC?t!MSA7]@cBPD3sCi+'.E,fo>FEMbNG^4U^I!pHn
J:W<)KS>/9Ll%"IN/`jYOHG]iPa.Q$R$jD4S=Q7DTV8*TUnsrdW2ZetXKAY/Yd(L?['d?O\@K2_]Y2%o
^qmn*`5Ta:aN;TJbg"GZd*^:jeCE.%f\,!5gtgiEi8N\UjQ5OekiqBum-X60nF?)@o_%qPq"ad`r;HWp
~>
exch 0 sub 255 0 sub 1 0 sub div mul 0 add
dup 255 gt{pop 255 }if cvi
1 mul 1 getinterval
0 get
1 0 sub 255 div mul 0 add
dup 0 lt{pop 0 }if
dup 1 gt{pop 1 }if

} bind /Procedure add_res
/1 {
<~J,k+MJH:=QJc^OUK*-aYKEQs]Ka!0aL'EBeLBiTiL^8fmM$]#qM@,5uM[PH$N!tZ(N=Cl,NXh)0Nt7;4
O:[M8OV*_<OqNq@P7s.DPSB@HPnfRLQ55dPQPZ!TQl)3XR2ME\RMqW`Ri@idS/e&hSK48lSfXJpT-'\t
THKo#Tcp,'U*?>+UEcP/Ua2b3V'Vt7VC&1;V^JC?W$nUCW@=gGW[b$KX"16OX=UHSXY$ZWXtHl[Y:m)_
YV<;cYq`MgZ8/_kZSSqoZo#.s[5GA"[PkS&[l:e*\2_".\N.42\iRF6]0!X:]KEj>]fj'B^-99F^H]KJ
^d,]N_*PoR_Eu,V_aD>Z`'hP^`C7bb`^[tfa%+1ja@OCna[sUrb"Bh!b=g%%bY67)btZI-c;)[1cVMm5
cqr*9d8A<=dSeNAdo4`Ee5XrIeQ(/MelLAQf2pSUfN?eYfid"]g034agKWFegg&Xih-JjmhHo'qhd>9u
i*bL$iF1^(iaUp,j(%-0jCI?4j^mQ8k%<c<k@`u@k\02Dl"TDHl>#VLlYGhPltl%Tm;;7XmV_I\mr.[`
n8RmdnT"*hnoF<lo5jNpoQ9`tol]s#p3-0'pNQB+piuT/q0Df3qKi#7qg85;r-\G?rI+YCrdOkGs*t(K
~>
exch 0 sub 255 0 sub 1 0 sub div mul 0 add
dup 255 gt{pop 255 }if cvi
1 mul 1 getinterval
0 get
1 -1 sub 255 div mul -1 add
dup -1 lt{pop -1 }if
dup 1 gt{pop 1 }if

} bind /Procedure add_res
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -842 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
12 51.5776 mo
12 790.622 li
583.08 790.622 li
583.08 51.5776 li
cp
clp
[0.933137 0 0 0.933137 12 51.5776 ]ct
false sop
/0 
[/DeviceGray] /CSA add_res
0 gry
%%IncludeResource: font Helvetica-Oblique
/ARMEHA+Helvetica-Oblique /Helvetica-Oblique findfont ct_VMDictPut
/ARMEHA+Helvetica-Oblique*1 
[46{/.notdef}rp /period 4{/.notdef}rp /three 15{/.notdef}rp /C 5{/.notdef}rp /I 
9{/.notdef}rp /S 13{/.notdef}rp /a /b /c /.notdef /e 
3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o /p 
/.notdef /r /.notdef /t /u 138{/.notdef}rp]
ARMEHA+Helvetica-Oblique nf
ARMEHA+Helvetica-Oblique*1 [8.9664 0 0 -8.9664 0 0 ]msf
166.92 84.6 mo
(3.3CubicSplineInterpolation)
[4.98532 2.49266 7.38562 6.4736 4.98532 4.98531 1.9904 6.88351 5.98051 4.98532 1.9904 1.9904 
4.98532 7.14531 2.49268 4.98532 2.49265 4.98532 3.22604 4.98532 4.98532 1.99039 4.98532 2.49268 
1.99039 4.98532 0 ]xsh
%%IncludeResource: font Times-Roman
/ARMEHB+Times-Roman /Times-Roman findfont ct_VMDictPut
/ARMEHB+Times-Roman*1 
[49{/.notdef}rp /one /.notdef /three 204{/.notdef}rp]
ARMEHB+Times-Roman nf
ARMEHB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
388.161 84.6 mo
(113)
[4.98129 4.98129 0 ]xsh
72 88.92 mo
406.8 88.92 li
406.8 88.44 li
72 88.44 li
cp
f
%%IncludeResource: font Helvetica
/ARMEHC+Helvetica /Helvetica findfont ct_VMDictPut
/ARMEHC+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/period /slash /zero /one /two /three /four /five 
/six /seven /eight /nine /colon 5{/.notdef}rp /at /A 
/B /C /D /E /F /G /H /I 
/J /.notdef /L /M /N /O /P /.notdef 
/R /S /T /U /V /W /.notdef /Y 
/.notdef /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /.notdef /k 
/l /m /n /o /p /.notdef /r /s 
/t /u /v /w /.notdef /y 134{/.notdef}rp]
ARMEHC+Helvetica nf
ARMEHC+Helvetica*1 [0 7 7 0 0 0 ]msf
466 178.92 mo
(Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING \(ISBN 0-521-43108-5\))
[4.66895 3.89203 5.83093 3.89197 1.55389 3.89203 1.94598 3.89203 3.89197 3.89197 3.89203 1.94598 
1.94604 2.33093 3.89197 5.83093 1.94604 5.05389 5.05389 5.83093 4.66895 5.05389 1.94598 5.05389 
4.66895 3.89203 1.94598 5.05389 4.66895 5.05389 1.94598 4.66895 4.66895 4.66895 1.94601 1.94601 
5.05389 1.94598 5.05389 1.94598 1.94601 4.27695 5.05389 4.66895 1.94598 4.66895 5.05389 4.27698 
1.94598 5.44598 4.27698 1.94598 4.66895 5.05389 1.94598 4.66895 5.05389 4.27698 1.94598 4.27695 
1.94601 5.05389 1.94598 5.05389 5.44598 5.83096 4.66895 5.05389 4.27695 1.94598 5.05389 5.44601 
1.94601 2.33093 1.94598 4.66895 4.66895 5.05389 1.94601 3.892 2.33093 3.89203 3.89197 3.89203 
2.33093 3.892 3.892 3.89197 3.89203 3.89197 2.33099 3.89197 0 ]ysh
458 178.92 mo
(Copyright \(C\) 1988-1992 by Cambridge University Press.Programs Copyright \(C\) 1988-1992 by Numerical Recipes Software. )
[5.05389 3.89197 3.89203 3.5 2.33093 1.55389 3.89203 3.89197 1.94598 1.94604 2.33093 5.05389 
2.33093 1.94598 3.89203 3.89203 3.89197 3.89197 2.33099 3.89197 3.89203 3.89197 3.89203 1.94598 
3.89197 3.5 1.94604 5.05389 3.89197 5.83096 3.892 2.33093 1.55389 3.89203 3.89197 3.89203 
1.94598 5.05389 3.892 1.55389 3.5 3.892 2.33093 3.5 1.55389 1.94601 3.5 1.94601 
4.66895 2.33093 3.892 3.5 3.5 3.69601 4.66895 2.33093 3.892 3.892 2.33093 3.89203 
5.83093 3.5 1.94598 5.05389 3.89203 3.89197 3.5 2.33096 1.55389 3.892 3.892 1.94601 
1.94598 2.33093 5.05389 2.33096 1.94601 3.89197 3.89203 3.89197 3.89203 2.33093 3.892 3.892 
3.892 3.892 1.94598 3.89203 3.5 1.94598 5.05389 3.892 5.83096 3.89197 2.33096 1.55389 
3.5 3.892 1.55389 1.94598 5.05389 3.89203 3.5 1.55389 3.89197 3.89203 3.5 1.94598 
4.66895 3.89197 1.94604 1.94598 5.05389 3.89197 2.33099 3.89197 1.94598 0 ]ysh
449.999 178.92 mo
(Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copyin)
[4.66895 3.89203 2.33093 5.83093 1.55389 3.5 3.5 1.55389 3.89197 3.89203 1.94598 1.55389 
3.5 1.94598 3.89203 2.33093 3.89203 3.89197 1.94604 3.89197 3.89197 1.94604 1.94598 3.89203 
2.33093 1.94598 1.55389 3.89197 1.94604 3.89197 2.33093 3.89203 3.89203 1.94598 1.94598 3.892 
3.5 3.892 2.33093 3.5 1.94601 1.94601 3.89197 1.94601 5.83096 3.89197 3.5 3.89203 
1.94598 3.892 3.892 3.892 1.94601 3.89197 3.89203 3.89197 3.89203 2.33093 1.94598 3.5 
3.89203 3.89197 3.5 1.94601 1.94601 3.89197 2.33096 1.94601 1.94598 3.892 3.892 1.55389 
2.33093 1.94601 3.892 5.05389 3.892 1.94601 3.89197 3.89203 2.33093 3.5 3.892 3.892 
3.892 1.55389 1.94601 3.89197 3.5 3.89203 1.94598 1.94598 4.27698 3.89197 2.33096 1.94601 
3.89197 3.89203 2.33093 1.94598 2.33096 3.892 3.892 2.33096 3.89197 3.89203 3.89197 3.5 
1.94598 1.55389 3.89203 3.89197 1.94604 1.94598 3.89197 2.33099 1.94598 3.89197 3.89203 3.5 
1.94598 3.5 3.89203 3.89197 3.5 1.55389 0 ]ysh
449.999 573.034 mo
(g of machine-)
[3.89203 1.94598 3.89197 1.94604 1.94598 5.83093 3.89203 3.5 3.89197 1.55389 3.89203 3.89197 
0 ]ysh
441.999 178.92 mo
(readable files \(including this one\) to any servercomputer, is strictly prohibited. To order Numerical Recipes booksor CDROMs, v)
[2.33093 3.89203 3.89197 3.89203 3.89197 3.89203 1.55389 3.89197 1.94598 1.94604 1.55389 1.55389 
3.89197 3.5 1.94604 2.33093 1.55389 3.89197 3.5 1.55389 3.89203 3.89197 1.55389 3.89203 
3.89197 1.94598 1.94604 3.89197 1.55389 3.5 1.94598 3.89203 3.89203 3.89197 2.33093 1.94601 
1.94601 3.89197 1.94601 3.892 3.892 3.5 1.94601 3.5 3.89197 2.33096 3.5 3.892 
4.08093 3.5 3.89203 5.83093 3.892 3.892 1.94598 3.89203 2.33093 1.94598 1.94601 1.55389 
3.5 1.94601 3.5 1.94598 2.33093 1.55389 3.5 1.94601 1.55389 3.5 1.94601 3.89197 
2.33096 3.892 3.892 1.55389 3.892 1.55389 1.94598 3.89203 3.89197 1.94601 1.94601 4.27692 
3.89203 1.94598 3.892 2.33096 3.89197 3.89203 2.33093 1.94598 5.05389 3.89203 5.83093 3.892 
2.33096 1.55389 3.5 3.89197 1.55389 1.94601 5.05389 3.892 3.5 1.55389 3.892 3.892 
3.5 1.94598 3.89203 3.89197 3.89203 3.5 5.25 3.89197 2.33093 1.94604 5.05389 5.05389 
5.05389 5.44598 5.83093 3.5 1.94598 1.94604 0 ]ysh
441.999 576.87 mo
(isit website)
[1.55389 3.5 1.55389 1.94598 1.94604 5.05389 3.89197 3.89203 3.5 1.55389 1.94598 0 
]ysh
433.999 178.92 mo
(http://www.nr.com or call 1-800-872-7423 \(North America only\),or send email to directcustserv@cambridge.org \(outside North Amer)
[3.89203 1.94598 1.94598 3.89197 1.94604 1.94598 1.94598 5.05389 5.05389 5.05389 1.94598 3.89203 
2.33093 1.94598 3.5 3.89203 5.83093 1.94598 3.89203 2.33093 1.94598 3.5 3.89203 1.55389 
1.55389 1.94598 3.89203 2.33093 3.89203 3.89197 3.89197 2.33099 3.89197 3.89203 3.89197 2.33096 
3.892 3.892 3.892 3.892 1.94601 2.33093 5.05389 3.892 2.33096 1.94598 3.892 1.94601 
4.66895 5.83093 3.892 2.33096 1.55389 3.5 3.89197 1.94601 3.892 3.892 1.55389 3.5 
2.33096 3.69598 3.892 2.33096 1.94598 3.5 3.892 3.892 3.892 1.94601 3.89197 5.83096 
3.892 1.55389 1.55389 1.94598 1.94601 3.892 1.94598 3.89203 1.55389 2.33093 3.892 3.5 
1.94601 3.5 3.89197 3.5 1.94601 3.5 3.892 2.33093 3.5 7.10501 3.5 3.892 
5.83093 3.89203 2.33093 1.55389 3.892 3.892 3.892 1.94601 3.89197 2.33093 3.89203 1.94598 
2.33093 3.89203 3.89197 1.94604 3.5 1.55389 3.89197 3.89203 1.94598 5.05389 3.89197 2.33099 
1.94598 3.89197 1.94604 4.66895 5.83093 3.89197 0 ]ysh
433.999 588.455 mo
(ica\).)
[1.55389 3.5 3.89203 2.33093 0 ]ysh
%ADOBeginSubsetFont: HEJAAA+CMTT8 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /HEJAAA+CMTT8 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMTT8) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 34 /quotedbl put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 63 /question put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 78 /N put
dup 82 /R put
dup 84 /T put
dup 85 /U put
dup 89 /Y put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 123 /braceleft put
dup 125 /braceright put
def
/FontBBox {-5 -232 545 699} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-10 -0 611 621 431 439] def
/OtherBlues [-228 -222] def
/BlueScale 0.04796 def
/StdHW [66] def
/StdVW [76] def
/StemSnapH [66] def
/StemSnapV [76] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
50 dict dup begin
/quotedbl <1C60D8A8C9B7883C3B43F08459AB97254BC337220A14C2014EEF2
52E1C8A10EB47ACB609061CCD43968C62B72FFBA2C9B00EBD430C76C8B660510
3CD896F9CBB74508DD47685D0CD778AE8C0E87984693BD9539D0F9B0ED6F7BAA
365B2> |-
/parenleft <1C60D8A8C9B7883CF464839EB6B239ED34DD418F4ED0AF7EA422
FC3C6BD7C1B9E173AF8B5BCC28C5CB81F9196D2AD1C32793B0AF5CA66A9E7EFF
3859F2E2087B497AE4C260CFF49E23D28981E45F47C3EA4A16747B95ACBE> |-
/parenright <1C60D8A8C9B7883CF464839EB6B239EDDA334E31DE8AA5AB2EB
6CB7D8C0C56EB81E0625A49A6A93F7A291D9628B42FAF1F0784ABA589B580291
CB9F55D2D8130F5B4EF0FC05173E85D3745B44F55258C525E109A37325D3563> |-
/asterisk <1C60D8A8C9B7883C29B4926474EA12156D8DAE08A133F4EE2C8D5
36C77C7B20F8E6F218ECA6AD4A062649BA1219CB62A50A4ABF117C498067C924
034079DE22B6D6263D8AF5A19F3EA2105B29B51E00AC6DDE1BCE466E5B208DE3
35F4A71D33FCAAEBD2CC600EE111D3D282A34EB2BABF61CC134FCC3240032C61
614242B887F34A79043CB7C8086987F1A1F183552C5D490EA7AFE161D08806F1
73DA36BF0BD9290B77420569447900D53B57F69DCC5717D56> |-
/plus <1C60D8A8C9B7883C15534D4E2BF3167CB61B4809C27DDC21EFB21FA09
72DABB5AA433141802AA985D4B4867AAD091C4467D6F51D68DFE5C69A80C8499
A0497EBA63AD9CF91502A46DAAEADF23CC528CD71DB0DB3D8500392AB73DA> |-
/comma <1C60D8A8C9B7883C3741EA86A23C06E46672DF0D727F341C4FDC7B55
10DA0F848C41FC15917DC25282FE6922A98D871D9DCF3BC18D634ADCBB75D3DC
C8B98738796CFA49F3A2E24C1981> |-
/hyphen <1C60D8A8C9B7883C3B073729B4E389B42E79295C08101196E06B913
67D99537B429ABCD9298C5EB237263DAD5F61> |-
/period <1C60D8A8C9B7883C47B214EA82737CFDD7F7EB939C9BE1AD8C5CB40
08AF9AC1C617255AA4C709BF9409262> |-
/slash <1C60D8A8C9B7883CF464839EB6B239E2F62F503DCC481C5D4FD2A50A
8EDD7D452E18D4D11534010718B08B9B36121CA81F082388AF504DBF3854EC0A
6653761542> |-
/zero <1C60D8A8C9B7883C4DD6B519314A3320BBB907C889B327F809DBA0078
8A87A456BB5C4F1874B6CF757FA285A07142F9E056475CA45FC4554C89CD6E26
34F7A71A0B534AF130B735BD75C2AE93ED4730EBB4AC347EBCBBC24368BA625F
6> |-
/one <1C60D8A8C9B7883C478830D24C3F6416C397CCD7D4C535C8ADC225A18A
A0E8C31FBF4952EEAE0B7353BF0C7A5F54CF70D2FABDCF00BBEFD2F36C366ED0
EB4828666B57F567D0F2A46290DAF721EF3F49F031212DF59D79DFF18EA897FA
BE555CB294> |-
/two <1C60D8A8C9B7883C478830D2B6A4C711815372C818DFBCE56E9F5DC7F7
FE87CF7B102066244349AFAA3B9EC9E0B056E0ED957AC9CF0974265C590741B7
7E523898DEC81B83F227660F216E00E787A531B5BBC681AAF9CAA82AA0ED07BE
FCC328CDBFA6734D97EAE21FC6C82D6A1ED6D2E694EF3A6DA464944993982C8C> |-
/colon <1C60D8A8C9B7883C47B214EA829502139F51AF47E2FD5BA4F83BCB39
129D06923987EFA3805BAA0EC314CCDF2512BA02AE2421E267E91C6FBEC1DC06
78B2B7DD94F5DBBDB5B8647E02> |-
/semicolon <1C60D8A8C9B7883C3741EA86A23C06E46694648BEB38F12DB851
1E989C476DD34C7F2FAC7A8C3AB360619128D3BAB007AB1DE3BB50438742965D
762EEC3CEF8FAD84F898EA39546B9A9CF152A5D505EDA014AFBFA2C726CE5C01
27DDA35AC2F589208109> |-
/less <1C60D8A8C9B7883C7251C6DC5086A537AC6C62579C99271F2D132E6F8
FAF6DD1331D5E5E1B8B80B9BFC0FE18CC6E440FFFCA768C00370ECA0600DD0AA
C68C5B7D6C8F5933AB10511CBF0489FD61FD33A6A1DC5CF24351654071D7D5A8
9C2E3B35ACEEECB> |-
/equal <1C60D8A8C9B7883C3BCB227077E73D8CFA35921F3AD54BD0531B2D23
CB7347759AB098CC24D56DAE17C1B3A3854AE08DBFF23830D3A9ABACA019CB26
2AC88B0C0BDE284A0013AEC872120E09739399> |-
/question <1C60D8A8C9B7883C47B20FE209C74AAA5913106D479712011C095
2CB77108F46107741225ABF33DD126609FE40565E76F29317A02AF84F35D2E8C
9212622AFC6273F05B845DD8044CAE6812C433CF8C7BA68F557861C853AF6E8B
4C809B7D7CCBAAB186123146AFEA32FC390A5EA1C45F75F6E831F60EDC1BBB5D
D1B76EA49CBF31C8613904A6203D0021CEA20B8C5> |-
/E <1C60D8A8C9B7883C478830DD4895F1FAA34B3BF96111C567E598D7EB7F01
10BF6160604E05541B2F980D131E2DEACD7574E56CBA09FEF9EA2423A447ACBF
AC1052F1A192C18A4C90E1A9982D11A962EB6D5E1B616581A005D397FA4F33A1
B52694C9D1E850431B721358D3DF5E4A307B114E6E005C923798313C51E6B54A
B4BFAAB00724E8B13C6F916C9A00B15410E662> |-
/F <1C60D8A8C9B7883C478830DD424FE18F212005D593879628D6C0DE50FF7B
DF4035D1388D55B6F53D9210C6D5E29B1163881FE0D0384C601A949F46A53D47
99C1C495192B85108EFED1BA9F532B8F51BFB5278635BAB676439D217BDDA673
FF0A66B70FDA1F50B8CAEC1B489DF6DBE8305D4ABCBDD23005158C43FB3C5AD1
C5C99BF921B7B21F43> |-
/I <1C60D8A8C9B7883C478830D2BCF2481623045F78FD9BC319EE109E9C8304
57D16B461CB79A3FF106340C4F43ABB930F9287F4FACE9EDE9E5832CA18AC580
091EABA59ADEC1D99F9E93132A52E5717A347203C8> |-
/N <1C60D8A8C9B7883C478830D2BCF24806A79EA47EF1E100B7078E8069E92E
729E5EB14B7507823F316C3AB8A9A5259A934451D274046FDE4A3A3837C9D6CE
8FF7D26710D9E6BEE93DC42FAC0107987C003EAA8FB74D781419683BB3BF3CC1
99F5EC9CE3CF932770A1E41631654896E3510BE8CC352EC11AAE8C2E59221080
E180A1A1DD56DDDA8D9E383E0A6FF5E77948D609D4E8D2> |-
/R <1C60D8A8C9B7883C478830DD424FE18F212005C589CDF7EDAB54E562BF4C
6C94623C96703F04BDF3FFD2C95517E0CD35166556A0146114D643E75771CD00
FA190B69B8BFD53AD9433D5BC7472861993B6A00A7B25FD98BAAE355B143CB45
823DABD3D0B987E7B304037FDFD6932C83E744E201FB242B7A03F3740C59035E
9136CE3EA93265C73C3F4AB004ED97030244FA1924A6089641C14FABCD26FE7E
1387F47615F25E42D596BD9D192BC0619A7839612AA427D78635943ABFA67713
B9CA888463B3F9128B2D44CEC60967A2E690E3AC22> |-
/T <1C60D8A8C9B7883C6AA91EAC6B78CC1198F96217483A5301BBFBB636F307
54B84BC757ACA83CFBFEA885F88F1472ABFC0B4AA20E7B949FC1CC3C64091882
CA3300D1904AD89048AFA173714046FC923028CEC090873CE79255C58817DC42
7381CFB9087CE58CF03066B6F75174> |-
/U <1C60D8A8C9B7883C4DD6B5193B5A209B31E515FA7008D3E2895EA6BB8753
9129B874FBCAD0232C6C24D8FEF439A6A7691FED6F131D5887FD2C552A197904
B00CD301F23A49B6094221ACA37A49CA3C458723E05539A0A3929EC3E479736F
90DC1F8D514B550B28E003DFDC0BB5D643B83F8E> |-
/Y <1C60D8A8C9B7883C478830D2BCF2481623045F773BA26F1CEE5BE5B1A615
19B23E3130F87DB5CABB87FE4DD857BA37ADDCB077450822A232352F049F4E79
AE57738DFB5BCFF3D951D385ED31FDE892176C4B462622D1C0FAFC167F82B0E0
8A546558DD0214C3F78AEAF03C34CE5B4B79312AB556466BE337C7B1015604A0
0699837205EA8293CA441CC90E85D280> |-
/bracketleft <1C60D8A8C9B7883CF40923E2D1CA298F26E232930E97D71BB9
65A65A57E9B0612C5EA0601FC41093D062AD30C2B1BCBE71C8D4378D35FEA2C6
9EB2122ACDC2AF92308DCD74E69E> |-
/bracketright <1C60D8A8C9B7883CF40923E2D1CA298F36CB4F4E7F1E1E7C8
8CCEBFFF43BE5EFBF219FA0040B1AD8E286282DF79DDEFA6C0F870B6F642B799
B06AE2AE8579BBE97C70E28C9725A> |-
/a <1C60D8A8C9B7883C478830DD8A5BFB452538458154F4CE3B20AD66AD581A
DF189C4AA24F8CBBC0F70339A3AC822FEE3457B7E5F60BEFA6CFDF765B8A3D2F
273CC300F8F8736B1B2290BF6D64B521AB42268778DDD081E97AF1F166EABEF5
8CAACAFD7314321FAABBFB171C6401E8BC138F90EAB8EAC011C39D38EC2210C7
CD76FC3051095C80212DE7950D4EEF9B6992774477395A54> |-
/b <1C60D8A8C9B7883C4A7D20AF0DD3ED7104BEE7B1BB4EB59C17857FE3B8BD
15CD5987C237AAE7CCE6905F305ECA8ACEA7903D72EF9306DEBA552EAFC1A9A3
E590A6401A923BA4FB1A004FD7FE95F33781B31AE3F09381E446EB61D8B80403
1AAF8CA49F69BBAAB3A724024688BAF8062BBF82700B37> |-
/c <1C60D8A8C9B7883C4A7D20AF02F248405BB0FEB5BEB4424866E4AA8F7D1C
96E7B766FF4C7548AFD9BCEED1405BE68EEDAC184D6FA024DEEB00C6D3EAA865
A5DA65F020516612C5C28F3550F2FA31F4BFD863231970126034040555433EAD
DB9C42D590ADC0EE374998B8B8B5AB6D> |-
/d <1C60D8A8C9B7883C4A7D20AF0DD3ED7104BEE7F6D84DAE7EA020CA7AFA2C
BFE4AC36897205198721830A8AB1EAC205FA933B72BED81C5D5CF5D35E96AF4F
501D61996653C99302F0913D5B28065C17C79D42CBA02B6F956C63467FC09B35
4AB3AC510D8FB3DF115C3D51800C44B77444BCC0972329CE5F0067004D23925D
DC> |-
/e <1C60D8A8C9B7883C4A7D20A0A2FB7F2250F0DBD938F9100315996944235D
A4D35522DC5271E0997530F8F11CDC910ECE5428D0632B4858C70F59802E7E55
F069BB51A48FA483655B9CF2246FBCE33DD8D793CBF78B460B1AEB2359A0A7ED
9C180739C2D45FBC5051E3D6690D1A> |-
/f <1C60D8A8C9B7883C478830D208D625ED20D4215FF985DD676DC5BC2A1A63
501158AACA945017F911C2111684137446B54CAB850A66781409BDC92EC035F1
E33BF970187700C459FBA93F0ADCB5EF454EEE57A28A9A4D4EBD4C39A8680068
4B0229BE71DE1E6C7D6B07A91E1667941CAF1694F3A42E5B99E532> |-
/h <1C60D8A8C9B7883C478830D20F0D4843C402F45DB9BECD77059F06484889
F902119F32FCEB497A95B198E71C1F94089E3E94F29A3051C3B126B0A4114AD7
2356E65E7E3BE096156B77074D24131680E327D8EFB42A9BD03329AA74062396
1BC0BFB051E3368135D06C4E611FAA43DEB16EA7B458F594D0E6E59189C74F6D
5C737F6DEBD2DA677B09C5FE4233> |-
/i <1C60D8A8C9B7883C478830D208D625ED16FFC4A91D386BCAC0EAE25622BB
1E44E76B43D5E9C02FB35DD2E716D71DB34EC5EF64E6676204311902DF93FA14
06434F9C55AC89918A3CB5264191C5A857EEB6C55C2A58756AE17BE12F9B5C9C
7E384136ACA12CCE72424CD36982DD> |-
/l <1C60D8A8C9B7883C478830D2BCF2481623045F78FD9BBADFFA8FB26EC510
AF3C97F27FDF441DB62E62A99256AEE465959742BAD1238681D42B1BB9244EBE
B8EFC1F9DC1EEC08C5424940618DBDED6D> |-
/m <1C60D8A8C9B7883C723869652C2C4BE148BA3D584F34AA5166985C580D4F
C2E7320A841F1FEBE11C84F5B65F33C2E7104A49F22050ED0B804913DA2B9A9B
B5C28241A23D6F9115B86D9999414DB56B6FB62589084A1E15D0E2F7ADBBF17D
3BEC313D7D5CE685493E6537618EB1E00AF99E6AE73BAA30CF47A99387C435F9
058FFEAB2950B5C55A47A99878FBBD1A19B085333728D666186421A061F913BB
DB44AD6DB95FF9209EFEAC75A300BEBC463F11D5C5> |-
/n <1C60D8A8C9B7883C478830D20F0D48516C48529F19D4390ACA3CB636CB31
9811B28F3CFCE38D45413DC6FB2F60CD27C9B65282627A370A88296FC733A876
DAAB2711060AC3E24A4B2BDE2B5A6B0094E1A0426DD1D62A3B7328123FBD866F
AEDB59AD4AB57FC303BB5EA4EEDB39B4BA18C7408D49E86AF1FF5B06EA08EDF6
F4EE2B0915E7E1> |-
/o <1C60D8A8C9B7883C4A7D20AF02F248519684D53CFC242E61C1496541B9CE
EA6A7897D7666699B03F21228EC7BA0848E96D7EFB315379B280A7E230CB4070
45785C70CEEF55D239B1E02EDF4333F6E8CF5B72DA> |-
/r <1C60D8A8C9B7883C478830D208D625E29143C2A39959DC29D475238ADF68
B1BD7C6C492E6716EEF7B6D4B965C1D1412053774CE4723D464CA28C476F182C
0703D959FCC8A832A73DD52954B8CD7FD30FA15290EF16DA5553B3730CC63414
3C74987A4EA08B1BFD1FE46C993C692D5AA5> |-
/s <1C60D8A8C9B7883C4A7D20AF02F24847FCBC8320F552027E1BBA91727306
4B448C1E219D6771761953C699F55B69457599199C875CDE2C30B3404A099D9B
D065A195F90F73C05A7D7F57AAC3D9F6EBB22D3F04B13B217ECCDF33DA1500F9
04D56D439E52DC2B512A70F982EC661140B0BDF112DF780936562D79444CE561
55462716CFDD2033F98AFA3CF96979279CA5205E169D73FDE5BCE3AEADA13903
F78E1FE55129> |-
/t <1C60D8A8C9B7883C4A7D20AF0A7E92D5613B65AFEF55536C0C6DE4AFE20A
10C6970CE6FF2962A760B86C1D6370051A1B73D246B7D29444833B836A1EF0D8
3987BF5FB340E234471E761030FA005E3AF2243B9712C481663C21DCF2CA6EC2
311095E46BBCC49268EA2E747C71F6FBE1B8091D703C> |-
/u <1C60D8A8C9B7883C4A7D20AF0A7E92C75650A881710C1F05569716C5E79C
8B5E9DB2C0282130B445F6B57C4C1EF5C3C4088CE7D59E0BC4663C84334AE7BA
E2D2B560AE21587354649ED8CFFE69A3646B532DDE50AE6692B8BC6E873FA805
5C1CC683BFA7767A858597E206274A2B4A78380B44A399BD22> |-
/v <1C60D8A8C9B7883C4A103CD4EAE01FD804A0FC808A4B05A1CCDBF8105C59
77886FA30B95DE52399F2602278CEFF27631D0210BE832CAB5740D0194255CEA
F6224C1CAA5232C6677DF2C9430039A8A9338092F66BD1F888FCB191E106F666
25432E847076772AEC8CF9B58C> |-
/w <1C60D8A8C9B7883C4A103CD4EAE01FE7EC75D3177B2C2FBC05FF760BEA5A
516239287D9A5EA8F87A7FC84516447DBC3D0998D25C9364221E071483844478
87BF80207CF003A42FD0B1A924B527934EC9A8EE1928E70B00D8F0E73DD63DB0
68236D3331866576B74AF1B4E40142C3F97FE564FDDF189DA62E475BAF08A81A
3C373E08FA7C6A6125CBCEA364E204184F602710219B3E1C3A1F10090B429172
97A1CD550FE6> |-
/x <1C60D8A8C9B7883C478830D208D625E202B27052B97E3F39D7983FD856E0
CF68EA6192CFECF20342512BDDE3A5FC2F89457723FD72613413C44E5760B6CD
C10601A970B37F52D6CB67913ABFBB4678B04D3E8EA46D39AAE09138EA9A42AD
31262C87F4CC3D48A7F703E63E8FC29551E84A105DF870666DDEEED2BCFAA23C
C6302642588B93056B22EA50411A72A83D6B523AC0E644524B> |-
/y <1C60D8A8C9B7883C37293D8C0E2267BFA553152603B4DA54F5A894399784
B91A8E06CBE6DEC3AC8D9C0DD0886321036E94AA26CC3354B4FB14F55996EB3C
DA19C616BF6CF7B5340E0B8A26B1EA35B1013F27D08C125A2FD2BD435AEB2350
A62EA560E2204267765BEA3EF26688C7F188E3A4BADE608BDE0B997F92B9D142
A1CD6B567FA291FD21C4DDB6E0833F54995A994EF141B01D311A69611AF5C129
1D597A7DD1368348EBC7835E7C649584CA0904FE7D9BE06EA2F713B459AB80C2
987C> |-
/braceleft <1C60D8A8C9B7883CF40923EC4D515696A78DB3358C4D5997030B
8784D1B42A2C941E72C3EAD6F0A6E60F1A9AD784AEFB13307FBA8734114EA5FE
5617F897EB502676B0A6A3346B38F7ED1E4E2FE91AA124DE5AEA9AFEA04E838A
29A23E2A1FAE5701E96D4BCB28D30F50E0F503635AA6439AC595A35AA300C3F2
8C5A89BA5F09B0B696EBCAE7F872014770FE499B0E0FACA29B8C71> |-
/braceright <1C60D8A8C9B7883CF40923EC4D515696A78DB3358C4D5997030
BBB6A4B603C5F7B9F9E746B3BF688EDCBBF64C15A1F39A369CEAFC5A5A994233
FF2E35FD42225469B896E7ABCA9A54E35BA5CDB94DA90B2BEDBCE53EDA030736
B1B3C11072F61A1086D73AFCA4AA7B919739AE6BB2E83F4DA91B6EC72B536635
60608DADDFE3ECC775F8CCAF26E6712FC4B9FA9208610E775EBCBB333F7888D2
DAB> |-
/.notdef <1C60D8A8C9B7883CC2> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEHD+CMTT8 /HEJAAA+CMTT8 findfont ct_VMDictPut
/ARMEHD+CMTT8*1 
[34{/.notdef}rp /quotedbl 5{/.notdef}rp /parenleft /parenright /asterisk /plus /comma 
/hyphen /period /slash /zero /one /two 7{/.notdef}rp /colon 
/semicolon /less /equal /.notdef /question 5{/.notdef}rp /E /F 
2{/.notdef}rp /I 4{/.notdef}rp /N 3{/.notdef}rp /R /.notdef /T 
/U 3{/.notdef}rp /Y /.notdef /bracketleft /.notdef /bracketright 3{/.notdef}rp 
/a /b /c /d /e /f /.notdef /h 
/i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r 
/s /t /u /v /w /x /y /.notdef 
/braceleft /.notdef /braceright 130{/.notdef}rp]
ARMEHD+CMTT8 nf
ARMEHD+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
87.96 124.92 mo
(c=vector\(1,n\);)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.19711 4.19709 4.19711 4.1971 
4.1971 0 ]xsh
87.96 133.8 mo
(d=vector\(1,n\);)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.19711 4.19709 4.19711 4.1971 
4.1971 0 ]xsh
87.96 142.8 mo
(hh=fabs\(x-xa[1]\);)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.19711 4.19709 4.19711 4.1971 
4.1971 4.1971 4.1971 4.1971 0 ]xsh
87.96 151.8 mo
(for\(i=1;i<=n;i++\){)
[4.1971 4.19711 8.51769 4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.1971 
4.1971 4.1971 4.1971 4.19711 8.87714 0 ]xsh
103.92 160.68 mo
(h=fabs\(x-xa[i]\);)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.1971 4.19711 4.19708 4.19711 
4.1971 4.1971 4.1971 0 ]xsh
103.92 169.68 mo
(if\(h==0.0\){)
[4.1971 8.51769 4.19711 8.39735 4.1971 8.51768 4.19711 4.19708 4.19711 8.63724 0 ]xsh
119.88 178.68 mo
(*y=ya[i];)
[4.1971 4.19711 4.1971 4.1971 4.19711 4.1971 4.1971 4.1971 0 ]xsh
119.88 187.68 mo
(*dy=0.0;)
[4.1971 4.19711 4.1971 4.1971 4.19711 4.1971 4.1971 0 ]xsh
119.88 196.56 mo
(FREERETURN)
[4.1971 4.19711 4.1971 4.1971 4.19711 4.1971 4.1971 4.1971 4.19711 0 ]xsh
103.92 205.56 mo
(}elseif\(h<hh\){)
[8.39735 4.1971 4.1971 4.19711 8.63725 4.1971 8.51768 4.19711 8.39734 8.5177 4.19708 4.19711 
8.51768 0 ]xsh
119.88 214.56 mo
(ns=i;)
[4.1971 4.19711 4.1971 4.1971 0 ]xsh
119.88 223.559 mo
(hh=h;)
[4.1971 4.19711 4.1971 4.1971 0 ]xsh
103.92 232.44 mo
(})sh
103.92 241.44 mo
(c[i]=ya[i];)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.1971 4.19711 0 ]xsh
103.92 250.439 mo
(d[i]=ya[i]+TINY;)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.1971 4.19711 4.19708 4.19711 
4.1971 4.1971 4.1971 0 ]xsh
%ADOBeginSubsetFont: DLPBAA+CMSS8 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /DLPBAA+CMSS8 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMSS8) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 122 /z put
def
/FontBBox {-65 -250 1062 761} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-21 -0 694 715 444 459 656 677] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [66] def
/StdVW [87] def
/StemSnapH [59 66] def
/StemSnapV [87 101] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
26 dict dup begin
/comma <1C60D8A8C9B845C878C1CFCCB5F5F9E3A52F2BE8C6E51D4412DCD0D6
EA31615EB5727C1F99B3> |-
/hyphen <1C60D8A8C9B80898F3CBCDD83627D931A2EA01B809A19B5E8B72FFB
32FE0> |-
/period <1C60D8A8C9B845C80860AB44A338CC6083B186B062A47301A0A0> |-
/T <1C60D8A8C9B60BC6FA14843A5E7B4F8106FF8EB164A22D0F763873A27898
5BEACD5BA3A81B0C31C87D718ED98197A92DE9AC18ED4C8A7625E52D02D4AF8D> |-
/a <1C60D8A8C9B7BDE3EC5076B9DD7E38E64E726A6C54B306A0C490A11BFAA5
A7F2BFE5727664F0EE3908FB9FE3259630AE60DA068A29D724CA5EDADE792224
9BD245A92F2621C6B1F65F693FB98346367FF40A5058BB83441A5B2D0F836DA5
C75B78DE7B95D7D78354EAC9ADFEAE9D23804AB0D195FD1BF3> |-
/b <1C60D8A8C9B7967682E8E54742F49032E80413F610CF78732B372CA38672
C3B9828FD54AC1A5BFA620E912D6B2EFEB4132CFC7F73BD0029ED58ADDD443B2
D87F4E0AB4F2EE5A0DBD5CD0DE2EEB58E0BF59CC7D37181AC388A8C5562B9A6F
FFBB4F925FF769FD4A18632E5A> |-
/c <1C60D8A8C9B74383EFE2AED1D20DB94D25F65EA0DDCFCFB4A826D66997A3
91AF5D7A5B5FBB73D056E81114D01C5FE3ACFCCA4AA70FA75F3348C80CC88517
20B7369EF1022939925699461F8805AE42EB5D6DBB> |-
/d <1C60D8A8C9B7967682E8E54742F49032E80413B97DE6ABD0BEA040F18EB6
B957ED534F93F87C25CCCE606AB15E87D378F5D78382F96D5F45BBC8BAC55E6F
32CE4F2223BBC310FCC7C379D2088E5EF1F1365A41A382DBFE9E946DAC1CFA85
0DB4A35843> |-
/e <1C60D8A8C9B74383EFFF10C87598D4A3D5946A491C4C0AC6E2B8E58E9559
2041F7F708467C72BD9F4C9318DC61A7F3A3A2A776A0B5C761D1F735E0EDD54B
F6FD0F1F356781F961059A6E20FD864DCA47293E8BA42814C097640FDB33F82B
4A97FA9A> |-
/f <1C60D8A8C9B827990E4578150F1625517477194A0A9F58BFB8DD527961FD
8E1E1C8A08A81670231949877B49F410182698C913BBD82FC48DBA8D095B203E
4740906A8EB5346A88FF0C26B91FB52874> |-
/g <1C60D8A8C9B7883C373F644420BDFE6066184AB4968D81C59DD800329B9D
81FBB06ED60AF28107A0DDF501D6F8A72DEB35FABD098C4C6724101AB7C40841
175CD716B26483B36ABE899150213E6E5D57A36A6307F5E38084B6A515D5BDEF
446308AFEEB3DAD1CB1FEB524393850D9F2761D0B9F9524E1192200BEFBFD5FA
D5E9C79EC986E315F412E36F02FA1E3C9BF92DFB5816F700890659AADB7DB279
65D140B5EA2197FE7C9AB634D3C2294EAD45A4B945C45FDB08FBABDCA4080059
3CB1BAE4CAD7BA670521646F11E006C82EDB2374C8B2CD24> |-
/h <1C60D8A8C9B79676885C9E82F970D03A3EA564673B28D25469F15427ABEA
1B44D3CC94AA13907FF2C9D6CD72F75DBBAF5F619F0A97C8B984A88D15812FE2
F3093055E243C78E0BE1F6F5> |-
/i <1C60D8A8C9B86FAE6A72F95D40DFC0014093276B4B8451DBCAF1A4FF5653
63ABB851E8B0984AFAFDEA481FD7589BA4> |-
/l <1C60D8A8C9B86FAE6A72F95C980400B16FB0876AC9DC237314DDD8191AED
CEE6> |-
/n <1C60D8A8C9B79676885C9E82F970D01D47FD1FE922CC158415BE4CC338A7
2202E1ED65025A24B388E99D73616E595F28C4A4014C1C85111B44755B1BCD4E
74ECA524192B0F> |-
/o <1C60D8A8C9B7883C4DCBD75181A7FF6E6971E5C276A30685F0E1C3A50A98
195E99E32A3BD4AC4B6385045A7923253550E4F4C560D3FD17093917A13A3580
186A49C75945BBE1162D2FA0F817EB6A3D2BE8E2DA3B7EC0211E5F> |-
/p <1C60D8A8C9B79676F81A548F2A3AA3F01980623A4E67AC1E039DAFC14730
4927D5B1AA45D7C48455D12B4D6726328822BD905764AE3B9EF2FDFF3CF4D4BB
8801EE59A2A3C7954518978E33AAE49E3BC325D9A7B3BE29C1F3C8B1F496A638
F8DFE0925BA886DCEE> |-
/q <1C60D8A8C9B79676F81A548F2A3AA3F019806275DD4AC867009963F38C76
CAED2AFD9F11208415788A3057D34EF31F16051FB5E093F8DD35C0E971582ECB
A5BBFF053F9184124019F32CD33A50A0C547F76AF50D740667CDF28CDF9E21C0
F0> |-
/r <1C60D8A8C9B801FDB7D99B90CA4C2B0E219FE557019AB7A075EE85AB1DB7
8178C0D4C6BE5A99A3C0709B3986AA8EB9916187BA> |-
/s <1C60D8A8C9B704CCCD10E3D8345FD533ED38163C3E3BB669B7A294C1DBDD
F78275A299FF2227F844370DB83C3EFAAEEDA78F237317918CE17D2489E24998
738E3756354592FE28D229BC7EEAAC44E9AAC80ED39081CF46F30A90D57A1062
439E799BFA68E8398A84FBF51768B0BE7E6AC49320A4AE84C1ABCE09E7D14E86
ED999DE409BA9B> |-
/t <1C60D8A8C9B73B17047A7EDA9F6F31E3EA1A295736984E1D18E34820EAA5
37FC6B9EA6B3F9D0B075F655BF278168F2718223D509FD407F3F41CE16107A08
FC979309226C82AB6E2F17D655FF539CC8CAADF2> |-
/u <1C60D8A8C9B7967682E3DDB03E6BB5EE72A3B68B77ECE4659260E2C49167
AF4E3E6F4BBF0D13961A011158B739C6EF267565215CB4438FC6DD7F94266BB1
0338CC1ADB6E> |-
/v <1C60D8A8C9B751D5746CBC3A5E1D072240F5E641991AFCF9D3C65AAB09E2
76830801ED12889F123B114B28606759705FA786836D971EB1E73F30> |-
/w <1C60D8A8C9B60BC6FA14843A9F920EAF3E3669EDF48260377441EF336A0A
86A1DC9C56363F2494483695FE64D2A3E7B5F17EF614B5CC980F2FD23846C319
F767C5C64233127071C20DEE479871D1CCD256C88EF06507F2F6A0069C253397
22A47165BE54955CB90C0D170C9D48DECC14A54907F7F3E9713878594C1D559B
F1> |-
/z <1C60D8A8C9B74D93D6C1C1914A22609E077966A3760742878DF216F0AB17
1C19A66EF01C2949398FF6BFFE2448BE952489C7792D9D1C83A5FCB3559F6991
55B8BCBBBF35E8> |-
/.notdef <1C60D8A8C9B808980A> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEHE+CMSS8 /DLPBAA+CMSS8 findfont ct_VMDictPut
/ARMEHE+CMSS8*1 
[44{/.notdef}rp /comma /hyphen /period 37{/.notdef}rp /T 12{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
2{/.notdef}rp /l /.notdef /n /o /p /q /r 
/s /t /u /v /w 2{/.notdef}rp /z 133{/.notdef}rp]
ARMEHE+CMSS8 nf
ARMEHE+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
206.749 250.439 mo
(The)
[5.74722 4.3365 0 ]xsh
ARMEHD+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
223.186 250.439 mo
(TINY)
[4.1971 4.1971 4.19711 0 ]xsh
ARMEHE+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
242.743 250.439 mo
(partisneededtopreventararezero-over-zero)
[4.32216 3.83597 2.87007 5.64207 1.99335 5.75681 4.32214 3.73877 3.73877 4.32214 3.7388 7.20255 
3.00235 6.83759 4.08228 2.88043 3.73877 3.9628 3.73877 4.32214 5.88196 6.59601 2.87009 3.83597 
2.87009 6.35776 3.72128 3.71725 2.87009 4.20905 2.87802 4.19711 3.96277 3.71725 2.87012 2.87799 
3.72131 3.71722 2.87012 0 ]xsh
221.16 259.32 mo
(condition.)
[3.71248 4.18275 4.32614 4.32613 2.03561 3.01112 2.03561 4.18275 4.32613 0 ]xsh
ARMEHD+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
87.9544 259.32 mo
(})sh
87.96 268.319 mo
(*y=ya[ns--];)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.19711 4.19711 4.19708 0 
]xsh
87.96 277.319 mo
(for\(m=1;m<n;m++\){)
[4.1971 4.19711 8.51769 4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.1971 
4.1971 4.1971 4.1971 8.87715 0 ]xsh
103.92 286.319 mo
(for\(i=1;i<=n-m;i++\){)
[4.1971 4.19711 8.51769 4.1971 4.19711 4.1971 4.19711 4.19708 4.19711 4.1971 4.1971 4.1971 
4.1971 4.1971 4.1971 4.19711 4.19708 4.19711 8.99748 0 ]xsh
119.88 295.199 mo
(w=c[i+1]-d[i];)
[4.1971 4.19711 4.1971 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 4.19711 4.19708 4.19711 
4.1971 0 ]xsh
119.88 304.199 mo
(h=xa[i+m]-x;h)
[4.1971 4.19711 4.1971 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 4.19711 4.19708 40.6771 
0 ]xsh
ARMEHE+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
214.071 304.199 mo
(willneverbezero,sincethiswastestedintheinitial-)
[5.73766 2.03561 2.03561 5.03555 4.32693 3.71327 3.96278 3.71725 6.12109 4.56204 6.83755 3.72128 
3.71326 2.88046 4.18353 5.51849 3.23746 2.03558 4.32697 3.71326 6.95789 3.00238 4.32693 2.03561 
6.47726 5.52167 4.07587 6.2374 3.0119 3.71329 3.23746 3.00235 3.71329 7.68231 2.03564 7.44244 
3.0119 4.32693 6.95792 2.03558 4.32693 2.03561 3.0119 2.03564 4.07587 2.03558 0 ]xsh
235.56 313.199 mo
(izingloop.)
[2.04039 3.70615 2.04039 4.32216 7.5573 2.0356 4.43701 4.19711 4.32214 0 ]xsh
ARMEHD+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
119.875 313.199 mo
(t=\(xa[i]-x\)*d[i]/h;)
[4.1971 4.19711 4.1971 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 4.19711 4.19708 4.19711 
4.1971 4.1971 4.1971 4.1971 4.1971 4.1971 0 ]xsh
119.88 322.079 mo
(dd=t-c[i+1];)
[4.1971 4.1971 4.19711 4.1971 4.1971 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 0 
]xsh
119.88 331.079 mo
(if\(dd==0.0\)nrerror\("Errorinroutineratint"\);)
[4.1971 8.39734 4.19711 4.1971 8.51768 4.19711 8.51768 4.1971 4.1971 4.1971 8.63725 4.1971 
4.1971 4.1971 4.1971 4.1971 4.19711 4.19708 4.19711 4.19708 4.19711 4.1971 4.1971 4.1971 
8.87715 4.1971 8.51772 4.19708 4.19708 4.19711 4.19711 4.19708 4.19711 8.63724 4.19708 4.19711 
4.19711 4.19708 4.19708 4.19714 4.19708 4.19708 0 ]xsh
ARMEHE+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
119.88 340.079 mo
(Thiserrorconditionindicatesthattheinterpolatingfunctionhasapoleatthe)
[5.73766 4.32693 2.03561 6.95708 3.71327 2.88045 2.88045 3.9572 6.60089 3.71725 4.18355 4.32693 
4.32693 2.03561 3.01192 2.03561 4.18355 8.2825 2.03561 4.32693 4.32693 2.03561 3.71329 4.07587 
3.01192 3.71327 7.07742 3.00235 4.32695 4.07585 6.84238 3.00235 4.32693 7.55725 2.03561 4.32214 
3.01193 3.71326 2.88046 4.56204 4.18353 2.03564 4.07587 3.00235 2.03561 4.32214 8.15744 2.64206 
4.32697 4.3269 3.71329 3.01193 2.03558 4.18356 8.2825 4.32693 4.07587 6.83673 7.7955 4.56207 
4.19708 2.03564 7.43768 4.07587 6.72198 3.01196 4.3269 0 ]xsh
119.88 349.079 mo
(requestedvalueof)
[2.87965 3.71646 4.32694 4.32693 3.71327 3.23663 3.00156 3.71327 8.28171 3.96198 4.07507 2.03481 
4.32137 7.43689 4.1963 0 ]xsh
ARMEHD+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
189.47 349.079 mo
(x)sh
ARMEHE+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
193.67 349.079 mo
(.)sh
ARMEHD+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
119.88 357.959 mo
(dd=w/dd;)
[4.1971 4.19711 4.1971 4.1971 4.19711 4.1971 4.1971 0 ]xsh
119.88 366.959 mo
(d[i]=c[i+1]*dd;)
[4.1971 4.19711 4.1971 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 4.19711 4.19708 4.19711 
4.1971 4.1971 0 ]xsh
119.88 375.959 mo
(c[i]=t*dd;)
[4.1971 4.19711 4.1971 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 0 ]xsh
103.92 384.839 mo
(})sh
103.92 393.839 mo
(*y+=\(*dy=\(2*ns<\(n-m\)?c[ns+1]:d[ns--]\)\);)
[4.1971 8.51769 4.19711 8.39735 4.1971 4.1971 4.1971 4.1971 4.1971 4.19711 4.1971 4.1971 
4.1971 8.87715 8.39734 4.1971 4.1971 4.1971 4.1971 8.63724 8.39735 4.1971 4.1971 4.1971 
4.19711 4.19708 4.19711 8.7576 8.39734 4.19708 4.19711 4.19711 4.19708 4.19711 4.19708 4.19711 
4.19708 4.19711 0 ]xsh
87.96 402.839 mo
(})sh
87.96 411.839 mo
(FREERETURN)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.19711 0 ]xsh
71.9999 420.719 mo
(})sh
ARMEHC+Helvetica*1 [7.9701 0 0 -7.9701 0 0 ]msf
71.9999 465.839 mo
(CITEDREFERENCESANDFURTHERREADING:)
[5.7543 2.21568 4.86967 5.31599 8.75423 5.7543 5.31599 4.86967 5.31599 5.7543 5.31599 5.75429 
5.75429 5.31599 8.31595 5.31598 5.7543 8.75424 4.86966 5.7543 5.51439 4.86967 5.75427 5.31601 
8.63467 5.7543 5.31601 5.31598 5.7543 2.21567 5.7543 6.20074 0 ]xsh
71.9999 477.72 mo
(Stoer,J.,andBulirsch,R.1980,)
[5.31599 2.21569 4.43137 4.43138 2.29373 4.25603 3.74515 2.21569 4.37558 4.43137 4.43137 6.35137 
5.31599 4.43137 1.76924 1.76924 2.65398 3.98506 3.98505 4.43138 4.25603 5.75429 4.25604 4.43137 
4.43138 4.43138 4.43137 0 ]xsh
%%IncludeResource: font Helvetica-Oblique
/ARMEHA+Helvetica-Oblique*1 
[46{/.notdef}rp /period 4{/.notdef}rp /three 13{/.notdef}rp /A /.notdef /C 
/D /E 3{/.notdef}rp /I 3{/.notdef}rp /M /N /O 
/P 2{/.notdef}rp /S 2{/.notdef}rp /V 10{/.notdef}rp /a /b 
/c /d /e /f /.notdef /h /i 2{/.notdef}rp 
/l /m /n /o /p /q /r /s 
/t /u 3{/.notdef}rp /y 134{/.notdef}rp]
ARMEHA+Helvetica-Oblique nf
ARMEHA+Helvetica-Oblique*1 [7.9701 0 0 -7.9701 0 0 ]msf
185.084 477.72 mo
(IntroductiontoNumericalAnalysis)
[2.21568 4.43138 2.21568 2.65398 4.43138 4.43138 4.43137 3.98505 2.2157 1.76923 4.43138 6.47173 
2.21568 6.47173 5.75429 4.43137 6.63904 4.43138 2.77432 1.76926 3.98505 4.43137 3.68924 5.31598 
4.4314 4.43137 1.76923 3.98508 3.98505 1.76923 0 ]xsh
ARMEHC+Helvetica*1 [7.9701 0 0 -7.9701 0 0 ]msf
307.072 477.72 mo
(\(NewYork:Springer-Verlag\),)
[2.65399 5.75427 4.31104 7.67429 4.23605 4.43137 2.77435 3.98505 4.25601 5.31601 4.43137 2.77432 
1.76926 4.43137 4.43137 4.43137 2.65399 2.65399 4.71585 4.43137 2.77432 1.76926 4.43137 4.43137 
2.65399 0 ]xsh
%ADOBeginSubsetFont: RQIBAA+CMSY10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /RQIBAA+CMSY10 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.035 def
/BaseFontName (CMSY10) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 120 /section put
def
/FontBBox {-29 -960 1116 775} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 -0 683 705] def
/OtherBlues [-124 -119] def
/BlueScale 0.04379 def
/StdHW [40] def
/StdVW [85] def
/StemSnapH [40 55] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/section <1C60D8A8C9B77FE2C21025717E56A95A2AED779B59275C4388C38A
6E34199A2881F057C86D2C64D6AD83C219CE4FC24811B35CF11A716830781B4C
55499B1CCAAE25531CE1DD3A5469743C4170F451EC317EFC7B35F210032592F4
F33AB5AD76DC73D4A3EC2EAC36EFFFD7DC3DBF13129CC8D5CDAC08F016F1C876
7835BFA7D602B4372E57AF819BB8627B128B53816CCB23266A5C248667D515A1
F282A274C98D35BE4D3C2AF3353C4325B242AC6FF18226BB2F1BF65A287413B2> |-
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEHF+CMSY10 /RQIBAA+CMSY10 findfont ct_VMDictPut
/ARMEHF+CMSY10*1 
[120{/.notdef}rp /section 135{/.notdef}rp]
ARMEHF+CMSY10 nf
ARMEHF+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
91.08 487.68 mo
(x)sh
ARMEHC+Helvetica*1 [7.9701 0 0 -7.9701 0 0 ]msf
95.5192 487.68 mo
(2.2.[1])
[4.43137 2.21568 4.43138 5.93533 2.21568 4.43137 0 ]xsh
72.0002 499.68 mo
(Gear,C.W.1971,)
[6.20074 4.43137 4.43137 2.29373 3.89579 5.51439 2.21569 6.9235 3.89579 4.43137 4.43138 4.43137 
4.43138 0 ]xsh
ARMEHA+Helvetica-Oblique*1 [7.9701 0 0 -7.9701 0 0 ]msf
133.424 499.68 mo
(NumericalInitialValueProblemsinOrdinaryDifferentialEquations)
[5.75429 4.43138 6.63902 4.43138 2.77434 1.76924 3.98505 4.43138 3.44933 2.21568 4.43138 1.76924 
2.21568 1.76924 4.43138 3.44934 4.71584 4.43138 1.76924 4.43137 6.11148 5.31599 2.65398 4.43138 
4.31102 1.76924 4.43138 6.63904 5.66513 1.76926 6.11147 6.20073 2.65399 4.43137 1.76923 4.4314 
4.43137 2.89389 5.5448 5.75427 1.76926 2.21567 1.9758 4.43137 2.65399 4.4314 4.43134 2.2157 
1.76926 4.43137 3.56891 5.31598 4.43137 4.43137 4.4314 2.2157 1.76923 4.43137 4.43137 0 
]xsh
ARMEHC+Helvetica*1 [7.9701 0 0 -7.9701 0 0 ]msf
365.059 499.68 mo
(\(Englewood)
[2.65399 5.31598 4.43137 4.4314 1.76923 4.31104 5.63394 4.43137 4.4314 0 ]xsh
91.0799 509.64 mo
(Cliffs,NJ:Prentice-Hall\),)
[5.7543 1.76924 1.76924 2.21568 2.21568 3.86471 5.57587 5.7543 3.98505 5.45554 5.31598 2.65399 
4.43137 4.43138 2.21568 1.76924 3.98506 4.43137 2.65399 5.75427 4.43138 1.76924 1.76924 2.65398 
0 ]xsh
ARMEHF+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
183.283 509.64 mo
(x)sh
ARMEHC+Helvetica*1 [7.9701 0 0 -7.9701 0 0 ]msf
187.722 509.64 mo
(6.2.)
[4.43138 2.21568 4.43137 0 ]xsh
72.0005 521.64 mo
(Cuyt,A.,andWuytack,L.1987,)
[5.75429 4.43138 3.98505 2.21568 4.85539 5.31599 2.21568 4.73583 4.43137 4.43137 6.95152 7.28375 
4.43138 3.98505 2.21568 4.43138 3.8647 3.98505 4.73584 4.43137 4.73584 4.43137 4.43138 4.43138 
4.43137 0 ]xsh
ARMEHA+Helvetica-Oblique*1 [7.9701 0 0 -7.9701 0 0 ]msf
187.765 521.64 mo
(NonlinearMethodsinNumericalAnalysis)
[5.75429 4.43138 4.43137 1.76924 1.76924 4.43138 4.43137 4.43138 5.05377 6.63904 4.43137 2.2157 
4.43137 4.43138 4.43137 6.5052 1.76926 6.95151 5.7543 4.43137 6.63904 4.43137 2.77432 1.76926 
3.98505 4.43137 4.16904 5.31601 4.43137 4.43137 1.76926 3.98505 3.98505 1.76923 0 ]xsh
ARMEHC+Helvetica*1 [7.9701 0 0 -7.9701 0 0 ]msf
336.654 521.64 mo
(\(Amsterdam:North-)
[2.65399 5.31598 6.63904 3.98505 2.2157 4.43137 2.65399 4.43137 4.43137 6.63904 4.85541 5.75427 
4.43137 3.01425 2.21567 4.43137 0 ]xsh
91.081 531.6 mo
(Holland\),Chapter3.)
[5.7543 4.43137 1.76924 1.76924 4.43138 4.43137 4.43138 2.65398 5.57588 5.75429 4.43138 4.43138 
4.43137 2.21568 4.43138 6.13373 4.43137 0 ]xsh
%%IncludeResource: font Helvetica-BoldOblique
/ARMEHG+Helvetica-BoldOblique /Helvetica-BoldOblique findfont ct_VMDictPut
/ARMEHG+Helvetica-BoldOblique*1 
[46{/.notdef}rp /period 4{/.notdef}rp /three 15{/.notdef}rp /C 5{/.notdef}rp /I 
9{/.notdef}rp /S 13{/.notdef}rp /a /b /c /.notdef /e 
3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o /p 
/.notdef /r /.notdef /t /u 138{/.notdef}rp]
ARMEHG+Helvetica-BoldOblique nf
ARMEHG+Helvetica-BoldOblique*1 [14.944 0 0 -14.944 0 0 ]msf
72 583.56 mo
(3.3CubicSplineInterpolation)
[8.30886 4.15443 12.5081 10.7893 9.13068 9.13067 4.15443 13.2284 9.96753 9.13068 4.15443 4.15442 
9.13068 13.3495 4.15442 9.13068 4.97624 8.30885 5.8131 9.13068 9.13068 4.15443 8.30884 4.97626 
4.15442 9.13068 0 ]xsh
%%IncludeResource: font Times-Roman
/ARMEHB+Times-Roman*1 
[44{/.notdef}rp /comma /.notdef /period 2{/.notdef}rp /one /.notdef /three 
19{/.notdef}rp /G 4{/.notdef}rp /L 20{/.notdef}rp /a /b /c 
/d /e /f /g /h /i 2{/.notdef}rp /l 
/m /n /o /p /.notdef /r /s /t 
/u /v /w 136{/.notdef}rp]
ARMEHB+Times-Roman nf
ARMEHB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
91.92 613.44 mo
(Givenatabulatedfunction)
[7.19285 2.5295 4.86175 4.42324 9.18153 8.74303 2.76961 4.42323 4.74121 4.98129 2.76961 4.42325 
2.76961 4.42323 9.18153 3.31747 4.98129 4.98131 4.42325 2.76961 2.76959 4.98129 0 ]xsh
%ADOBeginSubsetFont: MMFAAA+CMMI10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /MMFAAA+CMMI10 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/BaseFontName (CMMI10) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 46 /period put
dup 65 /A put
dup 66 /B put
dup 78 /N put
dup 105 /i put
dup 120 /x put
dup 121 /y put
def
/FontBBox {-32 -250 1048 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 -0 683 705 431 442 453 466] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [31] def
/StdVW [72] def
/StemSnapH [25 31] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
9 dict dup begin
/comma <1C60D8A8C9B854D0F83823896563389F99F93F23FF16CE93B743AB7C
376AC821786AAEDE7270059A6FF1CFEB37235A20C21D908EB2B0616D97378D86
D24E973D8D07D83E6BD6C0E31C021B3C13AA12FA9436B6F6> |-
/period <1C60D8A8C9B854D088E8E1B7306BEE53606180C9D8E09A11AAC6162
445F3509DC276AA079959B131> |-
/A <1C60D8A8C9B6E3FA234780E51FBD3BBFBEBC2631360DD7C25F33C30680CC
1A882C17B78DB471C55CC438374CF0500DE96583629259E66A380070E3947410
1D134A332FAD86FBF1C6C0FC85637A88280EE452A44957D6DFE9CAC4CC8C0B1E
0D8A44AD94DC0563BBBB61087D33FB01EF2295A71D594DF19B55EB59A712E2AE
76106A5A9AB8634ADA5A36204C6E39215D9DFB7BF5A23AB41B732EB6243EADEF
9003C540C56ECAAD84590980E261A5EBD6060F1EF15FD5> |-
/B <1C60D8A8C9B6EA91BDC4C26718E8CC2017378E9F0D3EE1D411E58A921F5F
D4F42CC7A7122D35E8A0CFD07A73AA7D0A964404DEA71C2C2051017D3034C832
EC5FFF8BE92E20CC7993961FE3D90C4FBB07147146C1BDA3133A0CC2FEFF4AE5
5DF7912FCACB9A45BCA2B95B45FCFB55A9BC5A99D5319E88B009877768FCCFCD
2C4E8CE3D5CAC32E06AF5523E2067CF963552E8BAC3684378E4D2DC5A571B630
BDA250A5F1EFB35C43A15A8A048D02B57E7AC118C90D1441233BC3A1> |-
/N <1C60D8A8C9B6D671D38ABEF2C3AA4E9EF85233BCD577CC743D9BB72B06D1
C34EFFA73A8EECAE181D7E0042CE8F56F221FF779F17D437F7443615FB8D52E0
7A6980076CEF2C0E05CD0FE4C8C8C807EBD67840343BFBC95A08669392F72179
EDD2F4C343B04558540E292A683214DA12521D574D6469F99DFFA755BA1A2F39
88A639DD4D3FC28B77E09E512F4382A49FEA62F84B18CA82115A48865FC3D2FD
E8F27EF8866D2608E80E86EAD43D4F9279E5C3B7B4E3C1EBA7FF1CA06779670B
8855CFCE548DDF5F4514A279A3> |-
/i <1C60D8A8C9B8137927A3D75933885CCD9DA536B76A74FB1345980032DE4D
53A7A8B5C12B51C09CC96E0F46F8DA9AD73CECCCF1CC5ECF0CA5E5A4BF6227C3
C57E11875D7C7C60874D14EB46036077E16068A017FD5B01B7B9041731C06120
BD3E988D4CDE1A1C3E66F1DB7A255D4E8723A6B34F75652AA86BC6365D3BEFFD
A0B6B6F69D89000264413CFBC0E88B50B1A1845E979129BFEE97390832699AC8
411A2DCCD46ABA420C0DFAA59D> |-
/x <1C60D8A8C9B7FF2B5E691B02ABF5E6B36349D70F01EDCA1CD9EAA7D42C0C
D3775D212B1A0D3DAC3A979A163114C48B359F5B767254ECAFBA627EEAB5004E
5F287E21D1D40C030BD9B088F0AD749D63A2E8A505BC208CD0E68AC6F5ABB682
EEEDF99234D0D423385B905D018FF751827D822E9B656B7606E7C9937680BD2F
E67DB02D1BD1BEEA015CC64F197C1A9477A24BC5FD41A198210AE3B1CF7C11C4
61E37B78D075740C0279207334FF27799FB349732AFD1D730E14B11CF1BC247B
EFBEC79CE40DBC31725DADD888B5B0345E950DFABA> |-
/y <1C60D8A8C9B751D5041DDABC011B22E2674EC9D2008402DC54EAC5EE3379
40D4E00C5876708EBFC0F089816A923F7414E12F4EC86FE029C9164FB00D37CE
3824BFB04DBE0C4C2733327610FB8442214C961F4823DCB09F8F2DF872A8CE22
62AC898EC0E84871D4EC8F51AF0892D628BA7C3C799F6D511F178BEE37A8BECE
AA043542F6F8FB29E710A79A7852CCE7858DA82878DF2512D738066A24C3F23D
5749E869C5C3A41524DE46794B0E3880C3C1C4EB7FF85447E9075DF4909C0859
7159F3848B34F8F9CB8E9A6A1B158B5BD9C5F03DD569D590DA5F215711D7> |-
/.notdef <1C60D8A8C9B81F2CC3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEHH+CMMI10 /MMFAAA+CMMI10 findfont ct_VMDictPut
/ARMEHH+CMMI10*1 
[44{/.notdef}rp /comma /.notdef /period 18{/.notdef}rp /A /B 11{/.notdef}rp 
/N 26{/.notdef}rp /i 14{/.notdef}rp /x /y 134{/.notdef}rp]
ARMEHH+CMMI10 nf
ARMEHH+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
206.62 613.44 mo
(y)sh
%ADOBeginSubsetFont: IPIBAA+CMMI7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /IPIBAA+CMMI7 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/BaseFontName (CMMI7) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 105 /i put
dup 106 /j put
def
/FontBBox {0 -250 1171 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 -0 683 703 431 441 451 463] def
/OtherBlues [-204 -194] def
/BlueScale 0.04379 def
/StdHW [32] def
/StdVW [81] def
/StemSnapH [32 36] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/i <1C60D8A8C9B70721B9F639782C8460B97E82801AD0D8A919DC5D9CAA4C68
FBE7833AC2F83808014E455261AE4698D1787D69206B38071478CB577B72EF41
ED0606485A0805B327A9541BF99C223B853428820C7432E93F64332505182833
A9A1726F67F49595C0D6B4E36728E08E3A3FFE1D3400C0426C9F7D546B609ED9
847726C531FCA5CF35B9B04381F81797F4E937A123F607399D53953A016040EB
4EB08C885D7568DA709FDAC1486D> |-
/j <1C60D8A8C9B742B24161FBB87CDB8F59E0247C68AA800C77616BDB6AE441
32759D578A9DF014C497635F6CC7AE3EE1F35E7CDE1BEC8E720A7F94A1ED61DE
A83FCB00AB458A1501A9D33004FFB6D355935C859A82209183A28E90946EA2EC
7F5D9833DDA441427EDFD781CB6D311B8067F0AECD5F9DEAEB9219E16A3D36E3
81A03206473C128D17597493CE0BA56FD9F44B8CD913B9ABEFA49655B5B8558A
099053BB33> |-
/.notdef <1C60D8A8C9B81F2CC3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEHI+CMMI7 /IPIBAA+CMMI7 findfont ct_VMDictPut
/ARMEHI+CMMI7*1 
[105{/.notdef}rp /i /j 149{/.notdef}rp]
ARMEHI+CMMI7 nf
ARMEHI+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
212.16 614.88 mo
(i)sh
%ADOBeginSubsetFont: BKUAAA+CMR10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /BKUAAA+CMR10 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMR10) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 49 /one put
dup 61 /equal put
def
/FontBBox {-251 -250 1009 969} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 -0 683 705 431 448 666 677] def
/OtherBlues [-206 -194] def
/BlueScale 0.04379 def
/StdHW [31] def
/StdVW [69] def
/StemSnapH [22 31] def
/StemSnapV [69 89] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
6 dict dup begin
/parenleft <1C60D8A8C9B7361F0ED0EA8752539777BEBB9273D40DABBCD23C
A817496382F6B840E6A1C46E658A7FF24A9D166F78212AF4C797827975E02701
CDC72E754F4000DECEE47D430E4D5342BD530D47AAD28508160E8A23665C3BDA
FA73039FCB9EE1AB6A300F016FDD82E5> |-
/parenright <1C60D8A8C9B7361F0ED0EA8752539777A78857B993CC758AF4B
0072B7985470F64120F1034EB48F73B7B659942A90C7AB7260686E937E5258E6
B309A8E598CE40EEFE407AA4D2ED07136A6BD81A0336437FF05EC04649152730
73C8D27D659011926A923EA546CAE8D> |-
/plus <1C60D8A8C9B6FF863A85C280B948C534E29FDD1A5E7C480501AD35704
8AA30458C9884AF16EB577582A775159DC46FB447D91E6A2A77A0FD27F503D8B
3C75521CFA7BBCEB8B902740AC2F9723F945A89D3342F7D5DADAC25CE7DC3> |-
/one <1C60D8A8C9B7A73DC579B9CE13A4EA8C203AFC890ABD6F58341B006CF1
BDD8FED3A7238E01F751FEAC75885229C293891E5636AD630D9C884528B6FEF0
0728A740ED77D054B4743ECA5E3947520FEF6B23D548765D11> |-
/equal <1C60D8A8C9B6FF86F5F7C936DCCEFAB8EDDDE1C4D97CDB55B3C9C87D
7B2BAB4AEAEAC0B654A106A73C0C0E7D9BE088117935915C3B6ED2E10E45916B
408B696BFD54F5ED27BB8E0386045AAF2DF481> |-
/.notdef <1C60D8A8C9B81F2CC3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEHJ+CMR10 /BKUAAA+CMR10 findfont ct_VMDictPut
/ARMEHJ+CMR10*1 
[40{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp /one 11{/.notdef}rp 
/equal 194{/.notdef}rp]
ARMEHJ+CMR10 nf
ARMEHJ+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
219.96 613.44 mo
(=)sh
ARMEHH+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
232.199 613.44 mo
(y)sh
ARMEHJ+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
237.478 613.44 mo
(\()sh
ARMEHH+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
241.318 613.44 mo
(x)sh
ARMEHI+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
246.96 614.88 mo
(i)sh
ARMEHJ+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
250.32 613.44 mo
(\))sh
ARMEHH+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
254.16 613.44 mo
(,i)
[8.88167 0 ]xsh
ARMEHJ+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
270.959 613.44 mo
(=1)
[12.2411 0 ]xsh
ARMEHH+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
288.237 613.44 mo
(...N)
[2.76163 2.76163 2.76163 0 ]xsh
ARMEHB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
305.633 613.44 mo
(,focusattentiononone)
[7.29062 3.31747 4.98132 4.42322 4.98132 8.07559 4.42325 2.76959 2.76962 4.42325 4.98129 2.76959 
2.76959 4.98129 9.061 4.98129 9.30109 4.98129 4.98129 0 ]xsh
72.0014 625.44 mo
(particularinterval,between)
[4.9813 4.42325 3.31747 2.7696 2.76961 4.42324 4.9813 2.7696 4.42324 5.95757 2.7696 4.9813 
2.76961 4.42324 3.31747 4.74121 4.42325 2.76959 5.25029 4.98131 4.42325 2.76959 7.19284 4.42325 
4.42325 0 ]xsh
ARMEHH+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
184.22 625.44 mo
(x)sh
ARMEHI+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
190.44 626.88 mo
(j)sh
ARMEHB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
197.52 625.44 mo
(and)
[4.42325 4.98129 0 ]xsh
ARMEHH+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
214.666 625.44 mo
(x)sh
ARMEHI+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
220.44 626.88 mo
(j)sh
%ADOBeginSubsetFont: GLBBAA+CMR7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /GLBBAA+CMR7 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMR7) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 49 /one put
def
/FontBBox {-27 -250 1122 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 -0 683 703 431 446 664 674] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [36] def
/StdVW [79] def
/StemSnapH [28 36] def
/StemSnapV [79 95] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/plus <1C60D8A8C9B593D6D8BB90123291AA259E2A2720FD4880A5BA5668DBB
3FDE6DF999803DA9EDD496C11A38D856114909900BC9E753D6A6BF5C2786C87D
5C6E0CE8F6625D8E3C55B080D69D2651DDE1B21281AD85504D17B37BA0750A5> |-
/one <1C60D8A8C9B7E2CE5B62E9FEEC2E64DB4DF57A0DEE8F2DC4BC1D285E2D
6E93583C8BA769F966BA0D2874BA4F6692804A12EE154BF6C4128EE336963B1B
27F1A610EA701BA67016777C46DECA8A9AE7E6470CDD1978599A2E> |-
/.notdef <1C60D8A8C9B73A41C7> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEHK+CMR7 /GLBBAA+CMR7 findfont ct_VMDictPut
/ARMEHK+CMR7*1 
[43{/.notdef}rp /plus 5{/.notdef}rp /one 206{/.notdef}rp]
ARMEHK+CMR7 nf
ARMEHK+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
224.039 626.88 mo
(+1)
[6.1188 0 ]xsh
ARMEHB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
234.72 625.44 mo
(.Linearinterpolationinthatintervalgives)
[7.17108 6.08707 2.76961 4.98129 4.42326 4.42322 6.07712 2.76959 4.98132 2.76959 4.42325 3.31747 
4.98129 4.98129 2.76959 4.42328 2.76959 2.76959 4.98129 7.50085 2.76959 7.86148 2.76959 4.98132 
4.42325 5.52924 2.76959 4.98129 2.76962 4.42325 3.31744 4.74121 4.42325 5.52927 4.98126 2.52954 
4.86176 4.42322 0 ]xsh
72.0009 637.44 mo
(theinterpolationformula)
[2.7696 4.9813 8.86358 2.7696 4.9813 2.7696 4.42325 3.31747 4.98129 4.98131 2.76959 4.42325 
2.76961 2.76959 4.98131 9.30107 3.31747 4.98129 3.31747 7.75092 4.98129 2.76959 0 ]xsh
ARMEHH+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
202.081 660.719 mo
(y)sh
ARMEHJ+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
210.119 660.719 mo
(=)sh
ARMEHH+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
220.678 660.719 mo
(Ay)
[7.43907 0 ]xsh
ARMEHI+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
233.04 662.16 mo
(j)sh
ARMEHJ+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
239.4 660.72 mo
(+)sh
ARMEHH+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
249.359 660.72 mo
(By)
[8.04382 0 ]xsh
ARMEHI+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
262.32 662.16 mo
(j)sh
ARMEHK+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
265.919 662.16 mo
(+1)
[6.1188 0 ]xsh
ARMEHJ+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
379.08 660.72 mo
(\()sh
ARMEHB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
382.92 660.72 mo
(3.3.1)
[4.98129 2.49066 4.98129 2.49066 0 ]xsh
ARMEHJ+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
402.605 660.72 mo
(\))sh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/ARMEHJ+CMR10*1 uf
/ARMEHJ+CMR10 uf
/BKUAAA+CMR10 uf
/ARMEHF+CMSY10*1 uf
/ARMEHF+CMSY10 uf
/RQIBAA+CMSY10 uf
/ARMEHI+CMMI7*1 uf
/ARMEHI+CMMI7 uf
/IPIBAA+CMMI7 uf
/ARMEHE+CMSS8*1 uf
/ARMEHE+CMSS8 uf
/DLPBAA+CMSS8 uf
/ARMEHA+Helvetica-Oblique*1 uf
/ARMEHK+CMR7*1 uf
/ARMEHK+CMR7 uf
/GLBBAA+CMR7 uf
/ARMEHD+CMTT8*1 uf
/ARMEHD+CMTT8 uf
/HEJAAA+CMTT8 uf
/ARMEHG+Helvetica-BoldOblique*1 uf
/ARMEHH+CMMI10*1 uf
/ARMEHH+CMMI10 uf
/MMFAAA+CMMI10 uf
/ARMEHC+Helvetica*1 uf
/ARMEHB+Times-Roman*1 uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Page: 2 2
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
[
[/Label (2)]
[/TrimBox [12 51.377624511719 583.08001708984 790.42236328125]]
[/BleedBox [12 51.377624511719 583.08001708984 790.42236328125]]
[/ArtBox [12 51.5776 583.08 790.622 ]]
]xpdfm
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -842 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
12 51.5776 mo
12 790.622 li
583.08 790.622 li
583.08 51.5776 li
cp
clp
[0.933137 0 0 0.933137 12 51.5776 ]ct
false sop
/1 
[/DeviceGray] /CSA add_res
0 gry
%%IncludeResource: font Times-Roman
/ARMEHL+Times-Roman /Times-Roman findfont ct_VMDictPut
/ARMEHL+Times-Roman*1 
[49{/.notdef}rp /one 2{/.notdef}rp /four 203{/.notdef}rp]
ARMEHL+Times-Roman nf
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
72 84.6 mo
(114)
[4.9813 4.9813 0 ]xsh
%%IncludeResource: font Helvetica-Oblique
/ARMEHM+Helvetica-Oblique /Helvetica-Oblique findfont ct_VMDictPut
/ARMEHM+Helvetica-Oblique*1 
[46{/.notdef}rp /period 4{/.notdef}rp /three 15{/.notdef}rp /C /.notdef /E 
3{/.notdef}rp /I 23{/.notdef}rp /a 2{/.notdef}rp /d /e 2{/.notdef}rp 
/h /i 2{/.notdef}rp /l /.notdef /n /o /p 
/.notdef /r /.notdef /t 3{/.notdef}rp /x 135{/.notdef}rp]
ARMEHM+Helvetica-Oblique nf
ARMEHM+Helvetica-Oblique*1 [8.9664 0 0 -8.9664 0 0 ]msf
163.624 84.6 mo
(Chapter3.InterpolationandExtrapolation)
[6.4736 4.98532 4.98532 4.98531 2.49266 4.98532 5.14575 4.98532 14.8528 2.49266 4.98532 2.49265 
4.98532 3.22604 4.98532 4.98532 1.9904 4.98531 2.49268 1.99039 4.98532 7.02518 4.98532 4.98532 
7.26547 5.98053 4.48318 2.49265 2.8656 4.98532 4.98532 4.98532 1.99039 4.98535 2.49261 1.99042 
4.98532 0 ]xsh
72 88.92 mo
406.8 88.92 li
406.8 88.44 li
72 88.44 li
cp
f
%%IncludeResource: font Helvetica
/ARMEHN+Helvetica /Helvetica findfont ct_VMDictPut
/ARMEHN+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/period /slash /zero /one /two /three /four /five 
/.notdef /seven /eight /nine /colon 5{/.notdef}rp /at /A 
/B /C /D /E /F /G /H /I 
2{/.notdef}rp /L /M /N /O /P /.notdef /R 
/S /T /U 11{/.notdef}rp /a /b /c /d 
/e /f /g /h /i /.notdef /k /l 
/m /n /o /p /.notdef /r /s /t 
/u /v /w /.notdef /y 134{/.notdef}rp]
ARMEHN+Helvetica nf
ARMEHN+Helvetica*1 [0 7 7 0 0 0 ]msf
466 178.92 mo
(Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING \(ISBN 0-521-43108-5\))
[4.66895 3.89203 5.83093 3.89197 1.55389 3.89203 1.94598 3.89203 3.89197 3.89197 3.89203 1.94598 
1.94604 2.33093 3.89197 5.83093 1.94604 5.05389 5.05389 5.83093 4.66895 5.05389 1.94598 5.05389 
4.66895 3.89203 1.94598 5.05389 4.66895 5.05389 1.94598 4.66895 4.66895 4.66895 1.94601 1.94601 
5.05389 1.94598 5.05389 1.94598 1.94601 4.27695 5.05389 4.66895 1.94598 4.66895 5.05389 4.27698 
1.94598 5.44598 4.27698 1.94598 4.66895 5.05389 1.94598 4.66895 5.05389 4.27698 1.94598 4.27695 
1.94601 5.05389 1.94598 5.05389 5.44598 5.83096 4.66895 5.05389 4.27695 1.94598 5.05389 5.44601 
1.94601 2.33093 1.94598 4.66895 4.66895 5.05389 1.94601 3.892 2.33093 3.89203 3.89197 3.89203 
2.33093 3.892 3.892 3.89197 3.89203 3.89197 2.33099 3.89197 0 ]ysh
458 178.92 mo
(Copyright \(C\) 1988-1992 by Cambridge University Press.Programs Copyright \(C\) 1988-1992 by Numerical Recipes Software. )
[5.05389 3.89197 3.89203 3.5 2.33093 1.55389 3.89203 3.89197 1.94598 1.94604 2.33093 5.05389 
2.33093 1.94598 3.89203 3.89203 3.89197 3.89197 2.33099 3.89197 3.89203 3.89197 3.89203 1.94598 
3.89197 3.5 1.94604 5.05389 3.89197 5.83096 3.892 2.33093 1.55389 3.89203 3.89197 3.89203 
1.94598 5.05389 3.892 1.55389 3.5 3.892 2.33093 3.5 1.55389 1.94601 3.5 1.94601 
4.66895 2.33093 3.892 3.5 3.5 3.69601 4.66895 2.33093 3.892 3.892 2.33093 3.89203 
5.83093 3.5 1.94598 5.05389 3.89203 3.89197 3.5 2.33096 1.55389 3.892 3.892 1.94601 
1.94598 2.33093 5.05389 2.33096 1.94601 3.89197 3.89203 3.89197 3.89203 2.33093 3.892 3.892 
3.892 3.892 1.94598 3.89203 3.5 1.94598 5.05389 3.892 5.83096 3.89197 2.33096 1.55389 
3.5 3.892 1.55389 1.94598 5.05389 3.89203 3.5 1.55389 3.89197 3.89203 3.5 1.94598 
4.66895 3.89197 1.94604 1.94598 5.05389 3.89197 2.33099 3.89197 1.94598 0 ]ysh
449.999 178.92 mo
(Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copyin)
[4.66895 3.89203 2.33093 5.83093 1.55389 3.5 3.5 1.55389 3.89197 3.89203 1.94598 1.55389 
3.5 1.94598 3.89203 2.33093 3.89203 3.89197 1.94604 3.89197 3.89197 1.94604 1.94598 3.89203 
2.33093 1.94598 1.55389 3.89197 1.94604 3.89197 2.33093 3.89203 3.89203 1.94598 1.94598 3.892 
3.5 3.892 2.33093 3.5 1.94601 1.94601 3.89197 1.94601 5.83096 3.89197 3.5 3.89203 
1.94598 3.892 3.892 3.892 1.94601 3.89197 3.89203 3.89197 3.89203 2.33093 1.94598 3.5 
3.89203 3.89197 3.5 1.94601 1.94601 3.89197 2.33096 1.94601 1.94598 3.892 3.892 1.55389 
2.33093 1.94601 3.892 5.05389 3.892 1.94601 3.89197 3.89203 2.33093 3.5 3.892 3.892 
3.892 1.55389 1.94601 3.89197 3.5 3.89203 1.94598 1.94598 4.27698 3.89197 2.33096 1.94601 
3.89197 3.89203 2.33093 1.94598 2.33096 3.892 3.892 2.33096 3.89197 3.89203 3.89197 3.5 
1.94598 1.55389 3.89203 3.89197 1.94604 1.94598 3.89197 2.33099 1.94598 3.89197 3.89203 3.5 
1.94598 3.5 3.89203 3.89197 3.5 1.55389 0 ]ysh
449.999 573.034 mo
(g of machine-)
[3.89203 1.94598 3.89197 1.94604 1.94598 5.83093 3.89203 3.5 3.89197 1.55389 3.89203 3.89197 
0 ]ysh
441.999 178.92 mo
(readable files \(including this one\) to any servercomputer, is strictly prohibited. To order Numerical Recipes booksor CDROMs, v)
[2.33093 3.89203 3.89197 3.89203 3.89197 3.89203 1.55389 3.89197 1.94598 1.94604 1.55389 1.55389 
3.89197 3.5 1.94604 2.33093 1.55389 3.89197 3.5 1.55389 3.89203 3.89197 1.55389 3.89203 
3.89197 1.94598 1.94604 3.89197 1.55389 3.5 1.94598 3.89203 3.89203 3.89197 2.33093 1.94601 
1.94601 3.89197 1.94601 3.892 3.892 3.5 1.94601 3.5 3.89197 2.33096 3.5 3.892 
4.08093 3.5 3.89203 5.83093 3.892 3.892 1.94598 3.89203 2.33093 1.94598 1.94601 1.55389 
3.5 1.94601 3.5 1.94598 2.33093 1.55389 3.5 1.94601 1.55389 3.5 1.94601 3.89197 
2.33096 3.892 3.892 1.55389 3.892 1.55389 1.94598 3.89203 3.89197 1.94601 1.94601 4.27692 
3.89203 1.94598 3.892 2.33096 3.89197 3.89203 2.33093 1.94598 5.05389 3.89203 5.83093 3.892 
2.33096 1.55389 3.5 3.89197 1.55389 1.94601 5.05389 3.892 3.5 1.55389 3.892 3.892 
3.5 1.94598 3.89203 3.89197 3.89203 3.5 5.25 3.89197 2.33093 1.94604 5.05389 5.05389 
5.05389 5.44598 5.83093 3.5 1.94598 1.94604 0 ]ysh
441.999 576.87 mo
(isit website)
[1.55389 3.5 1.55389 1.94598 1.94604 5.05389 3.89197 3.89203 3.5 1.55389 1.94598 0 
]ysh
433.999 178.92 mo
(http://www.nr.com or call 1-800-872-7423 \(North America only\),or send email to directcustserv@cambridge.org \(outside North Amer)
[3.89203 1.94598 1.94598 3.89197 1.94604 1.94598 1.94598 5.05389 5.05389 5.05389 1.94598 3.89203 
2.33093 1.94598 3.5 3.89203 5.83093 1.94598 3.89203 2.33093 1.94598 3.5 3.89203 1.55389 
1.55389 1.94598 3.89203 2.33093 3.89203 3.89197 3.89197 2.33099 3.89197 3.89203 3.89197 2.33096 
3.892 3.892 3.892 3.892 1.94601 2.33093 5.05389 3.892 2.33096 1.94598 3.892 1.94601 
4.66895 5.83093 3.892 2.33096 1.55389 3.5 3.89197 1.94601 3.892 3.892 1.55389 3.5 
2.33096 3.69598 3.892 2.33096 1.94598 3.5 3.892 3.892 3.892 1.94601 3.89197 5.83096 
3.892 1.55389 1.55389 1.94598 1.94601 3.892 1.94598 3.89203 1.55389 2.33093 3.892 3.5 
1.94601 3.5 3.89197 3.5 1.94601 3.5 3.892 2.33093 3.5 7.10501 3.5 3.892 
5.83093 3.89203 2.33093 1.55389 3.892 3.892 3.892 1.94601 3.89197 2.33093 3.89203 1.94598 
2.33093 3.89203 3.89197 1.94604 3.5 1.55389 3.89197 3.89203 1.94598 5.05389 3.89197 2.33099 
1.94598 3.89197 1.94604 4.66895 5.83093 3.89197 0 ]ysh
433.999 588.455 mo
(ica\).)
[1.55389 3.5 3.89203 2.33093 0 ]ysh
%%IncludeResource: font Times-Roman
/ARMEHL+Times-Roman*1 
[49{/.notdef}rp /one 2{/.notdef}rp /four 48{/.notdef}rp /e 2{/.notdef}rp /h 
9{/.notdef}rp /r 4{/.notdef}rp /w 136{/.notdef}rp]
ARMEHL+Times-Roman nf
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
72 117.84 mo
(where)
[7.19285 4.9813 4.42324 3.31747 0 ]xsh
%ADOBeginSubsetFont: MMFAAA+CMMI10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /MMFAAA+CMMI10 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/BaseFontName (CMMI10) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 120 /x put
def
/FontBBox {-32 -250 1048 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 -0 683 705 431 442 453 466] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [31] def
/StdVW [72] def
/StemSnapH [25 31] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/A <1C60D8A8C9B6E3FA234780E51FBD3BBFBEBC2631360DD7C25F33C30680CC
1A882C17B78DB471C55CC438374CF0500DE96583629259E66A380070E3947410
1D134A332FAD86FBF1C6C0FC85637A88280EE452A44957D6DFE9CAC4CC8C0B1E
0D8A44AD94DC0563BBBB61087D33FB01EF2295A71D594DF19B55EB59A712E2AE
76106A5A9AB8634ADA5A36204C6E39215D9DFB7BF5A23AB41B732EB6243EADEF
9003C540C56ECAAD84590980E261A5EBD6060F1EF15FD5> |-
/x <1C60D8A8C9B7FF2B5E691B02ABF5E6B36349D70F01EDCA1CD9EAA7D42C0C
D3775D212B1A0D3DAC3A979A163114C48B359F5B767254ECAFBA627EEAB5004E
5F287E21D1D40C030BD9B088F0AD749D63A2E8A505BC208CD0E68AC6F5ABB682
EEEDF99234D0D423385B905D018FF751827D822E9B656B7606E7C9937680BD2F
E67DB02D1BD1BEEA015CC64F197C1A9477A24BC5FD41A198210AE3B1CF7C11C4
61E37B78D075740C0279207334FF27799FB349732AFD1D730E14B11CF1BC247B
EFBEC79CE40DBC31725DADD888B5B0345E950DFABA> |-
/.notdef <1C60D8A8C9B81F2CC3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEHO+CMMI10 /MMFAAA+CMMI10 findfont ct_VMDictPut
/ARMEHO+CMMI10*1 
[65{/.notdef}rp /A 54{/.notdef}rp /x 135{/.notdef}rp]
ARMEHO+CMMI10 nf
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
144.96 143.28 mo
(A)sh
%ADOBeginSubsetFont: RQIBAA+CMSY10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /RQIBAA+CMSY10 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.035 def
/BaseFontName (CMSY10) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 17 /equivalence put
dup 32 /minus put
def
/FontBBox {-29 -960 1116 775} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 -0 683 705] def
/OtherBlues [-124 -119] def
/BlueScale 0.04379 def
/StdHW [40] def
/StdVW [85] def
/StemSnapH [40 55] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/equivalence <1C60D8A8C9B6FF86AD6C0F284E403ABB7C3ECC65D81092957E
D1754F859AE2E33BBA1BD1F2E8DC322CDE1A5239BD461B9E40813F926E03C695
15940CF146E9E7A91545EFABBE0F2D4AD54CE1F3F8544A38EBF2B346B8E8FC36
AC176B74F4B20DD7412B78F1A559E3D52EC5A2BB51> |-
/minus <1C60D8A8C9B6FF86F594155D4FEE75E025E2D8F5BDD38D70527C335C
7BB0CFAC947613B05761F69FFFE75D73A08E> |-
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEHP+CMSY10 /RQIBAA+CMSY10 findfont ct_VMDictPut
/ARMEHP+CMSY10*1 
[17{/.notdef}rp /equivalence 14{/.notdef}rp /minus 223{/.notdef}rp]
ARMEHP+CMSY10 nf
ARMEHP+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
155.159 143.28 mo
(\021)sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
168.96 136.439 mo
(x)sh
%ADOBeginSubsetFont: IPIBAA+CMMI7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /IPIBAA+CMMI7 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/BaseFontName (CMMI7) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 106 /j put
def
/FontBBox {0 -250 1171 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 -0 683 703 431 441 451 463] def
/OtherBlues [-204 -194] def
/BlueScale 0.04379 def
/StdHW [32] def
/StdVW [81] def
/StemSnapH [32 36] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/j <1C60D8A8C9B742B24161FBB87CDB8F59E0247C68AA800C77616BDB6AE441
32759D578A9DF014C497635F6CC7AE3EE1F35E7CDE1BEC8E720A7F94A1ED61DE
A83FCB00AB458A1501A9D33004FFB6D355935C859A82209183A28E90946EA2EC
7F5D9833DDA441427EDFD781CB6D311B8067F0AECD5F9DEAEB9219E16A3D36E3
81A03206473C128D17597493CE0BA56FD9F44B8CD913B9ABEFA49655B5B8558A
099053BB33> |-
/.notdef <1C60D8A8C9B81F2CC3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEHQ+CMMI7 /IPIBAA+CMMI7 findfont ct_VMDictPut
/ARMEHQ+CMMI7*1 
[106{/.notdef}rp /j 149{/.notdef}rp]
ARMEHQ+CMMI7 nf
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
174.6 137.88 mo
(j)sh
%ADOBeginSubsetFont: GLBBAA+CMR7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /GLBBAA+CMR7 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMR7) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 49 /one put
def
/FontBBox {-27 -250 1122 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 -0 683 703 431 446 664 674] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [36] def
/StdVW [79] def
/StemSnapH [28 36] def
/StemSnapV [79 95] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/plus <1C60D8A8C9B593D6D8BB90123291AA259E2A2720FD4880A5BA5668DBB
3FDE6DF999803DA9EDD496C11A38D856114909900BC9E753D6A6BF5C2786C87D
5C6E0CE8F6625D8E3C55B080D69D2651DDE1B21281AD85504D17B37BA0750A5> |-
/one <1C60D8A8C9B7E2CE5B62E9FEEC2E64DB4DF57A0DEE8F2DC4BC1D285E2D
6E93583C8BA769F966BA0D2874BA4F6692804A12EE154BF6C4128EE336963B1B
27F1A610EA701BA67016777C46DECA8A9AE7E6470CDD1978599A2E> |-
/.notdef <1C60D8A8C9B73A41C7> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEHR+CMR7 /GLBBAA+CMR7 findfont ct_VMDictPut
/ARMEHR+CMR7*1 
[43{/.notdef}rp /plus 5{/.notdef}rp /one 206{/.notdef}rp]
ARMEHR+CMR7 nf
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
178.199 137.88 mo
(+1)
[6.1188 0 ]xsh
ARMEHP+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
191.16 136.44 mo
( )sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
201.119 136.44 mo
(x)sh
166.92 140.88 mo
209.04 140.88 li
209.04 140.4 li
166.92 140.4 li
cp
f
%ADOBeginSubsetFont: MMFAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
ARMEHO+CMMI10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B6EA91BDC4C26718E8CC2017378E9F0D3EE1D411E58A921F5F
D4F42CC7A7122D35E8A0CFD07A73AA7D0A964404DEA71C2C2051017D3034C832
EC5FFF8BE92E20CC7993961FE3D90C4FBB07147146C1BDA3133A0CC2FEFF4AE5
5DF7912FCACB9A45BCA2B95B45FCFB55A9BC5A99D5319E88B009877768FCCFCD
2C4E8CE3D5CAC32E06AF5523E2067CF963552E8BAC3684378E4D2DC5A571B630
BDA250A5F1EFB35C43A15A8A048D02B57E7AC118C90D1441233BC3A1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ARMEHO+CMMI10 /Encoding get
dup 66 /B put
pop
%ADOEndSubsetFont
/ARMEHO+CMMI10*1 
[65{/.notdef}rp /A /B 53{/.notdef}rp /x 135{/.notdef}rp]
ARMEHO+CMMI10 nf
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
166.92 150 mo
(x)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
172.56 151.44 mo
(j)sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
176.159 151.44 mo
(+1)
[6.1188 0 ]xsh
ARMEHP+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
189.12 150 mo
( )sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
199.079 150 mo
(x)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
204.72 151.44 mo
(j)sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
230.04 143.28 mo
(B)sh
ARMEHP+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
240.959 143.28 mo
(\021)sh
%ADOBeginSubsetFont: BKUAAA+CMR10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /BKUAAA+CMR10 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMR10) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 61 /equal put
def
/FontBBox {-251 -250 1009 969} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 -0 683 705 431 448 666 677] def
/OtherBlues [-206 -194] def
/BlueScale 0.04379 def
/StdHW [31] def
/StdVW [69] def
/StemSnapH [22 31] def
/StemSnapV [69 89] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/one <1C60D8A8C9B7A73DC579B9CE13A4EA8C203AFC890ABD6F58341B006CF1
BDD8FED3A7238E01F751FEAC75885229C293891E5636AD630D9C884528B6FEF0
0728A740ED77D054B4743ECA5E3947520FEF6B23D548765D11> |-
/equal <1C60D8A8C9B6FF86F5F7C936DCCEFAB8EDDDE1C4D97CDB55B3C9C87D
7B2BAB4AEAEAC0B654A106A73C0C0E7D9BE088117935915C3B6ED2E10E45916B
408B696BFD54F5ED27BB8E0386045AAF2DF481> |-
/.notdef <1C60D8A8C9B81F2CC3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEHS+CMR10 /BKUAAA+CMR10 findfont ct_VMDictPut
/ARMEHS+CMR10*1 
[49{/.notdef}rp /one 11{/.notdef}rp /equal 194{/.notdef}rp]
ARMEHS+CMR10 nf
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
251.398 143.28 mo
(1)sh
ARMEHP+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
258.597 143.28 mo
( )sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
268.555 143.28 mo
(A)sh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
278.874 143.28 mo
(=)sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
297.72 136.44 mo
(x)sh
ARMEHP+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
305.639 136.44 mo
( )sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
315.598 136.44 mo
(x)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
321.24 137.88 mo
(j)sh
290.52 140.88 mo
332.64 140.88 li
332.64 140.4 li
290.52 140.4 li
cp
f
%ADOBeginSubsetFont: MMFAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
ARMEHO+CMMI10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B63EE677DD7DF603FFFF026F0056AEDCA5D6048D3F79EEAD7C
D86281BDF0740B78B5087F5E29A479F8738D699C7B034459346A444B4BDFC280
EEA66A3B571FC959A9D252781EEC6EBC5C57277A16D202782AF837B6B2B51280
BEE4680BBAD8830A8F3FC33C6C8E336C509B73CBA3BFF3279CC901C371C317C4
63C4245BCE2A70E17BACFE17CD3ACE0D2835AF7F6995B0651EE025> |-
/D <1C60D8A8C9B6B1AB47D89685A77C177658D9B200EA13B98252CCA1E67A88
9248A1CE1FA547B39BD53E705D06B406122D11097A668D7A7332AE21C6B3D5FB
2864B7876C202DF9B2FB62A6682D23B75B85D624DEF936C14282F82C93C1C0B6
D296CAD48D3F498EB392BF2C735A02646E2D17194936032C7D2DF66F0A5CC602
7B384F6BB145850771A9C5FDED6338213A73C0419A8196D866FF1607D080> |-
/y <1C60D8A8C9B751D5041DDABC011B22E2674EC9D2008402DC54EAC5EE3379
40D4E00C5876708EBFC0F089816A923F7414E12F4EC86FE029C9164FB00D37CE
3824BFB04DBE0C4C2733327610FB8442214C961F4823DCB09F8F2DF872A8CE22
62AC898EC0E84871D4EC8F51AF0892D628BA7C3C799F6D511F178BEE37A8BECE
AA043542F6F8FB29E710A79A7852CCE7858DA82878DF2512D738066A24C3F23D
5749E869C5C3A41524DE46794B0E3880C3C1C4EB7FF85447E9075DF4909C0859
7159F3848B34F8F9CB8E9A6A1B158B5BD9C5F03DD569D590DA5F215711D7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ARMEHO+CMMI10 /Encoding get
dup 67 /C put
dup 68 /D put
dup 121 /y put
pop
%ADOEndSubsetFont
/ARMEHO+CMMI10*1 
[65{/.notdef}rp /A /B /C /D 51{/.notdef}rp /x /y 
134{/.notdef}rp]
ARMEHO+CMMI10 nf
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
290.52 150 mo
(x)sh
%ADOBeginSubsetFont: IPIBAA+CMMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
ARMEHQ+CMMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/i <1C60D8A8C9B70721B9F639782C8460B97E82801AD0D8A919DC5D9CAA4C68
FBE7833AC2F83808014E455261AE4698D1787D69206B38071478CB577B72EF41
ED0606485A0805B327A9541BF99C223B853428820C7432E93F64332505182833
A9A1726F67F49595C0D6B4E36728E08E3A3FFE1D3400C0426C9F7D546B609ED9
847726C531FCA5CF35B9B04381F81797F4E937A123F607399D53953A016040EB
4EB08C885D7568DA709FDAC1486D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ARMEHQ+CMMI7 /Encoding get
dup 105 /i put
pop
%ADOEndSubsetFont
/ARMEHQ+CMMI7*1 
[105{/.notdef}rp /i /j 149{/.notdef}rp]
ARMEHQ+CMMI7 nf
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
296.16 151.44 mo
(j)sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
299.759 151.44 mo
(+1)
[6.1188 0 ]xsh
ARMEHP+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
312.72 150 mo
( )sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
322.679 150 mo
(x)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
328.32 151.44 mo
(j)sh
%ADOBeginSubsetFont: BKUAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
ARMEHS+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B7361F0ED0EA8752539777BEBB9273D40DABBCD23C
A817496382F6B840E6A1C46E658A7FF24A9D166F78212AF4C797827975E02701
CDC72E754F4000DECEE47D430E4D5342BD530D47AAD28508160E8A23665C3BDA
FA73039FCB9EE1AB6A300F016FDD82E5> |-
/parenright <1C60D8A8C9B7361F0ED0EA8752539777A78857B993CC758AF4B
0072B7985470F64120F1034EB48F73B7B659942A90C7AB7260686E937E5258E6
B309A8E598CE40EEFE407AA4D2ED07136A6BD81A0336437FF05EC04649152730
73C8D27D659011926A923EA546CAE8D> |-
/plus <1C60D8A8C9B6FF863A85C280B948C534E29FDD1A5E7C480501AD35704
8AA30458C9884AF16EB577582A775159DC46FB447D91E6A2A77A0FD27F503D8B
3C75521CFA7BBCEB8B902740AC2F9723F945A89D3342F7D5DADAC25CE7DC3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ARMEHS+CMR10 /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
pop
%ADOEndSubsetFont
/ARMEHS+CMR10*1 
[40{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp /one 11{/.notdef}rp 
/equal 194{/.notdef}rp]
ARMEHS+CMR10 nf
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
379.08 143.28 mo
(\()sh
%%IncludeResource: font Times-Roman
/ARMEHL+Times-Roman*1 
[39{/.notdef}rp /quoteright /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period 
2{/.notdef}rp /one /two /three /four 12{/.notdef}rp /A 2{/.notdef}rp 
/D /E 3{/.notdef}rp /I 2{/.notdef}rp /L 6{/.notdef}rp /S 
/T 12{/.notdef}rp /a /b /c /d /e /f 
/g /h /i 2{/.notdef}rp /l /m /n /o 
/p /q /r /s /t /u /v /w 
/.notdef /y /z 51{/.notdef}rp /fi 81{/.notdef}rp]
ARMEHL+Times-Roman nf
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
382.92 143.28 mo
(3.3.2)
[4.98129 2.49066 4.98129 2.49066 0 ]xsh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
402.605 143.28 mo
(\))sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
72.0018 172.32 mo
(Equations\(3.3.1\)and\(3.3.2\)areaspecialcaseofthegeneralLagrangeinterpolation)
[6.08707 4.9813 4.9813 4.42324 2.7696 2.76961 4.98129 4.98131 5.91571 3.31747 4.9813 2.49065 
4.98129 2.49065 4.98131 5.3578 4.42325 4.98129 7.1412 3.31747 4.98129 2.49065 4.98131 2.49065 
4.98131 5.23726 4.42325 3.31746 6.7037 6.70367 3.87537 4.98129 4.42325 4.42325 2.76959 4.42328 
5.05005 4.42325 4.42322 3.8754 6.70367 4.98132 5.47736 2.76959 4.98132 6.70367 4.98129 4.42325 
4.98132 4.42322 3.31747 4.42325 4.9295 6.08707 4.42325 4.98132 3.31747 4.42322 4.98132 4.98129 
6.34302 2.76962 4.98129 2.76959 4.42325 3.31747 4.98129 4.98129 2.76962 4.42325 2.76959 2.76959 
4.98129 0 ]xsh
72.0018 184.2 mo
(formula\(3.1.1\).)
[3.31747 4.9813 3.31747 7.7509 4.9813 2.76961 9.10367 3.31747 4.9813 2.49065 4.98129 2.49065 
4.98131 3.31747 0 ]xsh
91.922 196.2 mo
(Sinceitis\(piecewise\)linear,equation\(3.3.1\)haszerosecondderivativein)
[5.5392 2.76961 4.9813 4.42324 8.38338 2.76961 6.72974 2.76959 7.95506 3.31747 4.98129 2.76961 
4.42325 4.42323 4.18317 7.19284 2.76959 3.87538 4.42325 7.15706 2.76959 2.76961 4.98131 4.42323 
4.42325 2.95781 6.69089 4.42325 4.98131 4.98129 4.42325 2.76959 2.76961 4.98129 8.70135 3.31747 
4.98129 2.49063 4.98132 2.49066 4.98126 7.03754 4.98129 4.42325 7.83551 4.42322 4.42325 3.31747 
8.82089 3.8754 4.42322 4.42325 4.98129 4.98132 8.82086 4.98132 4.42322 3.3175 2.52948 4.74121 
4.42328 2.76959 2.52948 4.86176 8.14331 2.76959 0 ]xsh
72.0018 208.081 mo
(theinteriorofeachinterval,andanunde\256ned,orin\256nite,secondderivativeatthe)
[2.7696 4.9813 7.66309 2.7696 4.9813 2.7696 4.42325 3.31747 2.76959 4.98131 6.43775 4.9813 
6.43776 4.42325 4.42323 4.42325 8.22115 2.76961 4.98129 2.76959 4.42325 3.31747 4.7412 4.42325 
2.76961 5.73048 4.42323 4.98131 8.22115 4.42325 8.22113 4.98129 4.98129 4.98132 4.42325 5.53918 
4.98129 4.42325 4.98129 5.61096 4.98129 6.55728 2.76962 4.98129 5.53922 4.98129 2.76959 2.76959 
4.42325 5.85104 3.87537 4.42325 4.42325 4.98129 4.98132 8.10156 4.98132 4.42322 3.31747 2.52951 
4.74121 4.42325 2.76959 2.52951 4.86176 7.423 4.42325 6.00943 2.76959 4.98129 0 ]xsh
72.0018 220.081 mo
(abscissas)
[4.42324 4.98131 3.87537 4.42324 2.7696 3.87537 3.87538 4.42324 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
110.805 220.081 mo
(x)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
116.4 221.52 mo
(j)sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
120.6 220.08 mo
(.Thegoalofcubicsplineinterpolationistogetaninterpolationformula)
[5.97059 6.08707 4.98131 6.58313 4.98131 4.98129 4.42325 4.80994 4.98131 5.47737 4.42323 4.98131 
4.98129 2.76959 6.46359 3.87538 4.98131 2.76959 2.76961 4.98131 6.58313 2.76959 4.98129 2.76962 
4.42323 3.31747 4.98131 4.98129 2.76959 4.42325 2.76959 2.76962 4.98129 6.90109 2.76959 6.15582 
2.76962 7.14117 4.98132 4.42325 4.92947 4.42325 7.1412 2.76959 4.98132 2.76959 4.42325 3.31747 
4.98129 4.98129 2.76962 4.42322 2.76962 2.76959 4.98129 6.90109 3.31747 4.98129 3.31747 7.75092 
4.98129 2.76959 0 ]xsh
72.0004 232.08 mo
(thatissmoothinthe\256rstderivative,andcontinuousinthesecondderivative,both)
[2.7696 4.9813 4.42325 5.88988 2.7696 7.11522 3.87537 7.7509 4.98131 4.98129 2.76961 8.10159 
2.76959 8.10159 2.76959 4.98129 7.54355 5.53918 3.31747 3.87538 6.00945 4.98129 4.42325 3.31747 
2.5295 4.7412 4.42325 2.76961 2.5295 4.86174 4.42325 5.61093 4.42325 4.98131 7.98103 4.42325 
4.98129 4.98131 2.76959 2.76962 4.98126 4.98132 4.98129 4.98129 6.87512 2.76959 8.10159 2.76962 
4.98126 7.54355 3.8754 4.42322 4.42325 4.98129 4.98132 7.98102 4.98132 4.42322 3.3175 2.52948 
4.74121 4.42322 2.76965 2.52948 4.86176 4.42328 5.6109 4.98132 4.98126 2.76965 0 ]xsh
72.0004 243.96 mo
(withinanintervalandatitsboundaries.)
[7.19285 2.7696 2.7696 4.9813 2.7696 8.82088 4.42325 8.94144 2.76959 4.98131 2.76959 4.42325 
3.31747 4.74121 4.42323 6.60919 4.42323 4.98129 8.82089 4.42325 6.72974 2.76959 2.76961 7.95506 
4.98129 4.98131 4.98129 4.98131 4.98129 4.42325 3.31747 2.76959 4.42325 3.87538 0 ]xsh
91.9207 255.96 mo
(Suppose,contrarytofact,thatinadditiontothetabulatedvaluesof)
[5.5392 4.9813 4.9813 4.9813 4.9813 3.87537 4.42325 6.57034 4.42323 4.98131 4.98129 2.76961 
3.31746 4.42325 3.31747 8.70132 2.76961 8.94144 3.19792 4.42325 4.42325 2.76959 6.81044 2.76961 
4.98129 4.42325 6.60919 2.76959 8.94144 4.42325 4.98129 4.98129 2.76959 2.76959 2.76962 4.98129 
8.82089 2.76959 8.82089 2.76962 4.98129 8.38336 2.76959 4.42325 4.74121 4.98129 2.76962 4.42325 
2.76959 4.42325 8.82089 4.74121 4.42325 2.76959 4.98129 4.42325 7.71497 4.98129 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
378.539 255.96 mo
(y)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
384.96 257.4 mo
(i)sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
388.32 255.96 mo
(,we)
[6.81042 7.19284 0 ]xsh
72.0015 267.96 mo
(alsohavetabulatedvaluesforthefunction'ssecondderivatives,)
[4.42325 2.7696 3.87537 8.70133 4.9813 4.18314 4.86175 8.02373 2.76961 4.42325 4.7412 4.98129 
2.76961 4.42325 2.76961 4.42325 8.58177 4.7412 4.42325 2.76959 4.98131 4.42325 7.47485 3.31747 
4.98131 6.91794 2.76961 4.98129 8.14328 3.31747 4.98131 4.98129 4.42325 2.76959 2.76959 4.98131 
4.98129 2.71773 7.35532 3.8754 4.42322 4.42325 4.98129 4.98132 8.58179 4.98129 4.42325 3.31744 
2.52954 4.74121 4.42322 2.76959 2.52954 4.86176 4.42322 3.87537 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
337.379 267.96 mo
(y)sh
%ADOBeginSubsetFont: ROVAAA+CMSY7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ROVAAA+CMSY7 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.035 def
/BaseFontName (CMSY7) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /prime put
def
/FontBBox {-15 -951 1252 782} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-23 -0 683 708] def
/OtherBlues [-127 -117] def
/BlueScale 0.039625 def
/StdHW [49] def
/StdVW [93] def
/StemSnapH [49 61] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/prime <1C60D8A8C9B82356A1B15BD09A80AF2525F8E0C64B04967D26E54CFA
3D1BE92F3BBFF514F2F9F4811C69355EAD0F2BFC0002DC8B7DFC3E2B14ED53C5
5CDC00A1ED08025288> |-
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEHT+CMSY7 /ROVAAA+CMSY7 findfont ct_VMDictPut
/ARMEHT+CMSY7*1 
[48{/.notdef}rp /prime 207{/.notdef}rp]
ARMEHT+CMSY7 nf
ARMEHT+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
344.04 264.24 mo
(00)
[2.27692 0 ]xsh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
349.08 267.96 mo
(,thatis,aset)
[6.45078 2.76962 4.98129 4.42325 6.48962 2.76959 3.8754 6.57031 8.14328 3.8754 4.42322 0 
]xsh
72.0012 279.84 mo
(ofnumbers)
[4.9813 6.79741 4.9813 4.9813 7.7509 4.98129 4.42325 3.31747 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
121.452 279.84 mo
(y)sh
ARMEHT+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
127.08 276.24 mo
(00)
[2.27692 0 ]xsh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
126.72 282.48 mo
(i)sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
132.12 279.84 mo
(.Then,withineachinterval,wecanaddtotheright-handsideof)
[9.45052 6.08708 4.98129 4.42325 4.98131 6.21068 7.19284 2.76961 2.76961 4.98129 2.76961 8.46123 
4.42325 4.42325 4.42325 8.46123 2.76961 4.98129 2.76961 4.42323 3.31747 4.74121 4.42325 2.76959 
6.21069 7.19284 7.9032 4.42322 4.42325 8.58078 4.42325 4.98129 8.46124 2.76959 8.46124 2.76962 
4.98129 8.02374 3.31744 2.76962 4.98129 4.98132 2.76959 3.31744 4.98132 4.42322 4.98132 8.22113 
3.87537 2.76959 4.98132 7.90317 4.98132 0 ]xsh
72.0007 291.84 mo
(equation\(3.3.1\)acubicpolynomialwhosesecondderivativevarieslinearlyfroma)
[4.42325 4.98129 4.9813 4.42325 2.7696 2.7696 4.9813 7.74094 3.31747 4.98131 2.49065 4.98129 
2.49065 4.9813 5.95757 7.30344 4.42325 4.98129 4.98129 2.76961 7.30342 4.98131 4.98131 2.76959 
4.98129 4.98131 4.98131 7.7509 2.76959 4.42325 5.4097 7.19284 4.98131 4.98129 3.87538 7.30344 
3.87537 4.42325 4.42326 4.98126 4.98132 7.74094 4.98129 4.42328 3.31744 2.52951 4.74121 4.42325 
2.76959 2.52951 4.86176 7.06332 4.74121 4.42325 3.31747 2.76959 4.42328 6.75555 2.76959 2.76959 
4.98132 4.42322 4.42328 3.31744 2.76959 7.86151 3.31744 3.3175 4.98132 10.5105 0 ]xsh
72.0007 303.72 mo
(value)
[4.7412 4.42324 2.7696 4.9813 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
95.8601 303.72 mo
(y)sh
ARMEHT+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
101.28 300.12 mo
(00)
[2.27691 0 ]xsh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
100.92 306.36 mo
(j)sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
108.96 303.72 mo
(onthelefttoavalue)
[4.9813 7.50084 2.7696 4.9813 6.94279 2.76959 4.42325 3.31747 5.40968 2.76961 7.50084 7.06334 
4.7412 4.42325 2.76961 4.98129 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
193.251 303.72 mo
(y)sh
ARMEHT+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
198.96 300.12 mo
(00)
[2.27692 0 ]xsh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
198.6 306.36 mo
(j)sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
202.199 306.36 mo
(+1)
[6.1188 0 ]xsh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
215.4 303.72 mo
(ontheright.Doingso,wewillhavethedesired)
[4.98129 7.50085 2.76959 4.98131 7.06332 3.31747 2.76961 4.98129 4.98129 2.76962 6.33023 7.19284 
4.98129 2.76959 4.98132 7.38129 3.87537 4.98129 5.13074 7.19284 7.06335 7.19284 2.76962 2.76959 
5.40967 4.98132 4.18314 4.86176 6.82321 2.76962 4.98129 7.06335 4.98129 4.42325 3.87537 2.76959 
3.31747 4.42325 0 ]xsh
72.0003 315.72 mo
(continuoussecondderivative.Ifwealsoconstructthecubicpolynomialtohave)
[4.42324 4.98131 4.98129 2.76961 2.7696 4.9813 4.9813 4.9813 4.98129 7.35532 3.87537 4.42324 
4.42325 4.98131 4.98129 8.70132 4.98131 4.42325 3.31746 2.52951 4.7412 4.42325 2.76961 2.5295 
4.86174 4.42325 9.69063 3.31746 7.03751 7.19284 8.26285 4.42325 2.76959 3.8754 8.70132 4.42325 
4.98129 4.98129 3.87537 2.76962 3.31747 4.98129 4.42325 6.37009 2.76959 4.98129 8.26285 4.42325 
4.98129 4.98129 2.76962 8.02371 4.98132 4.98129 2.76962 4.98129 4.98129 4.98129 7.75092 2.76959 
4.42325 6.24954 2.76959 8.82089 4.98132 4.18314 4.86172 0 ]xsh
72.0003 327.72 mo
(zero)
[4.42324 4.42325 3.31747 0 ]xsh
%%IncludeResource: font Times-Italic
/ARMEHU+Times-Italic /Times-Italic findfont ct_VMDictPut
/ARMEHU+Times-Italic*1 
[97{/.notdef}rp /a 3{/.notdef}rp /e 6{/.notdef}rp /l 6{/.notdef}rp /s 
/.notdef /u /v 137{/.notdef}rp]
ARMEHU+Times-Italic nf
ARMEHU+Times-Italic*1 [9.9626 0 0 -9.9626 0 0 ]msf
92.1457 327.72 mo
(values)
[4.42324 4.98131 2.7696 4.9813 4.42324 0 ]xsh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
120.48 327.72 mo
(at)
[4.42325 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
130.794 327.72 mo
(x)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
136.68 329.16 mo
(j)sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
144 327.72 mo
(and)
[4.42325 4.98129 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
161.386 327.72 mo
(x)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
167.16 329.16 mo
(j)sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
170.759 329.16 mo
(+1)
[6.1188 0 ]xsh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
181.44 327.72 mo
(,thenaddingitinwillnotspoiltheagreementwiththe)
[5.73048 2.76961 4.98129 4.42325 7.98105 4.42323 4.98131 4.98129 2.76959 4.98131 7.74094 2.76961 
5.88989 2.76959 7.98105 7.19284 2.76959 2.76962 5.88986 4.98132 4.98129 5.76935 3.87537 4.98129 
4.98129 2.76962 5.76935 2.76959 4.98129 7.42297 4.42325 4.98129 3.31747 4.42328 4.42322 7.75092 
4.42322 4.98132 5.64978 7.19287 2.76959 2.76959 7.98105 2.76959 4.98129 0 ]xsh
72.0008 339.6 mo
(tabulatedfunctionalvalues)
[2.7696 4.42325 4.7412 4.9813 2.7696 4.42325 2.7696 4.42325 7.74094 3.31747 4.9813 4.9813 
4.42324 2.76961 2.76959 4.98131 4.98131 4.42323 5.52925 4.7412 4.42325 2.76961 4.98129 4.42325 
0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
182.176 339.6 mo
(y)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
187.68 341.04 mo
(j)sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
194.88 339.6 mo
(and)
[4.42325 4.98129 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
212.026 339.6 mo
(y)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
217.08 341.04 mo
(j)sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
220.679 341.04 mo
(+1)
[6.1188 0 ]xsh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
234.36 339.6 mo
(attheendpoints)
[4.42325 5.64978 2.76961 4.98129 7.423 4.42322 4.98132 4.98129 4.98129 4.98129 2.76962 4.98129 
2.76959 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
300.992 339.6 mo
(x)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
306.96 341.04 mo
(j)sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
314.16 339.6 mo
(and)
[4.42325 4.98129 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
331.426 339.6 mo
(x)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
337.2 341.04 mo
(j)sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
340.799 341.04 mo
(+1)
[6.1188 0 ]xsh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
351.48 339.6 mo
(.)sh
91.9214 351.6 mo
(Alittlesidecalculationshowsthatthereisonlyonewaytoarrangethis)
[11.9928 2.7696 2.7696 2.76961 2.7696 2.7696 9.34277 3.87538 2.76961 4.98129 9.22322 4.42325 
4.42325 2.76961 4.42323 4.98131 2.76959 4.42325 2.76959 2.76961 4.98131 9.54117 3.87538 4.98131 
4.74118 7.19286 8.67535 2.76961 4.98129 4.42325 7.56958 2.76961 4.98129 4.42323 3.31747 9.10367 
2.76962 8.79486 4.98132 4.98129 2.76962 9.66171 4.98129 4.98132 9.10364 7.0733 4.42328 9.78125 
2.76959 9.66174 4.42328 3.31744 3.3175 4.42322 4.98132 4.98126 9.1037 2.76959 4.98132 2.76959 
0 ]xsh
72.0012 363.6 mo
(construction,namelyreplacing\(3.3.1\)by)
[4.42324 4.98131 4.98129 3.87538 2.7696 3.31747 4.9813 4.42325 2.7696 2.7696 4.9813 4.9813 
6.45078 4.98129 4.42325 7.75092 4.42323 2.76961 8.82089 3.31746 4.42325 4.98131 2.76959 4.42325 
4.42325 2.76959 4.98129 8.58078 3.31747 4.98129 2.49066 4.98129 2.49066 4.98129 7.03751 4.98129 
0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
167.04 387.12 mo
(y)sh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
175.079 387.12 mo
(=)sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
185.518 387.12 mo
(Ay)
[7.43907 0 ]xsh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
197.88 388.56 mo
(j)sh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
204.36 387.12 mo
(+)sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
214.319 387.12 mo
(By)
[8.04382 0 ]xsh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
227.28 388.56 mo
(j)sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
230.879 388.56 mo
(+1)
[6.1188 0 ]xsh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
243.72 387.12 mo
(+)sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
253.679 387.12 mo
(Cy)
[7.80167 0 ]xsh
ARMEHT+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
266.76 383.04 mo
(00)
[2.27692 0 ]xsh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
266.4 389.64 mo
(j)sh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
274.08 387.12 mo
(+)sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
284.039 387.12 mo
(Dy)
[8.51904 0 ]xsh
ARMEHT+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
297.84 383.04 mo
(00)
[2.27692 0 ]xsh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
297.48 389.64 mo
(j)sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
301.079 389.64 mo
(+1)
[6.1188 0 ]xsh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
379.08 387.12 mo
(\()sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
382.92 387.12 mo
(3.3.3)
[4.98129 2.49066 4.98129 2.49066 0 ]xsh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
402.605 387.12 mo
(\))sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
72.0018 410.76 mo
(where)
[7.19285 4.9813 4.42324 3.31747 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
100.06 410.76 mo
(A)sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
111.459 410.76 mo
(and)
[4.42324 4.98131 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
129.684 410.76 mo
(B)sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
141.563 410.76 mo
(arede\256nedin\(3.3.2\)and)
[4.42325 3.31747 8.26282 4.98131 4.42325 5.5392 4.98129 4.42325 8.70132 2.76961 8.94144 3.31746 
4.98131 2.49065 4.98131 2.49065 4.98129 6.91696 4.42325 4.98129 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
92.5208 438.361 mo
(C)sh
ARMEHP+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
103.2 438.361 mo
(\021)sh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
114.841 431.641 mo
(1)sh
114.84 436.08 mo
119.88 436.08 li
119.88 435.6 li
114.84 435.6 li
cp
f
%ADOBeginSubsetFont: BKUAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
ARMEHS+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six <1C60D8A8C9B7A73D3B2B97FE394CF5175EFEC06CD8F59A375E41591273
E0C059123310EC79AE072F532A0C9DF11EDCF7D4B9D83F0A2FCBB058CCF95C0F
F8BAD8605C0C2E8D60E28BE3D0E0DD42D8AAC3094E7159CC3989179C22CC5AA3
B3825C4ED9C5A83B733BA4666CE2A2B0097F22D25C776953D494478010B9DD2B
957D6BF7D7A87CBAE6ACDB0F5D283FB8F9162F4638E98F510D9821787A5D0E83
5BEB255F8F8C0C281516F7A946A0E0B79E8072185D1B76EC3B7739FCD106> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ARMEHS+CMR10 /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/ARMEHS+CMR10*1 
[40{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp /one 4{/.notdef}rp 
/six 6{/.notdef}rp /equal 194{/.notdef}rp]
ARMEHS+CMR10 nf
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
114.84 445.2 mo
(6)sh
121.08 438.36 mo
(\()sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
124.919 438.36 mo
(A)sh
%ADOBeginSubsetFont: GLBBAA+CMR7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
ARMEHR+CMR7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7E2CE5B2D2AF3C16D655586ADDFD255F342CC78E0CFD77C
BD9B63EF6E836EA2677FC1E3515560DC8E1709808740B3E922280CDDC6B1DE59
498D3F96D52EB7A68A65E121CBB4EE62A5F7C7620A42A7CFE5CDEB9DCEFA2914
61A983E5129317168388213985652593802B6BD46B323DAA41AA2361FFE1897E
F8609C> |-
/three <1C60D8A8C9B7E2CEA7BEEFBD14AB8DF8CEA67D1B763E52ED51307E29
5A37DDE297DA459BE51B49EE11D0E205CF2263FD17827490680BA98FA0C5E982
DDE772750002A75B9868335940F176744F3EB008997ED6790000D7B3BA89101A
3D41944A427F325A6F2C91F15D8728BB9DFE8717AAC3CC1D2144BCEEBD3D3848
BDB42404126DB26B2C13BB479AE38C4F4ECB0DB04BCDC156E6EFA2214C178B5C
435107776FD9AF7FCB46E76B07C5AAB034F8EC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ARMEHR+CMR7 /Encoding get
dup 50 /two put
dup 51 /three put
pop
%ADOEndSubsetFont
/ARMEHR+CMR7*1 
[43{/.notdef}rp /plus 5{/.notdef}rp /one /two /three 204{/.notdef}rp]
ARMEHR+CMR7 nf
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
132.36 434.28 mo
(3)sh
ARMEHP+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
139.08 438.36 mo
( )sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
149.039 438.36 mo
(A)sh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
156.478 438.36 mo
(\)\()
[3.84065 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
164.156 438.36 mo
(x)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
169.8 439.8 mo
(j)sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
173.399 439.8 mo
(+1)
[6.1188 0 ]xsh
ARMEHP+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
186.48 438.36 mo
( )sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
196.439 438.36 mo
(x)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
202.08 439.8 mo
(j)sh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
206.28 438.36 mo
(\))sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
210.12 434.28 mo
(2)sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
234.6 438.36 mo
(D)sh
ARMEHP+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
245.879 438.36 mo
(\021)sh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
257.52 431.64 mo
(1)sh
257.52 436.08 mo
262.56 436.08 li
262.56 435.6 li
257.52 435.6 li
cp
f
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
257.52 445.2 mo
(6)sh
263.76 438.36 mo
(\()sh
%ADOBeginSubsetFont: MMFAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
ARMEHO+CMMI10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/comma <1C60D8A8C9B854D0F83823896563389F99F93F23FF16CE93B743AB7C
376AC821786AAEDE7270059A6FF1CFEB37235A20C21D908EB2B0616D97378D86
D24E973D8D07D83E6BD6C0E31C021B3C13AA12FA9436B6F6> |-
/slash <1C60D8A8C9B7A73DB56225352A24C6E389DE2B55CA07FB5710C6DCAE
04F94BC5CAA5785E17ED28271B55834262FD3846E502CB37AB886C6947131546
D475C5E688F02E31C309> |-
/d <1C60D8A8C9B7B3D093A5DA22F344125466E8D0134FBA69AA1653B6AEF1AF
8F8CB80A17DE6F373F54D15BEC86DD2B0C4F1928DCEC9AD2CBC531A3FA9442BA
DD64BD5DE854EF788EA4122FAD019E556E23DA6C2BFB96BABCB99348CF6360E1
C8E9AD6EA5D3F79D11F01C19320594007512E5C397385890448082CA3D6A2DBB
BC2957A5FA0CE1D738A715E9A8F1491B51F14D5FC6CEFFE47A302D922E710D5D
854B98204EC69C80D2EECA3B54178DD3ED23184E7DD06BB68A9BC87154E9B2C8
16290FF5A0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ARMEHO+CMMI10 /Encoding get
dup 44 /comma put
dup 47 /slash put
dup 100 /d put
pop
%ADOEndSubsetFont
/ARMEHO+CMMI10*1 
[44{/.notdef}rp /comma 2{/.notdef}rp /slash 17{/.notdef}rp /A /B /C 
/D 31{/.notdef}rp /d 19{/.notdef}rp /x /y 134{/.notdef}rp]
ARMEHO+CMMI10 nf
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
267.599 438.36 mo
(B)sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
275.64 434.28 mo
(3)sh
ARMEHP+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
282.36 438.36 mo
( )sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
292.319 438.36 mo
(B)sh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
300.357 438.36 mo
(\)\()
[3.84067 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
308.036 438.36 mo
(x)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
313.68 439.8 mo
(j)sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
317.279 439.8 mo
(+1)
[6.1188 0 ]xsh
ARMEHP+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
330.36 438.36 mo
( )sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
340.319 438.36 mo
(x)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
345.96 439.8 mo
(j)sh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
350.16 438.36 mo
(\))sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
354 434.28 mo
(2)sh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
379.08 438.36 mo
(\()sh
%%IncludeResource: font Times-Roman
/ARMEHL+Times-Roman*1 
[39{/.notdef}rp /quoteright /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period 
2{/.notdef}rp /one /two /three /four 12{/.notdef}rp /A 2{/.notdef}rp 
/D /E 3{/.notdef}rp /I 2{/.notdef}rp /L /.notdef /N 
4{/.notdef}rp /S /T 2{/.notdef}rp /W 9{/.notdef}rp /a /b 
/c /d /e /f /g /h /i /.notdef 
/k /l /m /n /o /p /q /r 
/s /t /u /v /w /.notdef /y /z 
51{/.notdef}rp /fi 81{/.notdef}rp]
ARMEHL+Times-Roman nf
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
382.92 438.36 mo
(3.3.4)
[4.98129 2.49066 4.98129 2.49066 0 ]xsh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
402.605 438.36 mo
(\))sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
72.0018 464.52 mo
(Noticethatthedependenceontheindependentvariable)
[7.19285 4.9813 2.7696 2.7696 4.42325 7.54353 2.76961 4.98129 4.42325 6.00945 2.76959 4.98131 
7.54353 4.98129 4.42325 4.98129 4.42325 4.98129 4.98131 4.42323 4.98131 4.42325 7.30342 4.98131 
8.10158 2.76962 4.98129 7.54352 2.76962 4.98129 4.98129 4.42325 4.98129 4.42325 4.98129 4.98129 
4.42325 4.98132 5.64978 4.74121 4.42325 3.31747 2.76959 4.42325 4.98129 2.76959 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
299.867 464.52 mo
(x)sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
308.867 464.52 mo
(inequations\(3.3.3\)and)
[2.76959 8.10159 4.42325 4.98129 4.98129 4.42325 2.76962 2.76959 4.98129 4.98129 6.87512 3.31747 
4.98129 2.49066 4.98129 2.49066 4.98129 6.3172 4.42325 4.98129 0 ]xsh
72.0018 476.52 mo
(\(3.3.4\)isentirelythroughthelinear)
[3.31747 4.9813 2.49065 4.9813 2.49065 4.98129 5.71747 2.7696 6.63502 4.42324 4.9813 2.7696 
2.7696 3.31747 4.42325 2.76959 7.50085 2.76959 4.98129 3.31747 4.98129 4.98131 4.98131 7.38129 
2.76959 4.98131 7.06334 2.76959 2.76961 4.98131 4.42325 4.42322 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
216.735 476.52 mo
(x)sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
222.374 476.52 mo
(-dependenceof)
[3.31747 4.98129 4.42325 4.98129 4.42325 4.98131 4.98129 4.42323 4.98132 4.42325 6.82321 4.98132 
0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
286.054 476.52 mo
(A)sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
296.253 476.52 mo
(and)
[4.42325 4.98129 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
313.158 476.52 mo
(B)sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
321.197 476.52 mo
(,and\(through)
[5.25031 4.42322 4.98132 7.50082 3.31747 2.76959 4.98132 3.31747 4.98129 4.98129 4.98129 0 
]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
380.065 476.52 mo
(A)sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
390.264 476.52 mo
(and)
[4.42325 4.98129 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
72.0018 488.4 mo
(B)sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
80.0406 488.4 mo
(\)thecubic)
[7.2776 2.76961 4.98129 8.26283 4.42325 4.98129 4.98131 2.76959 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
128.752 488.4 mo
(x)sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
134.391 488.4 mo
(-dependenceof)
[3.31747 4.98129 4.42325 4.98129 4.42325 4.98131 4.98129 4.42325 4.98131 4.42323 8.02274 4.98131 
0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
200.47 488.4 mo
(C)sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
212.229 488.4 mo
(and)
[4.42325 4.98129 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
230.455 488.4 mo
(D)sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
238.974 488.4 mo
(.)sh
91.922 500.4 mo
(Wecanreadilycheckthat)
[8.5647 9.22323 4.42324 4.42325 9.78128 3.31747 4.42325 4.42323 4.98131 2.76959 2.76961 9.54118 
4.42325 4.98129 4.42325 4.42325 9.54117 2.76961 4.98129 4.42325 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
208.101 500.4 mo
(y)sh
ARMEHT+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
213.84 496.8 mo
(00)
[2.27692 0 ]xsh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
223.68 500.4 mo
(isinfactthesecondderivativeofthenew)
[2.76961 8.67535 2.76959 9.66173 3.19792 4.42325 4.42323 7.56961 2.76959 4.98129 9.10367 3.87537 
4.42328 4.42322 4.98132 4.98129 9.66171 4.98132 4.42322 3.31747 2.52951 4.74121 4.42322 2.76962 
2.52948 4.86176 8.86356 4.98132 7.99789 2.76962 4.98126 9.1037 4.98129 4.18314 0 ]xsh
72.0004 512.4 mo
(interpolatingpolynomial.Wetakederivativesofequation\(3.3.3\)withrespectto)
[2.7696 4.9813 2.7696 4.42325 3.31747 4.98129 4.98131 2.76959 4.42325 2.76961 2.76959 4.98131 
7.50084 4.98129 4.98131 2.76961 4.98129 4.98129 4.98131 7.7509 2.76959 4.42325 2.76961 6.57033 
8.5647 7.30344 2.76959 4.42325 4.86176 7.18289 4.98129 4.42325 3.31747 2.52951 4.74118 4.42325 
2.76959 2.52951 4.86176 4.42325 6.39493 4.98129 6.07712 4.42325 4.98129 4.98129 4.42325 2.76959 
2.76962 4.98129 7.50082 3.31747 4.98129 2.49066 4.98129 2.49066 4.98129 5.83701 7.19284 2.76959 
2.76959 7.74097 3.31747 4.42322 3.8754 4.98129 4.42325 4.42325 5.40967 2.76962 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
396.709 512.4 mo
(x)sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
402.348 512.4 mo
(,)sh
71.9994 524.279 mo
(usingthede\256nitionsof)
[4.9813 3.87537 2.7696 4.9813 7.02164 2.7696 4.9813 6.58314 4.9813 4.42324 5.53921 4.9813 
2.76961 2.76959 2.76961 4.98129 4.98131 5.91571 4.98129 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
164.534 524.279 mo
(A,B,C,D)
[7.43907 4.44133 8.04382 4.44133 7.20192 4.44133 0 ]xsh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
211.327 524.279 mo
(tocompute)
[2.76961 7.14119 4.42325 4.98129 7.7509 4.98131 4.98129 2.76959 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
257.469 524.279 mo
(dA/dx,dB/dx,dC/dx)
[5.14273 7.43411 5.03906 5.15469 5.66083 4.44131 5.14273 8.04382 5.03909 5.15469 5.66083 4.44131 
5.14273 7.56158 5.03906 5.15472 0 ]xsh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
352.373 524.279 mo
(,and)
[4.89063 4.42325 4.98132 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
373.69 524.279 mo
(dD/dx)
[5.15469 8.51904 5.03909 5.15469 0 ]xsh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
403.205 524.279 mo
(.)sh
72.0004 536.279 mo
(Theresultis)
[6.08707 4.9813 9.34277 3.31747 4.42324 3.87538 4.98129 2.76961 7.68913 2.76959 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
78.3605 557.159 mo
(dy)
[5.15469 0 ]xsh
78.12 561.6 mo
89.04 561.6 li
89.04 561.12 li
78.12 561.12 li
cp
f
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
78.12 570.72 mo
(dx)
[5.15469 0 ]xsh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
93.0001 563.88 mo
(=)sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
105.6 557.16 mo
(y)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
110.52 558.6 mo
(j)sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
114.119 558.6 mo
(+1)
[6.1188 0 ]xsh
ARMEHP+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
126.96 557.16 mo
( )sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
136.919 557.16 mo
(y)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
141.84 558.6 mo
(j)sh
104.76 561.6 mo
146.88 561.6 li
146.88 561.12 li
104.76 561.12 li
cp
f
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
104.76 570.72 mo
(x)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
110.4 572.16 mo
(j)sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
113.999 572.16 mo
(+1)
[6.1188 0 ]xsh
ARMEHP+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
126.96 570.72 mo
( )sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
136.919 570.72 mo
(x)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
142.56 572.16 mo
(j)sh
ARMEHP+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
150.12 563.88 mo
( )sh
%ADOBeginSubsetFont: BKUAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
ARMEHS+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7A73D3B2B97DEB4C7BDB68E0D63865C8BF294429AD1BA
AE59A25299F9306A9E28AA5C0C0AF9F97F56096DB0FD0EC440ACCE834B0BA539
2FD94D026768A961AA5D1A88FAE30F2B2033E77AFAB55B0B9C8092CD226DD9EF
EEAAF5CD5AE79D6DDEC4C37DC43DE3B85DD2A2EC4DC0C9F349D5E8F9F615782E
DC8C53805553FD3C0007C1818BF3D99AB659A079ED36132BBDC613CA63D7A0FE
429706DBC6BA998CE56A89C002758EF37F90A390F83B3DFE49D312FA66FDF2F1
6212D1503559B35FC2DB8BD5A49535> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ARMEHS+CMR10 /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/ARMEHS+CMR10*1 
[40{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp /one /.notdef 
/three 2{/.notdef}rp /six 6{/.notdef}rp /equal 194{/.notdef}rp]
ARMEHS+CMR10 nf
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
161.16 557.16 mo
(3)sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
166.199 557.16 mo
(A)sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
173.64 553.44 mo
(2)sh
ARMEHP+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
180.24 557.16 mo
( )sh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
190.199 557.16 mo
(1)sh
161.16 561.6 mo
195.36 561.6 li
195.36 561.12 li
161.16 561.12 li
cp
f
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
175.68 570.72 mo
(6)sh
196.44 563.88 mo
(\()sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
200.28 563.88 mo
(x)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
205.92 565.32 mo
(j)sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
209.519 565.32 mo
(+1)
[6.1188 0 ]xsh
ARMEHP+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
222.36 563.88 mo
( )sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
232.199 563.88 mo
(x)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
237.84 565.32 mo
(j)sh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
242.16 563.88 mo
(\))sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
246 563.88 mo
(y)sh
ARMEHT+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
251.28 559.68 mo
(00)
[2.27692 0 ]xsh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
250.92 566.28 mo
(j)sh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
258.48 563.88 mo
(+)sh
269.52 557.16 mo
(3)sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
274.559 557.16 mo
(B)sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
282.6 553.44 mo
(2)sh
ARMEHP+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
289.2 557.16 mo
( )sh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
299.159 557.16 mo
(1)sh
269.52 561.6 mo
304.2 561.6 li
304.2 561.12 li
269.52 561.12 li
cp
f
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
284.28 570.72 mo
(6)sh
305.28 563.88 mo
(\()sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
309.12 563.88 mo
(x)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
314.76 565.32 mo
(j)sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
318.359 565.32 mo
(+1)
[6.1188 0 ]xsh
ARMEHP+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
331.32 563.88 mo
( )sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
341.159 563.88 mo
(x)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
346.8 565.32 mo
(j)sh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
351 563.88 mo
(\))sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
354.84 563.88 mo
(y)sh
ARMEHT+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
360.12 559.68 mo
(00)
[2.27692 0 ]xsh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
359.76 566.28 mo
(j)sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
363.359 566.28 mo
(+1)
[6.1188 0 ]xsh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
379.08 563.88 mo
(\()sh
%%IncludeResource: font Times-Roman
/ARMEHL+Times-Roman*1 
[39{/.notdef}rp /quoteright /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period 
2{/.notdef}rp /one /two /three /four /five 11{/.notdef}rp /A 
2{/.notdef}rp /D /E 3{/.notdef}rp /I 2{/.notdef}rp /L /.notdef 
/N 4{/.notdef}rp /S /T 2{/.notdef}rp /W 9{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
/.notdef /k /l /m /n /o /p /q 
/r /s /t /u /v /w /.notdef /y 
/z 51{/.notdef}rp /fi 81{/.notdef}rp]
ARMEHL+Times-Roman nf
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
382.92 563.88 mo
(3.3.5)
[4.98129 2.49066 4.98129 2.49066 0 ]xsh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
402.605 563.88 mo
(\))sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
72.0018 592.92 mo
(forthe\256rstderivative,and)
[3.31747 4.9813 7.63725 2.7696 4.9813 8.86357 5.53921 3.31747 3.87538 7.20993 4.98131 4.42325 
3.31746 2.52951 4.7412 4.42325 2.76959 2.52951 4.86176 4.42325 7.17108 4.42323 4.98131 0 
]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
196.682 615 mo
(d)sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
201.84 611.4 mo
(2)sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
206.28 615 mo
(y)sh
196.44 619.44 mo
211.8 619.44 li
211.8 618.96 li
196.44 618.96 li
cp
f
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
196.44 628.56 mo
(dx)
[5.15469 0 ]xsh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
207.24 625.68 mo
(2)sh
%ADOBeginSubsetFont: BKUAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
ARMEHS+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/zero <1C60D8A8C9B7A73D3B2D32309B1F5D5A32FC3614834F8BC61B6EB92C1
2484BD76628737DA40CF9DA1C97CCDAFB1D1B732C642F74A7C41B7D3AC6DAF8D
1E760692B6EBD2417EF1893A4AA0B1CF049D4C54D830CEC073A9153D451FAD42
892B0930AEE4FE18588336BFDAD60D8A4F4CFFED76F103FB9BBD8A33EFBA3F18
232B88D88FE54E17260FA3E2CC29DEC0CB72B88DC816FF5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ARMEHS+CMR10 /Encoding get
dup 48 /zero put
pop
%ADOEndSubsetFont
/ARMEHS+CMR10*1 
[40{/.notdef}rp /parenleft /parenright /.notdef /plus 4{/.notdef}rp /zero /one 
/.notdef /three 2{/.notdef}rp /six 6{/.notdef}rp /equal 194{/.notdef}rp]
ARMEHS+CMR10 nf
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
215.76 621.72 mo
(=)sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
226.318 621.72 mo
(Ay)
[7.43907 0 ]xsh
%ADOBeginSubsetFont: ROVAAA+CMSY7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
ARMEHT+CMSY7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/minus <1C60D8A8C9B583F94136850881AEBF1879803A7149CAAB833E4A0A76
3535D39AC9288DB5E8A4FD0351569E4CE3BF89> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ARMEHT+CMSY7 /Encoding get
dup 32 /minus put
pop
%ADOEndSubsetFont
/ARMEHT+CMSY7*1 
[32{/.notdef}rp /minus 15{/.notdef}rp /prime 207{/.notdef}rp]
ARMEHT+CMSY7 nf
ARMEHT+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
239.04 617.64 mo
(00)
[2.27692 0 ]xsh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
238.68 624.24 mo
(j)sh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
246.24 621.72 mo
(+)sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
256.318 621.72 mo
(By)
[8.04382 0 ]xsh
ARMEHT+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
269.64 617.64 mo
(00)
[2.27692 0 ]xsh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
269.28 624.24 mo
(j)sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
272.879 624.24 mo
(+1)
[6.1188 0 ]xsh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
379.08 621.72 mo
(\()sh
%%IncludeResource: font Times-Roman
/ARMEHL+Times-Roman*1 
[39{/.notdef}rp /quoteright /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period 
2{/.notdef}rp /one /two /three /four /five /six 10{/.notdef}rp 
/A 2{/.notdef}rp /D /E 3{/.notdef}rp /I 2{/.notdef}rp /L 
/.notdef /N 4{/.notdef}rp /S /T 2{/.notdef}rp /W 9{/.notdef}rp 
/a /b /c /d /e /f /g /h 
/i /j /k /l /m /n /o /p 
/q /r /s /t /u /v /w /.notdef 
/y /z 51{/.notdef}rp /fi 81{/.notdef}rp]
ARMEHL+Times-Roman nf
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
382.92 621.72 mo
(3.3.6)
[4.98129 2.49066 4.98129 2.49066 0 ]xsh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
402.605 621.72 mo
(\))sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
72.0018 648.12 mo
(forthesecondderivative.Since)
[3.31747 4.9813 6.43775 2.7696 4.98131 7.66308 3.87537 4.42325 4.42325 4.98129 4.9813 8.10159 
4.98129 4.42325 3.31747 2.52951 4.74121 4.42323 2.76961 2.5295 4.86174 4.42325 8.25104 5.5392 
2.76961 4.98129 4.42325 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
205.566 648.12 mo
(A)sh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
216.485 648.12 mo
(=1)
[11.2807 0 ]xsh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
236.043 648.12 mo
(at)
[4.42325 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
246.596 648.12 mo
(x)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
252.96 649.56 mo
(j)sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
257.16 648.12 mo
(,)sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
263.131 648.12 mo
(A)sh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
274.05 648.12 mo
(=0)
[11.2806 0 ]xsh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
293.607 648.12 mo
(at)
[4.42325 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
304.161 648.12 mo
(x)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
309.84 649.56 mo
(j)sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
313.439 649.56 mo
(+1)
[6.1188 0 ]xsh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
324.12 648.12 mo
(,while)
[5.97058 7.19284 4.98132 2.76959 2.76959 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
355.467 648.12 mo
(B)sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
366.866 648.12 mo
(isjustthe)
[2.76959 7.23578 2.76959 4.98129 3.8754 6.00943 2.76959 4.98129 0 ]xsh
72.0005 660 mo
(otherwayaround,\(3.3.6\)showsthat)
[4.9813 2.7696 4.9813 4.42325 6.07711 7.0733 4.42324 7.86149 4.42325 3.31747 4.98129 4.98129 
4.98131 4.98131 5.13074 3.31747 4.98129 2.49065 4.98129 2.49065 4.98131 5.95757 3.87537 4.98131 
4.7412 7.19284 6.75555 2.76962 4.98129 4.42325 0 ]xsh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
221.839 660 mo
(y)sh
ARMEHT+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
228.12 656.4 mo
(00)
[2.27692 0 ]xsh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
236.16 660 mo
(isjustthetabulatedsecondderivative,and)
[2.76961 6.75555 2.76961 4.98129 3.87537 5.76935 2.76959 4.98132 7.18286 2.76962 4.42325 4.74118 
4.98132 2.76959 4.42325 2.76959 4.42325 7.74094 3.87537 4.42325 4.42325 4.98129 4.98132 7.74094 
4.98129 4.42325 3.31747 2.52948 4.74121 4.42325 2.76959 2.52951 4.86176 4.42322 5.25031 4.42325 
4.98129 0 ]xsh
72.0003 672 mo
(alsothatthesecondderivativewillbecontinuousacross\(e.g.\)theboundarybetween)
[4.42324 2.76961 3.87537 7.14119 2.7696 4.9813 4.42325 4.92949 2.7696 4.98131 6.46358 3.87538 
4.42323 4.42325 4.98131 4.98131 7.02164 4.98129 4.42325 3.31747 2.52951 4.74118 4.42325 2.76961 
2.5295 4.86176 6.22348 7.19284 2.76962 2.76959 5.05005 4.98129 6.46356 4.42325 4.98132 4.98129 
2.76959 2.76959 4.98129 4.98132 4.98129 4.98129 5.79517 4.42325 4.42325 3.31747 4.98129 3.87537 
5.91571 3.31747 4.42325 2.49066 4.98129 2.49063 6.67786 2.76962 4.98129 6.46359 4.98129 4.98129 
4.98129 4.98132 4.98129 4.42325 3.31747 6.78152 4.98132 4.42322 2.76962 7.19284 4.42325 4.42325 
0 ]xsh
72.0003 683.88 mo
(thetwointervals)
[2.7696 4.9813 8.26283 2.7696 7.0733 8.70133 2.76961 4.98129 2.76961 4.42324 3.31747 4.7412 
4.42325 2.76959 0 ]xsh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
144.35 683.88 mo
(\()sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
148.189 683.88 mo
(x)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
154.08 685.32 mo
(j)sh
ARMEHT+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
157.679 685.32 mo
( )sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
163.918 685.32 mo
(1)sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
168.6 683.88 mo
(,x)
[4.44133 0 ]xsh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
178.68 685.32 mo
(j)sh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
183 683.88 mo
(\))sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
190.679 683.88 mo
(and)
[4.42325 4.98129 0 ]xsh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
208.785 683.88 mo
(\()sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
212.625 683.88 mo
(x)sh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
218.4 685.32 mo
(j)sh
ARMEHO+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
222.72 683.88 mo
(,x)
[4.44133 0 ]xsh
ARMEHQ+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
232.8 685.32 mo
(j)sh
ARMEHR+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
236.399 685.32 mo
(+1)
[6.1188 0 ]xsh
ARMEHS+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
247.08 683.88 mo
(\))sh
ARMEHL+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
250.92 683.88 mo
(.)sh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/1 ]]
] del_res
/ARMEHS+CMR10*1 uf
/ARMEHS+CMR10 uf
/BKUAAA+CMR10 uf
/ARMEHP+CMSY10*1 uf
/ARMEHP+CMSY10 uf
/RQIBAA+CMSY10 uf
/ARMEHQ+CMMI7*1 uf
/ARMEHQ+CMMI7 uf
/IPIBAA+CMMI7 uf
/ARMEHT+CMSY7*1 uf
/ARMEHT+CMSY7 uf
/ROVAAA+CMSY7 uf
/ARMEHU+Times-Italic*1 uf
/ARMEHM+Helvetica-Oblique*1 uf
/ARMEHR+CMR7*1 uf
/ARMEHR+CMR7 uf
/GLBBAA+CMR7 uf
/ARMEHO+CMMI10*1 uf
/ARMEHO+CMMI10 uf
/MMFAAA+CMMI10 uf
/ARMEHN+Helvetica*1 uf
/ARMEHL+Times-Roman*1 uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Page: 3 3
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
[
[/Label (3)]
[/TrimBox [12 51.377624511719 583.08001708984 790.42236328125]]
[/BleedBox [12 51.377624511719 583.08001708984 790.42236328125]]
[/ArtBox [12 51.5776 583.08 790.622 ]]
]xpdfm
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -842 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
12 51.5776 mo
12 790.622 li
583.08 790.622 li
583.08 51.5776 li
cp
clp
[0.933137 0 0 0.933137 12 51.5776 ]ct
false sop
/2 
[/DeviceGray] /CSA add_res
0 gry
%%IncludeResource: font Helvetica-Oblique
/ARMEHV+Helvetica-Oblique /Helvetica-Oblique findfont ct_VMDictPut
/ARMEHV+Helvetica-Oblique*1 
[46{/.notdef}rp /period 4{/.notdef}rp /three 15{/.notdef}rp /C 5{/.notdef}rp /I 
9{/.notdef}rp /S 13{/.notdef}rp /a /b /c /.notdef /e 
3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o /p 
/.notdef /r /.notdef /t /u 138{/.notdef}rp]
ARMEHV+Helvetica-Oblique nf
ARMEHV+Helvetica-Oblique*1 [8.9664 0 0 -8.9664 0 0 ]msf
166.8 84.6 mo
(3.3CubicSplineInterpolation)
[4.98532 2.49266 7.38562 6.4736 4.98532 4.98531 1.9904 6.88351 5.98051 4.98532 1.9904 1.9904 
4.98532 7.14531 2.49268 4.98532 2.49265 4.98532 3.22604 4.98532 4.98532 1.99039 4.98532 2.49268 
1.99039 4.98532 0 ]xsh
%%IncludeResource: font Times-Roman
/ARMEHW+Times-Roman /Times-Roman findfont ct_VMDictPut
/ARMEHW+Times-Roman*1 
[49{/.notdef}rp /one 3{/.notdef}rp /five 202{/.notdef}rp]
ARMEHW+Times-Roman nf
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
386.481 84.6 mo
(115)
[4.98129 4.98129 0 ]xsh
72 88.92 mo
406.8 88.92 li
406.8 88.44 li
72 88.44 li
cp
f
%%IncludeResource: font Helvetica
/ARMEHX+Helvetica /Helvetica findfont ct_VMDictPut
/ARMEHX+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/period /slash /zero /one /two /three /four /five 
/.notdef /seven /eight /nine /colon 5{/.notdef}rp /at /A 
/B /C /D /E /F /G /H /I 
2{/.notdef}rp /L /M /N /O /P /.notdef /R 
/S /T /U 11{/.notdef}rp /a /b /c /d 
/e /f /g /h /i /.notdef /k /l 
/m /n /o /p /.notdef /r /s /t 
/u /v /w /.notdef /y 134{/.notdef}rp]
ARMEHX+Helvetica nf
ARMEHX+Helvetica*1 [0 7 7 0 0 0 ]msf
466 178.92 mo
(Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING \(ISBN 0-521-43108-5\))
[4.66895 3.89203 5.83093 3.89197 1.55389 3.89203 1.94598 3.89203 3.89197 3.89197 3.89203 1.94598 
1.94604 2.33093 3.89197 5.83093 1.94604 5.05389 5.05389 5.83093 4.66895 5.05389 1.94598 5.05389 
4.66895 3.89203 1.94598 5.05389 4.66895 5.05389 1.94598 4.66895 4.66895 4.66895 1.94601 1.94601 
5.05389 1.94598 5.05389 1.94598 1.94601 4.27695 5.05389 4.66895 1.94598 4.66895 5.05389 4.27698 
1.94598 5.44598 4.27698 1.94598 4.66895 5.05389 1.94598 4.66895 5.05389 4.27698 1.94598 4.27695 
1.94601 5.05389 1.94598 5.05389 5.44598 5.83096 4.66895 5.05389 4.27695 1.94598 5.05389 5.44601 
1.94601 2.33093 1.94598 4.66895 4.66895 5.05389 1.94601 3.892 2.33093 3.89203 3.89197 3.89203 
2.33093 3.892 3.892 3.89197 3.89203 3.89197 2.33099 3.89197 0 ]ysh
458 178.92 mo
(Copyright \(C\) 1988-1992 by Cambridge University Press.Programs Copyright \(C\) 1988-1992 by Numerical Recipes Software. )
[5.05389 3.89197 3.89203 3.5 2.33093 1.55389 3.89203 3.89197 1.94598 1.94604 2.33093 5.05389 
2.33093 1.94598 3.89203 3.89203 3.89197 3.89197 2.33099 3.89197 3.89203 3.89197 3.89203 1.94598 
3.89197 3.5 1.94604 5.05389 3.89197 5.83096 3.892 2.33093 1.55389 3.89203 3.89197 3.89203 
1.94598 5.05389 3.892 1.55389 3.5 3.892 2.33093 3.5 1.55389 1.94601 3.5 1.94601 
4.66895 2.33093 3.892 3.5 3.5 3.69601 4.66895 2.33093 3.892 3.892 2.33093 3.89203 
5.83093 3.5 1.94598 5.05389 3.89203 3.89197 3.5 2.33096 1.55389 3.892 3.892 1.94601 
1.94598 2.33093 5.05389 2.33096 1.94601 3.89197 3.89203 3.89197 3.89203 2.33093 3.892 3.892 
3.892 3.892 1.94598 3.89203 3.5 1.94598 5.05389 3.892 5.83096 3.89197 2.33096 1.55389 
3.5 3.892 1.55389 1.94598 5.05389 3.89203 3.5 1.55389 3.89197 3.89203 3.5 1.94598 
4.66895 3.89197 1.94604 1.94598 5.05389 3.89197 2.33099 3.89197 1.94598 0 ]ysh
449.999 178.92 mo
(Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copyin)
[4.66895 3.89203 2.33093 5.83093 1.55389 3.5 3.5 1.55389 3.89197 3.89203 1.94598 1.55389 
3.5 1.94598 3.89203 2.33093 3.89203 3.89197 1.94604 3.89197 3.89197 1.94604 1.94598 3.89203 
2.33093 1.94598 1.55389 3.89197 1.94604 3.89197 2.33093 3.89203 3.89203 1.94598 1.94598 3.892 
3.5 3.892 2.33093 3.5 1.94601 1.94601 3.89197 1.94601 5.83096 3.89197 3.5 3.89203 
1.94598 3.892 3.892 3.892 1.94601 3.89197 3.89203 3.89197 3.89203 2.33093 1.94598 3.5 
3.89203 3.89197 3.5 1.94601 1.94601 3.89197 2.33096 1.94601 1.94598 3.892 3.892 1.55389 
2.33093 1.94601 3.892 5.05389 3.892 1.94601 3.89197 3.89203 2.33093 3.5 3.892 3.892 
3.892 1.55389 1.94601 3.89197 3.5 3.89203 1.94598 1.94598 4.27698 3.89197 2.33096 1.94601 
3.89197 3.89203 2.33093 1.94598 2.33096 3.892 3.892 2.33096 3.89197 3.89203 3.89197 3.5 
1.94598 1.55389 3.89203 3.89197 1.94604 1.94598 3.89197 2.33099 1.94598 3.89197 3.89203 3.5 
1.94598 3.5 3.89203 3.89197 3.5 1.55389 0 ]ysh
449.999 573.034 mo
(g of machine-)
[3.89203 1.94598 3.89197 1.94604 1.94598 5.83093 3.89203 3.5 3.89197 1.55389 3.89203 3.89197 
0 ]ysh
441.999 178.92 mo
(readable files \(including this one\) to any servercomputer, is strictly prohibited. To order Numerical Recipes booksor CDROMs, v)
[2.33093 3.89203 3.89197 3.89203 3.89197 3.89203 1.55389 3.89197 1.94598 1.94604 1.55389 1.55389 
3.89197 3.5 1.94604 2.33093 1.55389 3.89197 3.5 1.55389 3.89203 3.89197 1.55389 3.89203 
3.89197 1.94598 1.94604 3.89197 1.55389 3.5 1.94598 3.89203 3.89203 3.89197 2.33093 1.94601 
1.94601 3.89197 1.94601 3.892 3.892 3.5 1.94601 3.5 3.89197 2.33096 3.5 3.892 
4.08093 3.5 3.89203 5.83093 3.892 3.892 1.94598 3.89203 2.33093 1.94598 1.94601 1.55389 
3.5 1.94601 3.5 1.94598 2.33093 1.55389 3.5 1.94601 1.55389 3.5 1.94601 3.89197 
2.33096 3.892 3.892 1.55389 3.892 1.55389 1.94598 3.89203 3.89197 1.94601 1.94601 4.27692 
3.89203 1.94598 3.892 2.33096 3.89197 3.89203 2.33093 1.94598 5.05389 3.89203 5.83093 3.892 
2.33096 1.55389 3.5 3.89197 1.55389 1.94601 5.05389 3.892 3.5 1.55389 3.892 3.892 
3.5 1.94598 3.89203 3.89197 3.89203 3.5 5.25 3.89197 2.33093 1.94604 5.05389 5.05389 
5.05389 5.44598 5.83093 3.5 1.94598 1.94604 0 ]ysh
441.999 576.87 mo
(isit website)
[1.55389 3.5 1.55389 1.94598 1.94604 5.05389 3.89197 3.89203 3.5 1.55389 1.94598 0 
]ysh
433.999 178.92 mo
(http://www.nr.com or call 1-800-872-7423 \(North America only\),or send email to directcustserv@cambridge.org \(outside North Amer)
[3.89203 1.94598 1.94598 3.89197 1.94604 1.94598 1.94598 5.05389 5.05389 5.05389 1.94598 3.89203 
2.33093 1.94598 3.5 3.89203 5.83093 1.94598 3.89203 2.33093 1.94598 3.5 3.89203 1.55389 
1.55389 1.94598 3.89203 2.33093 3.89203 3.89197 3.89197 2.33099 3.89197 3.89203 3.89197 2.33096 
3.892 3.892 3.892 3.892 1.94601 2.33093 5.05389 3.892 2.33096 1.94598 3.892 1.94601 
4.66895 5.83093 3.892 2.33096 1.55389 3.5 3.89197 1.94601 3.892 3.892 1.55389 3.5 
2.33096 3.69598 3.892 2.33096 1.94598 3.5 3.892 3.892 3.892 1.94601 3.89197 5.83096 
3.892 1.55389 1.55389 1.94598 1.94601 3.892 1.94598 3.89203 1.55389 2.33093 3.892 3.5 
1.94601 3.5 3.89197 3.5 1.94601 3.5 3.892 2.33093 3.5 7.10501 3.5 3.892 
5.83093 3.89203 2.33093 1.55389 3.892 3.892 3.892 1.94601 3.89197 2.33093 3.89203 1.94598 
2.33093 3.89203 3.89197 1.94604 3.5 1.55389 3.89197 3.89203 1.94598 5.05389 3.89197 2.33099 
1.94598 3.89197 1.94604 4.66895 5.83093 3.89197 0 ]ysh
433.999 588.455 mo
(ica\).)
[1.55389 3.5 3.89203 2.33093 0 ]ysh
%%IncludeResource: font Times-Roman
/ARMEHW+Times-Roman*1 
[39{/.notdef}rp /quoteright /parenleft /parenright 2{/.notdef}rp /comma /.notdef /period 
2{/.notdef}rp /one /.notdef /three /.notdef /five 18{/.notdef}rp /H 
11{/.notdef}rp /T 2{/.notdef}rp /W 9{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /.notdef /k 
/l /m /n /o /p /q /r /s 
/t /u /v /w /.notdef /y 134{/.notdef}rp]
ARMEHW+Times-Roman nf
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
91.92 117.84 mo
(Theonlyproblemnowisthatwesupposedthe)
[6.08707 4.9813 6.34303 4.9813 4.9813 2.76961 6.78154 4.98129 3.31747 4.98129 4.98131 2.76961 
4.42323 9.4306 4.98131 4.74118 9.11264 2.76962 5.91571 2.76959 4.98129 4.42325 4.68939 7.19286 
6.34305 3.87537 4.98131 4.98129 4.98129 4.98131 3.87538 4.42323 6.78154 2.76959 4.98132 0 
]xsh
%ADOBeginSubsetFont: MMFAAA+CMMI10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /MMFAAA+CMMI10 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/BaseFontName (CMMI10) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 46 /period put
dup 78 /N put
dup 106 /j put
dup 120 /x put
dup 121 /y put
def
/FontBBox {-32 -250 1048 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 -0 683 705 431 442 453 466] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [31] def
/StdVW [72] def
/StemSnapH [25 31] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
7 dict dup begin
/comma <1C60D8A8C9B854D0F83823896563389F99F93F23FF16CE93B743AB7C
376AC821786AAEDE7270059A6FF1CFEB37235A20C21D908EB2B0616D97378D86
D24E973D8D07D83E6BD6C0E31C021B3C13AA12FA9436B6F6> |-
/period <1C60D8A8C9B854D088E8E1B7306BEE53606180C9D8E09A11AAC6162
445F3509DC276AA079959B131> |-
/N <1C60D8A8C9B6D671D38ABEF2C3AA4E9EF85233BCD577CC743D9BB72B06D1
C34EFFA73A8EECAE181D7E0042CE8F56F221FF779F17D437F7443615FB8D52E0
7A6980076CEF2C0E05CD0FE4C8C8C807EBD67840343BFBC95A08669392F72179
EDD2F4C343B04558540E292A683214DA12521D574D6469F99DFFA755BA1A2F39
88A639DD4D3FC28B77E09E512F4382A49FEA62F84B18CA82115A48865FC3D2FD
E8F27EF8866D2608E80E86EAD43D4F9279E5C3B7B4E3C1EBA7FF1CA06779670B
8855CFCE548DDF5F4514A279A3> |-
/j <1C60D8A8C9B71F8BD01CFA7B290BD39769F3DFC39429FEBD27CF64B0876B
B3B3606CF1E6A63D2ABE0E42D147A4137C4D172AE3384AE5C51AD29C05501F54
F9244F6AC7D12E29D34E8AE152D08E186DFFD43C1FDBE8931D740DF6AB6AC72E
FEF405789D33BC42969C5C1A836D564B3EC849FB6B1A1722AB075D4E40B690EB
5E31C0D0B537F95D83622111FC87A1DB1192AEE1CC89EA07074FD8DB08504F23
3F59> |-
/x <1C60D8A8C9B7FF2B5E691B02ABF5E6B36349D70F01EDCA1CD9EAA7D42C0C
D3775D212B1A0D3DAC3A979A163114C48B359F5B767254ECAFBA627EEAB5004E
5F287E21D1D40C030BD9B088F0AD749D63A2E8A505BC208CD0E68AC6F5ABB682
EEEDF99234D0D423385B905D018FF751827D822E9B656B7606E7C9937680BD2F
E67DB02D1BD1BEEA015CC64F197C1A9477A24BC5FD41A198210AE3B1CF7C11C4
61E37B78D075740C0279207334FF27799FB349732AFD1D730E14B11CF1BC247B
EFBEC79CE40DBC31725DADD888B5B0345E950DFABA> |-
/y <1C60D8A8C9B751D5041DDABC011B22E2674EC9D2008402DC54EAC5EE3379
40D4E00C5876708EBFC0F089816A923F7414E12F4EC86FE029C9164FB00D37CE
3824BFB04DBE0C4C2733327610FB8442214C961F4823DCB09F8F2DF872A8CE22
62AC898EC0E84871D4EC8F51AF0892D628BA7C3C799F6D511F178BEE37A8BECE
AA043542F6F8FB29E710A79A7852CCE7858DA82878DF2512D738066A24C3F23D
5749E869C5C3A41524DE46794B0E3880C3C1C4EB7FF85447E9075DF4909C0859
7159F3848B34F8F9CB8E9A6A1B158B5BD9C5F03DD569D590DA5F215711D7> |-
/.notdef <1C60D8A8C9B81F2CC3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEHY+CMMI10 /MMFAAA+CMMI10 findfont ct_VMDictPut
/ARMEHY+CMMI10*1 
[44{/.notdef}rp /comma /.notdef /period 31{/.notdef}rp /N 27{/.notdef}rp /j 
13{/.notdef}rp /x /y 134{/.notdef}rp]
ARMEHY+CMMI10 nf
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
274.627 117.84 mo
(y)sh
%ADOBeginSubsetFont: ROVAAA+CMSY7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ROVAAA+CMSY7 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.035 def
/BaseFontName (CMSY7) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /minus put
dup 48 /prime put
def
/FontBBox {-15 -951 1252 782} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-23 -0 683 708] def
/OtherBlues [-127 -117] def
/BlueScale 0.039625 def
/StdHW [49] def
/StdVW [93] def
/StemSnapH [49 61] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/minus <1C60D8A8C9B583F94136850881AEBF1879803A7149CAAB833E4A0A76
3535D39AC9288DB5E8A4FD0351569E4CE3BF89> |-
/prime <1C60D8A8C9B82356A1B15BD09A80AF2525F8E0C64B04967D26E54CFA
3D1BE92F3BBFF514F2F9F4811C69355EAD0F2BFC0002DC8B7DFC3E2B14ED53C5
5CDC00A1ED08025288> |-
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEHZ+CMSY7 /ROVAAA+CMSY7 findfont ct_VMDictPut
/ARMEHZ+CMSY7*1 
[32{/.notdef}rp /minus 15{/.notdef}rp /prime 207{/.notdef}rp]
ARMEHZ+CMSY7 nf
ARMEHZ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
280.92 114.24 mo
(00)
[2.27692 0 ]xsh
%ADOBeginSubsetFont: IPIBAA+CMMI7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /IPIBAA+CMMI7 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/BaseFontName (CMMI7) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 105 /i put
dup 106 /j put
def
/FontBBox {0 -250 1171 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 -0 683 703 431 441 451 463] def
/OtherBlues [-204 -194] def
/BlueScale 0.04379 def
/StdHW [32] def
/StdVW [81] def
/StemSnapH [32 36] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/i <1C60D8A8C9B70721B9F639782C8460B97E82801AD0D8A919DC5D9CAA4C68
FBE7833AC2F83808014E455261AE4698D1787D69206B38071478CB577B72EF41
ED0606485A0805B327A9541BF99C223B853428820C7432E93F64332505182833
A9A1726F67F49595C0D6B4E36728E08E3A3FFE1D3400C0426C9F7D546B609ED9
847726C531FCA5CF35B9B04381F81797F4E937A123F607399D53953A016040EB
4EB08C885D7568DA709FDAC1486D> |-
/j <1C60D8A8C9B742B24161FBB87CDB8F59E0247C68AA800C77616BDB6AE441
32759D578A9DF014C497635F6CC7AE3EE1F35E7CDE1BEC8E720A7F94A1ED61DE
A83FCB00AB458A1501A9D33004FFB6D355935C859A82209183A28E90946EA2EC
7F5D9833DDA441427EDFD781CB6D311B8067F0AECD5F9DEAEB9219E16A3D36E3
81A03206473C128D17597493CE0BA56FD9F44B8CD913B9ABEFA49655B5B8558A
099053BB33> |-
/.notdef <1C60D8A8C9B81F2CC3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEIA+CMMI7 /IPIBAA+CMMI7 findfont ct_VMDictPut
/ARMEIA+CMMI7*1 
[105{/.notdef}rp /i /j 149{/.notdef}rp]
ARMEIA+CMMI7 nf
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
280.56 120.48 mo
(i)sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
285.96 117.84 mo
('stobeknown,when,actually,)
[2.71771 5.91574 2.76959 6.90109 4.98129 6.34305 4.98129 4.98129 4.74121 7.19284 4.98129 4.29089 
7.19284 4.98132 4.42322 4.98132 4.41043 4.42325 4.42325 2.76959 4.98129 4.42325 2.76962 2.76959 
4.38156 0 ]xsh
72.0012 129.84 mo
(theyarenot.However,wehavenotyetrequiredthatthe)
[2.7696 4.9813 4.3037 7.74094 4.42325 3.31747 7.42298 4.9813 4.9813 2.7696 7.41019 7.19284 
4.7412 7.19286 4.18315 4.86176 4.42323 2.95781 5.25031 7.19284 7.30344 4.98129 4.18314 4.86176 
7.30344 4.98129 4.98131 5.64978 4.98131 4.42323 5.6498 3.31747 4.42323 4.98131 4.98129 2.76961 
3.31746 4.42325 7.62137 2.76962 4.98129 4.42325 5.76935 2.76959 4.98129 0 ]xsh
%%IncludeResource: font Times-Italic
/ARMEIB+Times-Italic /Times-Italic findfont ct_VMDictPut
/ARMEIB+Times-Italic*1 
[114{/.notdef}rp /r /s /t 57{/.notdef}rp /fi 81{/.notdef}rp]
ARMEIB+Times-Italic nf
ARMEIB+Times-Italic*1 [9.9626 0 0 -9.9626 0 0 ]msf
303.233 129.84 mo
(\256rst)
[4.98129 3.75583 3.87537 0 ]xsh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
321.615 129.84 mo
(derivative,computed)
[4.98129 4.42325 3.31747 2.52951 4.74118 4.42325 2.76962 2.52948 4.86176 4.42325 5.25031 4.42322 
4.98132 7.75089 4.98129 4.98132 2.76959 4.42325 0 ]xsh
72.0012 141.84 mo
(fromequation\(3.3.5\),becontinuousacrosstheboundarybetweentwointervals.The)
[3.31747 3.31747 4.9813 9.67069 4.42325 4.9813 4.9813 4.42325 2.76959 2.76961 4.98129 6.78154 
3.31747 4.98131 2.49065 4.98131 2.49063 4.98131 3.31747 4.29089 4.98131 6.34303 4.42323 4.98131 
4.98131 2.76959 2.76961 4.98131 4.98129 4.98129 4.98129 5.67563 4.42325 4.42325 3.31747 4.98129 
3.8754 5.79514 2.76962 4.98129 6.46359 4.98129 4.98129 4.98129 4.98132 4.98129 4.42325 3.31747 
6.54144 4.98129 4.42325 2.76959 7.19284 4.42325 4.42325 6.90109 2.76962 7.0733 7.02164 2.76959 
4.98129 2.76959 4.42325 3.31747 4.74121 4.42325 2.76959 3.8754 5.73047 6.08707 4.98129 0 
]xsh
72.0012 153.72 mo
(keyideaofacubicsplineistorequirethiscontinuityandtouseittogetequations)
[4.86175 4.3037 7.74094 2.76961 4.98129 4.42325 7.30344 4.98129 6.07712 7.30343 4.42324 4.98131 
4.98131 2.76959 7.18289 3.87537 4.98129 2.76962 2.76959 4.98129 7.30344 2.76959 6.75557 2.76961 
7.86148 3.31747 4.42325 4.98129 4.98129 2.76959 3.31747 7.06335 2.76959 4.98129 2.76962 6.87509 
4.42325 4.98129 4.98132 2.76959 2.76959 4.98129 4.98132 2.76959 2.76959 7.6214 4.42325 4.98129 
7.74094 2.76959 7.86151 4.98129 3.87537 7.18292 2.76959 5.76935 2.76959 7.86148 4.98129 4.42325 
5.52927 4.42325 4.98129 4.98129 4.42325 2.76959 2.76959 4.98129 4.98129 0 ]xsh
72.0012 165.72 mo
(forthesecondderivatives)
[3.31747 4.9813 7.5177 2.7696 4.9813 8.74303 3.87537 4.42324 4.42325 4.9813 4.9813 9.18153 
4.98129 4.42325 3.31747 2.52951 4.74118 4.42325 2.76961 2.5295 4.86176 4.42325 0 ]xsh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
183.134 165.72 mo
(y)sh
ARMEHZ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
189 162.12 mo
(00)
[2.27692 0 ]xsh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
188.64 168.36 mo
(i)sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
194.04 165.72 mo
(.)sh
91.9204 177.72 mo
(Therequiredequationsareobtainedbysettingequation\(3.3.5\)evaluatedfor)
[6.08707 4.9813 7.78363 3.31747 4.42325 4.9813 4.9813 2.76959 3.31747 4.42325 8.22115 4.42323 
4.98131 4.98131 4.42323 2.76961 2.76959 4.98131 4.98131 7.1152 4.42325 3.31747 7.78363 4.98129 
4.98129 2.76961 4.42323 2.76962 4.98129 4.42325 8.22113 4.98129 8.34171 3.87537 4.42325 2.76959 
2.76962 2.76959 4.98129 8.46124 4.42325 4.98129 4.98129 4.42325 2.76962 2.76959 4.98129 8.10159 
3.31747 4.98129 2.49066 4.98129 2.49063 4.98132 6.55728 4.18317 4.74121 4.42322 2.76962 4.98129 
4.42325 2.76959 4.42325 8.22113 3.31747 4.98129 0 ]xsh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
72.0001 189.6 mo
(x)sh
%ADOBeginSubsetFont: BKUAAA+CMR10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /BKUAAA+CMR10 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMR10) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 49 /one put
dup 50 /two put
dup 61 /equal put
def
/FontBBox {-251 -250 1009 969} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 -0 683 705 431 448 666 677] def
/OtherBlues [-206 -194] def
/BlueScale 0.04379 def
/StdHW [31] def
/StdVW [69] def
/StemSnapH [22 31] def
/StemSnapV [69 89] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
6 dict dup begin
/parenleft <1C60D8A8C9B7361F0ED0EA8752539777BEBB9273D40DABBCD23C
A817496382F6B840E6A1C46E658A7FF24A9D166F78212AF4C797827975E02701
CDC72E754F4000DECEE47D430E4D5342BD530D47AAD28508160E8A23665C3BDA
FA73039FCB9EE1AB6A300F016FDD82E5> |-
/parenright <1C60D8A8C9B7361F0ED0EA8752539777A78857B993CC758AF4B
0072B7985470F64120F1034EB48F73B7B659942A90C7AB7260686E937E5258E6
B309A8E598CE40EEFE407AA4D2ED07136A6BD81A0336437FF05EC04649152730
73C8D27D659011926A923EA546CAE8D> |-
/one <1C60D8A8C9B7A73DC579B9CE13A4EA8C203AFC890ABD6F58341B006CF1
BDD8FED3A7238E01F751FEAC75885229C293891E5636AD630D9C884528B6FEF0
0728A740ED77D054B4743ECA5E3947520FEF6B23D548765D11> |-
/two <1C60D8A8C9B7A73DC50B0411757B441481CCF7EF812EEB9B3F6A08293A
A33E44598842821CBFE74832C3A2FC51890F3A66AFDE8EA8269173784AF985B0
8CD4044AADA37EBF8296E8DBBCEABE3042A3995F6A3A8DE32D90D624CEDF4C1B
CFEECD943884DD6052923FAC92315AE2977DECA1B6F479ADBDA41B10FDF2F38D
2B74CBF99D8D6FF4> |-
/equal <1C60D8A8C9B6FF86F5F7C936DCCEFAB8EDDDE1C4D97CDB55B3C9C87D
7B2BAB4AEAEAC0B654A106A73C0C0E7D9BE088117935915C3B6ED2E10E45916B
408B696BFD54F5ED27BB8E0386045AAF2DF481> |-
/.notdef <1C60D8A8C9B81F2CC3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEIC+CMR10 /BKUAAA+CMR10 findfont ct_VMDictPut
/ARMEIC+CMR10*1 
[40{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one /two 10{/.notdef}rp /equal 
194{/.notdef}rp]
ARMEIC+CMR10 nf
ARMEIC+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
80.5192 189.6 mo
(=)sh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
90.958 189.6 mo
(x)sh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
96.6 191.04 mo
(j)sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
102.96 189.6 mo
(intheinterval)
[2.7696 6.90109 2.76961 4.98129 6.46359 2.76959 4.98131 2.76961 4.42323 3.31747 4.7412 4.42325 
0 ]xsh
ARMEIC+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
158.841 189.6 mo
(\()sh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
162.681 189.6 mo
(x)sh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
168.6 191.04 mo
(j)sh
ARMEHZ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
172.199 191.04 mo
( )sh
%ADOBeginSubsetFont: GLBBAA+CMR7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /GLBBAA+CMR7 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMR7) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 49 /one put
def
/FontBBox {-27 -250 1122 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 -0 683 703 431 446 664 674] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [36] def
/StdVW [79] def
/StemSnapH [28 36] def
/StemSnapV [79 95] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/plus <1C60D8A8C9B593D6D8BB90123291AA259E2A2720FD4880A5BA5668DBB
3FDE6DF999803DA9EDD496C11A38D856114909900BC9E753D6A6BF5C2786C87D
5C6E0CE8F6625D8E3C55B080D69D2651DDE1B21281AD85504D17B37BA0750A5> |-
/one <1C60D8A8C9B7E2CE5B62E9FEEC2E64DB4DF57A0DEE8F2DC4BC1D285E2D
6E93583C8BA769F966BA0D2874BA4F6692804A12EE154BF6C4128EE336963B1B
27F1A610EA701BA67016777C46DECA8A9AE7E6470CDD1978599A2E> |-
/.notdef <1C60D8A8C9B73A41C7> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEID+CMR7 /GLBBAA+CMR7 findfont ct_VMDictPut
/ARMEID+CMR7*1 
[43{/.notdef}rp /plus 5{/.notdef}rp /one 206{/.notdef}rp]
ARMEID+CMR7 nf
ARMEID+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
178.438 191.04 mo
(1)sh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
183.12 189.6 mo
(,x)
[4.44133 0 ]xsh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
193.2 191.04 mo
(j)sh
ARMEIC+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
197.4 189.6 mo
(\))sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
203.399 189.6 mo
(equaltothesameequationevaluatedfor)
[4.42325 4.98129 4.98131 4.42323 4.68941 2.76959 6.90109 2.76961 4.98129 6.46359 3.87537 4.42325 
7.75092 6.46359 4.42322 4.98132 4.98129 4.42325 2.76959 2.76959 4.98132 6.78152 4.18314 4.74121 
4.42325 2.76959 4.98129 4.42325 2.76962 4.42322 6.78156 3.31747 4.98129 0 ]xsh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
362.321 189.6 mo
(x)sh
ARMEIC+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
370.84 189.6 mo
(=)sh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
381.398 189.6 mo
(x)sh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
387.96 191.04 mo
(j)sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
394.2 189.6 mo
(but)
[4.74121 4.98129 0 ]xsh
72.0016 201.6 mo
(intheinterval)
[2.7696 6.661 2.7696 4.9813 5.98339 2.7696 4.9813 2.76961 4.42324 3.31747 4.74121 4.42324 
0 ]xsh
ARMEIC+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
126.803 201.6 mo
(\()sh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
130.642 201.6 mo
(x)sh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
136.56 203.04 mo
(j)sh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
140.88 201.6 mo
(,x)
[4.44133 0 ]xsh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
150.96 203.04 mo
(j)sh
ARMEID+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
154.559 203.04 mo
(+1)
[6.1188 0 ]xsh
ARMEIC+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
165.36 201.6 mo
(\))sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
169.2 201.6 mo
(.Withsomerearrangement,thisgives\(for)
[5.73048 9.04489 2.76961 2.76961 6.661 3.87537 4.98129 7.75092 5.98338 3.31747 4.42323 4.42325 
3.31747 3.31747 4.42325 4.98129 4.98129 4.42325 7.75092 4.42325 4.98129 2.76959 3.93024 2.76962 
4.98129 2.76959 5.55508 4.98129 2.52951 4.86176 4.42322 5.31497 3.31747 3.31747 4.98129 0 
]xsh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
334.912 201.6 mo
(j)sh
ARMEIC+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
342.352 201.6 mo
(=2)
[10.4408 0 ]xsh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
357.829 201.6 mo
(,...,N)
[4.44131 4.44135 4.44131 4.44131 4.44135 0 ]xsh
%ADOBeginSubsetFont: RQIBAA+CMSY10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /RQIBAA+CMSY10 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.035 def
/BaseFontName (CMSY10) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /minus put
def
/FontBBox {-29 -960 1116 775} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 -0 683 705] def
/OtherBlues [-124 -119] def
/BlueScale 0.04379 def
/StdHW [40] def
/StdVW [85] def
/StemSnapH [40 55] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/minus <1C60D8A8C9B6FF86F594155D4FEE75E025E2D8F5BDD38D70527C335C
7BB0CFAC947613B05761F69FFFE75D73A08E> |-
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEIE+CMSY10 /RQIBAA+CMSY10 findfont ct_VMDictPut
/ARMEIE+CMSY10*1 
[32{/.notdef}rp /minus 223{/.notdef}rp]
ARMEIE+CMSY10 nf
ARMEIE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
389.506 201.6 mo
( )sh
ARMEIC+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
397.664 201.6 mo
(1)sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
402.703 201.6 mo
(\))sh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
75.0003 223.8 mo
(x)sh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
80.64 225.24 mo
(j)sh
ARMEIE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
87.12 223.8 mo
( )sh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
97.0786 223.8 mo
(x)sh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
102.72 225.24 mo
(j)sh
ARMEHZ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
106.319 225.24 mo
( )sh
ARMEID+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
112.558 225.24 mo
(1)sh
75 228.24 mo
117.24 228.24 li
117.24 227.76 li
75 227.76 li
cp
f
%ADOBeginSubsetFont: BKUAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
ARMEIC+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/plus <1C60D8A8C9B6FF863A85C280B948C534E29FDD1A5E7C480501AD35704
8AA30458C9884AF16EB577582A775159DC46FB447D91E6A2A77A0FD27F503D8B
3C75521CFA7BBCEB8B902740AC2F9723F945A89D3342F7D5DADAC25CE7DC3> |-
/six <1C60D8A8C9B7A73D3B2B97FE394CF5175EFEC06CD8F59A375E41591273
E0C059123310EC79AE072F532A0C9DF11EDCF7D4B9D83F0A2FCBB058CCF95C0F
F8BAD8605C0C2E8D60E28BE3D0E0DD42D8AAC3094E7159CC3989179C22CC5AA3
B3825C4ED9C5A83B733BA4666CE2A2B0097F22D25C776953D494478010B9DD2B
957D6BF7D7A87CBAE6ACDB0F5D283FB8F9162F4638E98F510D9821787A5D0E83
5BEB255F8F8C0C281516F7A946A0E0B79E8072185D1B76EC3B7739FCD106> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ARMEIC+CMR10 /Encoding get
dup 43 /plus put
dup 54 /six put
pop
%ADOEndSubsetFont
/ARMEIC+CMR10*1 
[40{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp /one /two 
3{/.notdef}rp /six 6{/.notdef}rp /equal 194{/.notdef}rp]
ARMEIC+CMR10 nf
ARMEIC+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
93.6 237.36 mo
(6)sh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
118.32 230.52 mo
(y)sh
ARMEHZ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
123.6 226.44 mo
(00)
[2.27691 0 ]xsh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
123.24 233.04 mo
(j)sh
ARMEHZ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
126.839 233.04 mo
( )sh
ARMEID+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
133.078 233.04 mo
(1)sh
ARMEIC+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
139.8 230.52 mo
(+)sh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
150.96 223.8 mo
(x)sh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
156.6 225.24 mo
(j)sh
ARMEID+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
160.199 225.24 mo
(+1)
[6.1188 0 ]xsh
ARMEIE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
173.16 223.8 mo
( )sh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
183.119 223.8 mo
(x)sh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
188.76 225.24 mo
(j)sh
ARMEHZ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
192.359 225.24 mo
( )sh
ARMEID+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
198.598 225.24 mo
(1)sh
150.96 228.24 mo
203.28 228.24 li
203.28 227.76 li
150.96 227.76 li
cp
f
%ADOBeginSubsetFont: BKUAAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
ARMEIC+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7A73D3B2B97DEB4C7BDB68E0D63865C8BF294429AD1BA
AE59A25299F9306A9E28AA5C0C0AF9F97F56096DB0FD0EC440ACCE834B0BA539
2FD94D026768A961AA5D1A88FAE30F2B2033E77AFAB55B0B9C8092CD226DD9EF
EEAAF5CD5AE79D6DDEC4C37DC43DE3B85DD2A2EC4DC0C9F349D5E8F9F615782E
DC8C53805553FD3C0007C1818BF3D99AB659A079ED36132BBDC613CA63D7A0FE
429706DBC6BA998CE56A89C002758EF37F90A390F83B3DFE49D312FA66FDF2F1
6212D1503559B35FC2DB8BD5A49535> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ARMEIC+CMR10 /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/ARMEIC+CMR10*1 
[40{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp /one /two 
/three 2{/.notdef}rp /six 6{/.notdef}rp /equal 194{/.notdef}rp]
ARMEIC+CMR10 nf
ARMEIC+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
174.6 237.36 mo
(3)sh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
204.36 230.52 mo
(y)sh
ARMEHZ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
209.64 226.44 mo
(00)
[2.27692 0 ]xsh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
209.28 233.04 mo
(j)sh
ARMEIC+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
216.96 230.52 mo
(+)sh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
228.12 223.8 mo
(x)sh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
233.76 225.24 mo
(j)sh
ARMEID+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
237.359 225.24 mo
(+1)
[6.1188 0 ]xsh
ARMEIE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
250.32 223.8 mo
( )sh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
260.279 223.8 mo
(x)sh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
265.92 225.24 mo
(j)sh
228.12 228.24 mo
270.24 228.24 li
270.24 227.76 li
228.12 227.76 li
cp
f
ARMEIC+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
246.6 237.36 mo
(6)sh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
271.32 230.52 mo
(y)sh
ARMEHZ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
276.6 226.44 mo
(00)
[2.27692 0 ]xsh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
276.24 233.04 mo
(j)sh
ARMEID+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
279.839 233.04 mo
(+1)
[6.1188 0 ]xsh
ARMEIC+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
293.28 230.52 mo
(=)sh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
305.76 223.8 mo
(y)sh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
310.68 225.24 mo
(j)sh
ARMEID+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
314.279 225.24 mo
(+1)
[6.1188 0 ]xsh
ARMEIE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
327.24 223.8 mo
( )sh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
337.199 223.8 mo
(y)sh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
342.12 225.24 mo
(j)sh
305.04 228.24 mo
347.16 228.24 li
347.16 227.76 li
305.04 227.76 li
cp
f
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
305.04 237.36 mo
(x)sh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
310.68 238.8 mo
(j)sh
ARMEID+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
314.279 238.8 mo
(+1)
[6.1188 0 ]xsh
ARMEIE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
327.24 237.36 mo
( )sh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
337.199 237.36 mo
(x)sh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
342.84 238.8 mo
(j)sh
ARMEIE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
350.52 230.52 mo
( )sh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
362.4 223.8 mo
(y)sh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
367.32 225.24 mo
(j)sh
ARMEIE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
373.68 223.8 mo
( )sh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
383.639 223.8 mo
(y)sh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
388.56 225.24 mo
(j)sh
ARMEHZ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
392.159 225.24 mo
( )sh
ARMEID+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
398.398 225.24 mo
(1)sh
361.68 228.24 mo
403.92 228.24 li
403.92 227.76 li
361.68 227.76 li
cp
f
%ADOBeginSubsetFont: MMFAAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
ARMEHY+CMMI10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/O <1C60D8A8C9B6EEDB3E3EA4B3A974E2FE2E0F2D8150F971B8AB65D436BE6F
1A11094644F5082020113B2D8E21E54550B9D6AA2A7AE1CE1B7B3ADC0745CD96
0DD0B1C34D592376B647F689FDFC05DC385ECD71425393A70BD6DA96769B5BD7
8B663690323C34350B4CD42A55EBAAABCD49E8> |-
/i <1C60D8A8C9B8137927A3D75933885CCD9DA536B76A74FB1345980032DE4D
53A7A8B5C12B51C09CC96E0F46F8DA9AD73CECCCF1CC5ECF0CA5E5A4BF6227C3
C57E11875D7C7C60874D14EB46036077E16068A017FD5B01B7B9041731C06120
BD3E988D4CDE1A1C3E66F1DB7A255D4E8723A6B34F75652AA86BC6365D3BEFFD
A0B6B6F69D89000264413CFBC0E88B50B1A1845E979129BFEE97390832699AC8
411A2DCCD46ABA420C0DFAA59D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ARMEHY+CMMI10 /Encoding get
dup 79 /O put
dup 105 /i put
pop
%ADOEndSubsetFont
/ARMEHY+CMMI10*1 
[44{/.notdef}rp /comma /.notdef /period 31{/.notdef}rp /N /O 25{/.notdef}rp 
/i /j 13{/.notdef}rp /x /y 134{/.notdef}rp]
ARMEHY+CMMI10 nf
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
361.68 237.36 mo
(x)sh
%ADOBeginSubsetFont: IPIBAA+CMMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
ARMEIA+CMMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/N <1C60D8A8C9B58FAC57CB57CB00589E33DFAD183F3A43889D25CD1E25F8DF
09A9C30B81ED9A7DDF4D4C6A6B7EE22D12847454450ECE7B2556F85239175A09
73B282B4D2285EF96E0919CD61D27BF3823E13D637024A3D5034936D82159085
B2296A35EE13D15FCC50C88FD563C70340093FA6F51D952DF04BDA94649E4933
CE0C8BE48471EF6F25B495E996368956B2FCC894698A564683E978186CAC41C5
CD0C3109823908CFBC7E212C6C9C034C886B694B5E005D19023E996B5A3C2845
7B3915F7D02CC3F3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ARMEIA+CMMI7 /Encoding get
dup 78 /N put
pop
%ADOEndSubsetFont
/ARMEIA+CMMI7*1 
[78{/.notdef}rp /N 26{/.notdef}rp /i /j 149{/.notdef}rp]
ARMEIA+CMMI7 nf
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
367.32 238.8 mo
(j)sh
%ADOBeginSubsetFont: RQIBAA+CMSY10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
systemdict begin
ARMEIE+CMSY10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/plusminus <1C60D8A8C9B6FF86896B73265BBDAAFEAC7EFFB94411650B3328
11BB16DF2878CAA4EA3C577873D7E7F193F1F492653AC8BECCCA075EF62D527A
F23FFBC96AD41786D77AE253D486F9917BD9805BE345DC8A986D238583579467
E976CAB2BE8A917813D799857205EEB5D40E60FC> |-
/bullet <1C60D8A8C9B7A73D8D0B3FCDAA7E46FB68E7B1A6FB865A1D0E06554
A3E2854CF0B6294B7C2961A3DF80EB436E70A3DC7> |-
/section <1C60D8A8C9B77FE2C21025717E56A95A2AED779B59275C4388C38A
6E34199A2881F057C86D2C64D6AD83C219CE4FC24811B35CF11A716830781B4C
55499B1CCAAE25531CE1DD3A5469743C4170F451EC317EFC7B35F210032592F4
F33AB5AD76DC73D4A3EC2EAC36EFFFD7DC3DBF13129CC8D5CDAC08F016F1C876
7835BFA7D602B4372E57AF819BB8627B128B53816CCB23266A5C248667D515A1
F282A274C98D35BE4D3C2AF3353C4325B242AC6FF18226BB2F1BF65A287413B2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ARMEIE+CMSY10 /Encoding get
dup 6 /plusminus put
dup 15 /bullet put
dup 120 /section put
pop
%ADOEndSubsetFont
/ARMEIE+CMSY10*1 
[6{/.notdef}rp /plusminus 8{/.notdef}rp /bullet 16{/.notdef}rp /minus 87{/.notdef}rp /section 
135{/.notdef}rp]
ARMEIE+CMSY10 nf
ARMEIE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
373.68 237.36 mo
( )sh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
383.639 237.36 mo
(x)sh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
389.28 238.8 mo
(j)sh
ARMEHZ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
392.879 238.8 mo
( )sh
ARMEID+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
399.118 238.8 mo
(1)sh
ARMEIC+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
379.08 251.64 mo
(\()sh
%%IncludeResource: font Times-Roman
/ARMEHW+Times-Roman*1 
[39{/.notdef}rp /quoteright /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period 
2{/.notdef}rp /one /two /three /four /five /.notdef /seven 
9{/.notdef}rp /A 3{/.notdef}rp /E /F /.notdef /H /I 
5{/.notdef}rp /O 4{/.notdef}rp /T 2{/.notdef}rp /W 9{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
/.notdef /k /l /m /n /o /p /q 
/r /s /t /u /v /w /.notdef /y 
/z 51{/.notdef}rp /fi 81{/.notdef}rp]
ARMEHW+Times-Roman nf
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
382.92 251.64 mo
(3.3.7)
[4.98129 2.49066 4.98129 2.49066 0 ]xsh
ARMEIC+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
402.605 251.64 mo
(\))sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
72.0018 276.24 mo
(Theseare)
[6.08707 4.9813 4.42324 3.87538 7.30343 4.42324 3.31747 0 ]xsh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
113.717 276.24 mo
(N)sh
ARMEIE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
125.115 276.24 mo
( )sh
ARMEIC+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
135.314 276.24 mo
(2)sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
143.113 276.24 mo
(linearequationsinthe)
[2.76961 2.76959 4.98131 4.42323 4.42325 6.19766 4.42325 4.98129 4.98129 4.42325 2.76961 2.76961 
4.98129 4.98129 6.63501 2.76962 7.86148 2.76959 4.98131 0 ]xsh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
235.31 276.24 mo
(N)sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
247.309 276.24 mo
(unknowns)
[4.98129 4.98131 4.98129 4.98129 4.74121 7.19284 4.98132 0 ]xsh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
290.665 276.24 mo
(y)sh
ARMEHZ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
296.88 272.64 mo
(00)
[2.27692 0 ]xsh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
296.52 278.76 mo
(i)sh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
301.92 276.24 mo
(,i)
[4.44131 0 ]xsh
ARMEIC+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
312.959 276.24 mo
(=1)
[10.921 0 ]xsh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
328.917 276.24 mo
(,...,N)
[4.44131 4.44135 4.44131 4.32178 4.44131 0 ]xsh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
360.113 276.24 mo
(.Therefore)
[7.29062 6.0871 4.98129 4.42325 3.31747 4.42325 3.31744 4.98132 3.31747 0 ]xsh
72.0012 288.12 mo
(thereisatwo-parameterfamilyofpossiblesolutions.)
[2.7696 4.9813 4.42325 3.31747 7.78363 2.76961 7.47585 7.90318 2.76961 7.07329 4.98131 3.31746 
4.98131 4.42325 3.31746 4.42325 7.7509 4.42325 2.76961 4.42325 6.5573 3.19792 4.42325 7.7509 
2.76961 2.76959 8.34167 4.98132 6.79739 4.98132 4.98129 3.87537 3.8754 2.76959 4.98129 2.76959 
7.78363 3.87537 4.98132 2.76959 4.98129 2.76962 2.76959 4.98129 4.98129 3.8754 0 ]xsh
91.9214 300.12 mo
(Forauniquesolution,weneedtospecifytwofurtherconditions,typicallytaken)
[5.41965 4.98129 5.35782 6.58313 4.9813 4.9813 2.7696 4.98131 4.98129 6.2235 3.87537 4.98129 
2.76961 4.98131 2.76959 2.76959 4.98131 4.98131 4.53098 7.19286 6.58313 4.98131 4.42323 4.42325 
6.90111 2.76959 7.02164 3.87537 4.98131 4.42325 4.42323 2.76961 3.31747 7.02164 2.76961 7.0733 
7.02161 3.3175 4.98129 3.31747 2.76959 4.98132 4.42322 5.23724 4.42328 4.98129 4.98129 4.98132 
2.76959 2.76959 2.76959 4.98132 4.98126 3.8754 4.41043 2.76959 4.98132 4.98129 2.76959 4.42325 
4.42325 2.76959 2.76962 7.02164 2.76959 4.42325 4.86176 4.42325 0 ]xsh
72.0012 312.12 mo
(asboundaryconditionsat)
[4.42324 5.79517 4.9813 4.98129 4.98131 4.98129 4.98131 4.42324 3.31747 6.4209 4.42325 4.98129 
4.98131 4.98131 2.76959 2.76959 2.76961 4.98131 4.98129 5.43552 4.42325 0 ]xsh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
173.476 312.12 mo
(x)sh
ARMEID+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
179.76 313.56 mo
(1)sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
186.12 312.12 mo
(and)
[4.42325 4.98129 0 ]xsh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
202.186 312.12 mo
(x)sh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
207.96 313.56 mo
(N)sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
215.64 312.12 mo
(.Themostcommonwaysofdoingthisareeither)
[5.85103 6.08708 4.98129 6.10295 7.7509 4.98129 3.87538 4.56985 4.42322 4.98132 7.75089 7.75092 
4.98129 6.54144 7.0733 4.42325 4.98129 5.79517 4.98129 4.99716 4.98132 4.98129 2.76959 4.98129 
6.66101 2.76959 4.98132 2.76959 5.79517 4.42325 3.31747 6.10294 4.42325 2.76959 2.76959 4.98132 
4.42325 0 ]xsh
ARMEIE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
92.8809 330 mo
(\017)sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
102.839 330 mo
(setoneorbothof)
[3.87537 4.42325 6.12998 4.9813 4.9813 7.54353 4.98131 6.43776 4.98129 4.98131 2.76961 8.10158 
4.98131 0 ]xsh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
178.445 330 mo
(y)sh
ARMEHZ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
184.2 326.4 mo
(00)
[2.27692 0 ]xsh
ARMEID+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
183.84 332.52 mo
(1)sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
192.48 330 mo
(and)
[4.42325 4.98129 0 ]xsh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
209.986 330 mo
(y)sh
ARMEHZ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
215.4 326.4 mo
(00)
[2.27692 0 ]xsh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
215.04 332.76 mo
(N)sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
225.84 330 mo
(equaltozero,givingtheso-called)
[4.42325 4.98129 4.98131 4.42323 5.88989 2.76961 8.10158 4.42325 4.42325 3.31747 4.98129 5.7305 
4.98129 2.52951 4.98129 2.76959 4.98132 8.10156 2.76959 4.98132 7.54352 3.87537 4.98132 3.31744 
4.42328 4.42322 2.76959 2.76962 4.42325 0 ]xsh
%%IncludeResource: font Times-Italic
/ARMEIB+Times-Italic*1 
[97{/.notdef}rp /a /b /c /d /e /.notdef /g 
/.notdef /i 2{/.notdef}rp /l /.notdef /n /o /p 
/.notdef /r /s /t /u 56{/.notdef}rp /fi 81{/.notdef}rp]
ARMEIB+Times-Italic nf
ARMEIB+Times-Italic*1 [9.9626 0 0 -9.9626 0 0 ]msf
367.01 330 mo
(natural)
[4.98129 4.98129 2.76962 4.98129 3.75583 4.98129 0 ]xsh
102.841 342 mo
(cubicspline)
[4.42324 4.98131 4.98129 2.76961 8.26283 3.87537 4.98131 2.76959 2.76961 4.98129 0 ]xsh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
152.06 342 mo
(,whichhaszerosecondderivativeononeorbothofits)
[7.77083 7.19284 4.98131 2.76959 4.42325 9.54118 4.98129 4.42325 8.67535 4.42325 4.42325 3.31747 
9.54118 3.87538 4.42323 4.42325 4.98131 4.98129 9.54117 4.98129 4.42328 3.31744 2.52951 4.74118 
4.42328 2.76959 2.52948 4.86176 8.86359 4.98129 9.66171 4.98132 4.98129 8.98312 4.98132 7.99789 
4.98129 4.98132 2.76959 9.5412 4.98126 7.99792 2.76959 2.76962 0 ]xsh
102.841 353.88 mo
(boundaries,or)
[4.9813 4.9813 4.9813 4.9813 4.9813 4.42325 3.31747 2.76959 4.42325 3.87537 7.29063 4.98131 
0 ]xsh
ARMEIE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
92.8811 365.88 mo
(\017)sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
102.84 365.88 mo
(seteitherof)
[3.87537 4.42325 6.24953 4.42324 2.76961 2.7696 4.9813 4.42325 6.55731 4.98129 0 ]xsh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
154.972 365.88 mo
(y)sh
ARMEHZ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
160.44 362.28 mo
(00)
[2.27692 0 ]xsh
ARMEID+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
160.08 368.4 mo
(1)sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
168.84 365.88 mo
(and)
[4.42325 4.98129 0 ]xsh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
186.466 365.88 mo
(y)sh
ARMEHZ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
191.88 362.28 mo
(00)
[2.27692 0 ]xsh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
191.52 368.64 mo
(N)sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
202.44 365.88 mo
(tovaluescalculatedfromequation\(3.3.5\)soas)
[2.76961 8.34167 4.74121 4.42323 2.76961 4.98131 4.42323 7.11522 4.42325 4.42323 2.76961 4.42325 
4.98129 2.76959 4.42325 2.76959 4.42328 8.22113 3.31744 3.3175 4.98129 10.9907 4.42325 4.98132 
4.98129 4.42325 2.76959 2.76959 4.98132 8.10156 3.31747 4.98129 2.49066 4.98129 2.49066 4.98129 
6.43777 3.87537 8.34167 4.42325 0 ]xsh
102.841 377.88 mo
(tomakethe\256rstderivativeoftheinterpolatingfunctionhaveaspeci\256ed)
[2.7696 8.22114 7.7509 4.42325 4.86175 7.54353 2.76959 4.98131 7.54353 5.5392 3.31747 3.87537 
6.00945 4.98129 4.42325 3.31747 2.52951 4.74118 4.42325 2.76961 2.5295 4.86176 7.30342 4.98131 
6.43774 2.76961 4.98131 7.54352 2.76962 4.98129 2.76959 4.42325 3.31747 4.98129 4.98129 2.76962 
4.42325 2.76959 2.76959 4.98129 7.86151 3.31747 4.98129 4.98129 4.42325 2.76959 2.76962 4.98129 
7.98102 4.98132 4.18314 4.86176 7.423 7.66306 3.8754 4.98129 4.42325 4.42325 2.76959 5.53922 
4.42322 0 ]xsh
102.841 389.76 mo
(valueoneitherorbothboundaries.)
[4.7412 4.42324 2.7696 4.9813 8.14328 4.9813 8.70134 4.42325 2.76959 2.76961 4.98129 4.42325 
7.03751 4.98129 7.03751 4.98129 4.98131 2.76961 8.58078 4.98129 4.98131 4.98131 4.98129 4.98129 
4.42325 3.31747 2.76959 4.42325 3.87537 0 ]xsh
91.9209 407.76 mo
(Onereasonthatcubicsplinesareespeciallypracticalisthatthesetofequations)
[7.19285 4.9813 6.70368 3.31747 4.42325 4.42325 3.87537 4.98131 7.14119 2.76959 4.98131 4.42325 
5.05003 4.42325 4.98131 4.98129 2.76959 6.58313 3.87538 4.98131 2.76959 2.76961 4.98131 4.42323 
6.15581 4.42325 3.31747 6.70369 4.42323 3.87538 4.98129 4.42325 4.42325 2.76961 4.42323 2.76961 
2.76962 7.26172 4.98132 3.31744 4.42325 4.42325 2.76959 2.76959 4.42328 4.42322 4.9295 2.76959 
6.27539 2.76959 4.98132 4.42322 5.05005 2.76959 4.98132 6.70367 3.87537 4.42328 5.16959 4.98129 
5.47736 4.42325 4.98132 4.98129 4.42325 2.76959 2.76959 4.98132 4.98129 0 ]xsh
72.0007 419.64 mo
(\(3.3.7\),alongwiththetwoadditionalboundaryconditions,arenotonlylinear,but)
[3.31747 4.9813 2.49065 4.9813 2.49065 4.98129 3.31747 5.37083 4.42325 2.7696 4.9813 4.98129 
7.8615 7.19284 2.76961 2.76959 7.98105 2.76959 4.98131 7.54353 2.76959 7.0733 7.98103 4.42325 
4.98131 4.98129 2.76959 2.76962 2.76959 4.98129 4.98129 4.42325 5.64978 4.98132 4.98129 4.98129 
4.98129 4.98129 4.42325 3.31747 7.62137 4.42325 4.98132 4.98129 4.98129 2.76959 2.76962 2.76959 
4.98129 4.98129 3.8754 5.49039 4.42325 3.31744 7.423 4.98129 4.98129 5.64978 4.98132 4.98129 
2.76959 7.98105 2.76959 2.76959 4.98132 4.42325 4.42322 2.95782 5.49042 4.74118 4.98129 0 
]xsh
72.0007 431.64 mo
(also)
[4.42324 2.76961 3.87537 0 ]xsh
ARMEIB+Times-Italic*1 [9.9626 0 0 -9.9626 0 0 ]msf
90.0908 431.64 mo
(tridiagonal)
[2.7696 3.87537 2.7696 4.98131 2.7696 4.86175 4.9813 4.9813 4.98129 4.98131 0 ]xsh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
134.813 431.64 mo
(.Each)
[5.61093 6.08708 4.42325 4.42323 0 ]xsh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
162.259 431.64 mo
(y)sh
ARMEHZ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
168 428.04 mo
(00)
[2.27692 0 ]xsh
ARMEIA+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
167.64 434.28 mo
(j)sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
175.08 431.64 mo
(iscoupledonlytoitsnearestneighborsat)
[2.76961 6.03526 4.42325 4.98129 4.98131 4.98129 2.76961 4.42323 6.661 4.98131 4.98129 2.76961 
6.90109 2.76961 7.02164 2.76959 2.76961 5.9157 4.98132 4.42322 4.42328 3.31744 4.42325 3.8754 
4.68939 4.98129 4.42325 2.76959 4.98132 4.98126 4.98132 4.98129 3.31747 5.6756 4.42328 0 
]xsh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
338.446 431.64 mo
(j)sh
ARMEIE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
344.325 431.64 mo
(\006)sh
ARMEIC+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
353.323 431.64 mo
(1)sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
358.362 431.64 mo
(.Therefore,)
[5.85104 6.08707 4.98129 4.42325 3.31747 4.42325 3.31747 4.98129 3.31747 4.42325 0 ]xsh
72 443.64 mo
(theequationscanbesolvedin)
[2.7696 4.9813 6.94279 4.42325 4.9813 4.9813 4.42324 2.7696 2.76961 4.98129 4.98131 6.27536 
4.42325 4.42325 7.50084 4.98131 6.94278 3.87537 4.98131 2.76961 4.86174 4.42323 7.3813 2.76961 
0 ]xsh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
194.237 443.64 mo
(O)sh
ARMEIC+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
202.036 443.64 mo
(\()sh
ARMEHY+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
205.875 443.64 mo
(N)sh
ARMEIC+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
214.994 443.64 mo
(\))sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
221.474 443.64 mo
(operationsbythetridiagonalalgorithm\()
[4.98129 4.98131 4.42325 3.31747 4.42323 2.76961 2.76959 4.98131 4.98131 6.27536 4.98129 7.50085 
2.76959 4.98129 6.94278 2.76962 3.31747 2.76959 4.98129 2.76962 4.42322 4.98132 4.98129 4.98129 
4.42325 5.05005 4.42325 2.76959 4.98129 4.98129 3.3175 2.76959 2.76959 4.98129 10.1509 0 
]xsh
ARMEIE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
382.465 443.64 mo
(x)sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
386.783 443.64 mo
(2.4\).)
[4.98129 2.49066 4.98129 3.31747 0 ]xsh
72 455.52 mo
(Thatalgorithmisconciseenoughtobuildrightintothesplinecalculationalroutine.)
[6.08707 4.9813 4.42324 5.28915 4.42324 2.76961 4.98129 4.98131 3.31747 2.76959 2.76961 4.98129 
10.1509 2.76961 6.63501 4.42325 4.98129 4.98131 4.42323 2.76961 3.87537 6.94279 4.42323 4.98131 
4.98131 4.98129 4.98129 7.38129 2.76962 7.50082 4.74121 4.98129 2.76959 2.76962 7.6214 3.31744 
2.76962 4.98129 4.98129 5.28915 2.76959 4.98129 2.76959 7.50085 2.76959 4.98129 7.06332 3.8754 
4.98129 2.76959 2.76959 4.98132 6.94278 4.42325 4.42322 2.76959 4.42325 4.98132 2.76959 4.42325 
2.76959 2.76959 4.98132 4.98129 4.42325 5.28912 3.31747 4.98129 4.98129 2.76962 2.76959 4.98129 
4.42325 0 ]xsh
72 467.52 mo
(Thismakestheroutinenotcompletelytransparentasanimplementationof\(3.3.7\),)
[6.08707 4.9813 2.7696 6.75556 7.7509 4.42324 4.86176 4.42324 6.75556 2.76961 4.98129 7.30344 
3.31747 4.98129 4.98129 2.76962 2.76959 4.98129 7.18289 4.98129 4.98131 5.52925 4.42325 4.98129 
7.7509 4.98131 2.76959 4.42325 2.76959 4.42325 2.76959 7.74097 2.76959 3.31747 4.42325 4.98129 
3.8754 4.98129 4.42325 3.31747 4.42325 4.98129 5.40967 4.42325 6.87512 4.42325 7.86148 2.76959 
7.75092 4.98129 2.76962 4.42322 7.75092 4.42325 4.98129 2.76959 4.42325 2.76959 2.76962 4.98129 
7.62137 4.98132 6.07712 3.31744 4.98132 2.49063 4.98132 2.49066 4.98129 3.31747 0 ]xsh
72 479.52 mo
(soweencourageyoutostudyitcarefully,comparingwith)
[3.87537 8.22114 7.19285 7.54353 4.42324 4.9813 4.42325 4.98129 4.98131 3.31747 4.42324 4.98131 
7.30344 4.98129 4.98129 8.10159 2.76959 8.10159 3.87537 2.76961 4.98131 4.98129 8.10159 2.76959 
6.00943 4.42325 4.42325 3.31747 4.42325 3.31747 4.98129 2.76959 2.76959 4.38156 5.61093 4.42325 
4.98129 7.75092 4.98129 4.42325 3.31747 2.76959 4.98132 7.86148 7.19284 2.76959 2.76962 0 
]xsh
%ADOBeginSubsetFont: IMLBAA+CMTT10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /IMLBAA+CMTT10 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMTT10) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 100 /d put
dup 103 /g put
dup 105 /i put
dup 114 /r put
dup 116 /t put
def
/FontBBox {-4 -235 731 800} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 611 622 431 440] def
/OtherBlues [-229 -222] def
/BlueScale 0.04796 def
/StdHW [61] def
/StdVW [69] def
/StemSnapH [61] def
/StemSnapV [69] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
7 dict dup begin
/a <1C60D8A8C9B78E05996B357CFC3D6A68429CE44210300ADBF33D3BA65564
22DB30AA2C2DE7C9116C427A19DC90F7A98606BDBFB27DF4235F2AAAEBA26184
E5C8D38867C076F8FDD8600853EA72DC9D3F2800940687EC72A6F334200BA15B
ADC95674191868FBF18D675A9DF803EE70B50222D29881504A1059B3AFD24FEF
30B48C4F1746ADB09F7A9701B6D22B65D1EEEC5210E72A1090FCFC77ADC9FE9D
0DCBF3CF0D355063BE501BF4AD72162F8BF2> |-
/d <1C60D8A8C9B78E05996B35735C4B10FF1E7638B59B00B7AFF75E25A2A92C
841F6391917CE6AACD0C2A5249A68F1C767AB0D887F0980FF4031D18C0AB3FDE
D4CD2E16FEF143C1F0FD8035C390F0DD7806572B84D99BCA72CB562C352DBDAD
A0E1A764EBD9E0616EF3C6E8FF7E9E2049F8B1F19FBB4EBD3968D3C295E3CF8E
79D70A00B6014870A793520EB0C590C01F483B972AF483> |-
/g <1C60D8A8C9B78E05E95C9BB68C365D5EE5F2A501E8A3C0639ACE817E7678
3445DDF0A7B004D3C6BD5BB837E5166614ECC13D5921A09D73BB6DD34E83DE1B
2453736F6FBD255BB670255CF305C0FC1DC5320132AC7F5BCF83CE909D3E0421
D6120CA81BED29F616D0E3A97CDEF99541CA25403051723F6D5B70FC81935874
F8CFBA7353DBD9D849B38B557C2613C6068EF4194AB586736167506A03AC9149
644EDCFFAFBFA949C2A4C984690301B9460DA63FFDA91DA54D011FE98924800E
9AD57D76E45531EFFF5FEBF7636F3F5B3B3023047A10BD8CDFEBD53DBE980143
FD25CFE8D7C192824866DE36E61F0077A26CE06FA16110672EB390109A6D609B
B92B7775F6DFAEC48077AA8DCEF02AA40C90A54DF8> |-
/i <1C60D8A8C9B78E05996B3573566568C75479E22564A3834F3FF0CB347574
CC2A502F85F740F591300E69B039D730185D703A65E03A7AE8A5896360C52193
422D46DCA3858C85C7D3735F0189AE0EC4B26122B3CC5C6F5305A44DCAC7D12D
B652EFBBCAE7FA1BC7AD5F1A111355C1CBFB8911D5457DF2D53DF380C7> |-
/r <1C60D8A8C9B78E05996B35735C4B10F0A68C733837FFC46D15E711585D69
409D476B4E1B79D899A1EBE7F07D42FC0D7F3AF51B20EA4BE96332191606B9F9
30E6A59EE195CD4F0E430523A60FA98B36B2D8D170EE2CB19C9F94E68C957715
7726B0DF61D35FB969298349003E15248E2E23535954CBD18C62CEB28D8079F7> |-
/t <1C60D8A8C9B78E0597CED299252BC7B05D988F4F7EE667DF4F850255BD28
5E9BDB6F1D9734666CE6E99228B4903C845663259737533F426C749652248BD5
8E77C356FC8FFF7AAAF4F3EDBBF4F304000495C28895CB8E17AE8F20B0D8171A
FE2F325DCA0172B98285FEDEFC5314F65074B9> |-
/.notdef <1C60D8A8C9B78E051C> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEIF+CMTT10 /IMLBAA+CMTT10 findfont ct_VMDictPut
/ARMEIF+CMTT10*1 
[97{/.notdef}rp /a 2{/.notdef}rp /d 2{/.notdef}rp /g /.notdef /i 
8{/.notdef}rp /r /.notdef /t 139{/.notdef}rp]
ARMEIF+CMTT10 nf
ARMEIF+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
311.814 479.52 mo
(tridag)
[5.27911 5.27911 5.27914 5.27911 5.27911 0 ]xsh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
346.489 479.52 mo
(\()sh
ARMEIE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
349.806 479.52 mo
(x)sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
354.125 479.52 mo
(2.4\).Arrays)
[4.98129 2.49066 4.98129 3.31747 8.13046 7.19287 3.31747 3.31747 4.42322 4.98132 0 ]xsh
72 491.401 mo
(areassumedtobeunit-offset.Ifyouhavezero-offsetarrays,see)
[4.42325 3.31747 7.30343 4.42325 3.87537 3.87537 4.9813 7.7509 4.42324 7.74094 2.7696 7.98105 
4.98129 7.18289 4.98129 4.98129 2.76961 2.76961 3.31747 4.98129 3.07736 3.31747 3.87537 4.42325 
2.76961 7.17108 3.31746 6.19766 4.98131 4.98129 7.74095 4.98129 4.18315 4.86176 7.30344 4.42325 
4.42323 3.31747 4.98132 3.31744 4.98132 3.07736 3.31747 3.87537 4.42325 5.4097 4.42322 3.3175 
3.31744 4.42328 4.98126 3.8754 5.37082 3.8754 4.42325 0 ]xsh
ARMEIE+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
334.874 491.401 mo
(x)sh
ARMEHW+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
339.314 491.401 mo
(1.2.)
[4.98129 2.49066 4.98129 0 ]xsh
%ADOBeginSubsetFont: HEJAAA+CMTT8 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /HEJAAA+CMTT8 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMTT8) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 34 /quotedbl put
dup 35 /numbersign put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 57 /nine put
dup 59 /semicolon put
dup 61 /equal put
dup 62 /greater put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
dup 123 /braceleft put
dup 125 /braceright put
def
/FontBBox {-5 -232 545 699} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-10 -0 611 621 431 439] def
/OtherBlues [-228 -222] def
/BlueScale 0.04796 def
/StdHW [66] def
/StdVW [76] def
/StemSnapH [66] def
/StemSnapV [76] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
44 dict dup begin
/quotedbl <1C60D8A8C9B7883C3B43F08459AB97254BC337220A14C2014EEF2
52E1C8A10EB47ACB609061CCD43968C62B72FFBA2C9B00EBD430C76C8B660510
3CD896F9CBB74508DD47685D0CD778AE8C0E87984693BD9539D0F9B0ED6F7BAA
365B2> |-
/numbersign <1C60D8A8C9B7883C47E52F83FA5C3F282F82F545D35AE119D3A
07797993D48A734A847A9959C5DBBC3591132C246F6E35EC70193F51CF8409D2
EE401753B5E684D19DEE6AF233B77478F3A72B90B652ED291D87C8A39FD97C59
54CA1A93CAA35DEB121F72306489261AACBB703CDCFF923835B516C35CB5B62A
76C01404B5D5C439AE9C5A560343262DDA78BD549BBC0B16E3C1DF44930A4FD1
A0CB494CA370D9C214BF1A403B399525AC83B9F43220943BEC832ED19461C610
B0F287C73BEA321C516A5D5F412EC2142> |-
/parenleft <1C60D8A8C9B7883CF464839EB6B239ED34DD418F4ED0AF7EA422
FC3C6BD7C1B9E173AF8B5BCC28C5CB81F9196D2AD1C32793B0AF5CA66A9E7EFF
3859F2E2087B497AE4C260CFF49E23D28981E45F47C3EA4A16747B95ACBE> |-
/parenright <1C60D8A8C9B7883CF464839EB6B239EDDA334E31DE8AA5AB2EB
6CB7D8C0C56EB81E0625A49A6A93F7A291D9628B42FAF1F0784ABA589B580291
CB9F55D2D8130F5B4EF0FC05173E85D3745B44F55258C525E109A37325D3563> |-
/asterisk <1C60D8A8C9B7883C29B4926474EA12156D8DAE08A133F4EE2C8D5
36C77C7B20F8E6F218ECA6AD4A062649BA1219CB62A50A4ABF117C498067C924
034079DE22B6D6263D8AF5A19F3EA2105B29B51E00AC6DDE1BCE466E5B208DE3
35F4A71D33FCAAEBD2CC600EE111D3D282A34EB2BABF61CC134FCC3240032C61
614242B887F34A79043CB7C8086987F1A1F183552C5D490EA7AFE161D08806F1
73DA36BF0BD9290B77420569447900D53B57F69DCC5717D56> |-
/comma <1C60D8A8C9B7883C3741EA86A23C06E46672DF0D727F341C4FDC7B55
10DA0F848C41FC15917DC25282FE6922A98D871D9DCF3BC18D634ADCBB75D3DC
C8B98738796CFA49F3A2E24C1981> |-
/hyphen <1C60D8A8C9B7883C3B073729B4E389B42E79295C08101196E06B913
67D99537B429ABCD9298C5EB237263DAD5F61> |-
/period <1C60D8A8C9B7883C47B214EA82737CFDD7F7EB939C9BE1AD8C5CB40
08AF9AC1C617255AA4C709BF9409262> |-
/slash <1C60D8A8C9B7883CF464839EB6B239E2F62F503DCC481C5D4FD2A50A
8EDD7D452E18D4D11534010718B08B9B36121CA81F082388AF504DBF3854EC0A
6653761542> |-
/zero <1C60D8A8C9B7883C4DD6B519314A3320BBB907C889B327F809DBA0078
8A87A456BB5C4F1874B6CF757FA285A07142F9E056475CA45FC4554C89CD6E26
34F7A71A0B534AF130B735BD75C2AE93ED4730EBB4AC347EBCBBC24368BA625F
6> |-
/one <1C60D8A8C9B7883C478830D24C3F6416C397CCD7D4C535C8ADC225A18A
A0E8C31FBF4952EEAE0B7353BF0C7A5F54CF70D2FABDCF00BBEFD2F36C366ED0
EB4828666B57F567D0F2A46290DAF721EF3F49F031212DF59D79DFF18EA897FA
BE555CB294> |-
/two <1C60D8A8C9B7883C478830D2B6A4C711815372C818DFBCE56E9F5DC7F7
FE87CF7B102066244349AFAA3B9EC9E0B056E0ED957AC9CF0974265C590741B7
7E523898DEC81B83F227660F216E00E787A531B5BBC681AAF9CAA82AA0ED07BE
FCC328CDBFA6734D97EAE21FC6C82D6A1ED6D2E694EF3A6DA464944993982C8C> |-
/three <1C60D8A8C9B7883C4DD6B5169E537CBA3A5484DDED558C9203AF68BD
45BAC81CC92823F58612D2B07D1DC9D4494911A5F41CE90BDDA9E838B5BF7756
281C2B40462954A34C011D378592F25D50E13E1640B08421C9F29E78A96191F1
CA6902E7241B6DACA1F065142C799D76FE7108FEE17A3BBA154B887BC93C6B9D
C829F71E05AA5DD58AFD68760DB473D349B699AAC1A4E3006FB96F198DF8FC71
34B596A04DA4553AB761B25C49B7E1B64575> |-
/five <1C60D8A8C9B7883C4DD6B516F50E529F8916DA965E32C847149402B1A
70F98627B82690528CE043CD29BF01FEA5908B0DD55E7F69A64EEC6B69860F37
ECBE0641DD7D732AA0384417F0A999D9E0BB497D6CEBDB69B48ED7D48A4BD2A7
DB869199346ACAB23288EE33ADBA3833B6727C889A63E46A07CEAAD1D863C6DB
27F2E3DD519646BA54B6D55> |-
/nine <1C60D8A8C9B7883C4DD6B5164ED7AD92D5C825B551B0F596C22F2FFFF
49425DC47B5B0C0715C728080790DFA1669DF7B058DF6520E3E97E37F7461F97
B75F6B11B80F4F55E711A7609D21628EF3B5D7E4ABB93E9E15EAD9738BBC2AA7
FA32705342695A59DF48BE97764DC827A123667D17BA9DF9617EAB4C682C23EC
B6DA2F2C6377B98EC84E6C3ACE533DCB6D7850CB0C6B2> |-
/semicolon <1C60D8A8C9B7883C3741EA86A23C06E46694648BEB38F12DB851
1E989C476DD34C7F2FAC7A8C3AB360619128D3BAB007AB1DE3BB50438742965D
762EEC3CEF8FAD84F898EA39546B9A9CF152A5D505EDA014AFBFA2C726CE5C01
27DDA35AC2F589208109> |-
/equal <1C60D8A8C9B7883C3BCB227077E73D8CFA35921F3AD54BD0531B2D23
CB7347759AB098CC24D56DAE17C1B3A3854AE08DBFF23830D3A9ABACA019CB26
2AC88B0C0BDE284A0013AEC872120E09739399> |-
/greater <1C60D8A8C9B7883C7251C6DC5086A537AC6C625823805853B44EA8
5ABADBF9E127ECCDEE0D5F4A09D32E931FC03AAB89DC948DE1CE0BDAA68239C0
CBF4CC1B118641EAB16ACFF4691EF007805C7A7E87E81F1B5124F55C3B7260C4
5D31> |-
/bracketleft <1C60D8A8C9B7883CF40923E2D1CA298F26E232930E97D71BB9
65A65A57E9B0612C5EA0601FC41093D062AD30C2B1BCBE71C8D4378D35FEA2C6
9EB2122ACDC2AF92308DCD74E69E> |-
/bracketright <1C60D8A8C9B7883CF40923E2D1CA298F36CB4F4E7F1E1E7C8
8CCEBFFF43BE5EFBF219FA0040B1AD8E286282DF79DDEFA6C0F870B6F642B799
B06AE2AE8579BBE97C70E28C9725A> |-
/a <1C60D8A8C9B7883C478830DD8A5BFB452538458154F4CE3B20AD66AD581A
DF189C4AA24F8CBBC0F70339A3AC822FEE3457B7E5F60BEFA6CFDF765B8A3D2F
273CC300F8F8736B1B2290BF6D64B521AB42268778DDD081E97AF1F166EABEF5
8CAACAFD7314321FAABBFB171C6401E8BC138F90EAB8EAC011C39D38EC2210C7
CD76FC3051095C80212DE7950D4EEF9B6992774477395A54> |-
/c <1C60D8A8C9B7883C4A7D20AF02F248405BB0FEB5BEB4424866E4AA8F7D1C
96E7B766FF4C7548AFD9BCEED1405BE68EEDAC184D6FA024DEEB00C6D3EAA865
A5DA65F020516612C5C28F3550F2FA31F4BFD863231970126034040555433EAD
DB9C42D590ADC0EE374998B8B8B5AB6D> |-
/d <1C60D8A8C9B7883C4A7D20AF0DD3ED7104BEE7F6D84DAE7EA020CA7AFA2C
BFE4AC36897205198721830A8AB1EAC205FA933B72BED81C5D5CF5D35E96AF4F
501D61996653C99302F0913D5B28065C17C79D42CBA02B6F956C63467FC09B35
4AB3AC510D8FB3DF115C3D51800C44B77444BCC0972329CE5F0067004D23925D
DC> |-
/e <1C60D8A8C9B7883C4A7D20A0A2FB7F2250F0DBD938F9100315996944235D
A4D35522DC5271E0997530F8F11CDC910ECE5428D0632B4858C70F59802E7E55
F069BB51A48FA483655B9CF2246FBCE33DD8D793CBF78B460B1AEB2359A0A7ED
9C180739C2D45FBC5051E3D6690D1A> |-
/f <1C60D8A8C9B7883C478830D208D625ED20D4215FF985DD676DC5BC2A1A63
501158AACA945017F911C2111684137446B54CAB850A66781409BDC92EC035F1
E33BF970187700C459FBA93F0ADCB5EF454EEE57A28A9A4D4EBD4C39A8680068
4B0229BE71DE1E6C7D6B07A91E1667941CAF1694F3A42E5B99E532> |-
/g <1C60D8A8C9B7883C3726489C458D0799001161A278FAE7520D22FEC683F8
1B67E72D39B273A40C0DF57A109D016FA40F92646BBA7EAC1A83D2AD5B1957E8
2D91509F7E20E4E5CD52564A699A8F1AE342E1036F7B7ED905A8B77C7B9BE9BA
5513F882542C9A2B8B4042D854B2BCD70634E9D2A7DD36431BEFB6F1B0C1E019
2CA38C620F1C27F012DED5E10248E9C34C89FB8F0361A0E9D37E40F6C7C3CEE2
3C7F07A49FDD7C7AB53D1774431D880563394764824E39D44C3D9DCEADC2EC88
9DC120D5A6EDD38A6B818C249CD53AC9A3DA07676E77A1E4DC5CEC5A8E82F61B
A4> |-
/h <1C60D8A8C9B7883C478830D20F0D4843C402F45DB9BECD77059F06484889
F902119F32FCEB497A95B198E71C1F94089E3E94F29A3051C3B126B0A4114AD7
2356E65E7E3BE096156B77074D24131680E327D8EFB42A9BD03329AA74062396
1BC0BFB051E3368135D06C4E611FAA43DEB16EA7B458F594D0E6E59189C74F6D
5C737F6DEBD2DA677B09C5FE4233> |-
/i <1C60D8A8C9B7883C478830D208D625ED16FFC4A91D386BCAC0EAE25622BB
1E44E76B43D5E9C02FB35DD2E716D71DB34EC5EF64E6676204311902DF93FA14
06434F9C55AC89918A3CB5264191C5A857EEB6C55C2A58756AE17BE12F9B5C9C
7E384136ACA12CCE72424CD36982DD> |-
/k <1C60D8A8C9B7883C478830D208D625ED2FFC6C26E637A967509A0F27CA34
14B8E2A1603C3EFCA59AA5338F2DC21F760119D5FE24E6D34D5933FDF4A90D1B
BB633CC4C0B996410EBB0EC8BA881CFB9B8B86A75809C0459811ADF214D9E930
548E744C4DD983CF0C49C52BD9480D36BA4A16E43C130EED5BC0DF38948DBC84
CAC1C98D86F398F2CA631E26225D67C73F81FB84EF10AC71D4544F8CC57E28> |-
/l <1C60D8A8C9B7883C478830D2BCF2481623045F78FD9BBADFFA8FB26EC510
AF3C97F27FDF441DB62E62A99256AEE465959742BAD1238681D42B1BB9244EBE
B8EFC1F9DC1EEC08C5424940618DBDED6D> |-
/n <1C60D8A8C9B7883C478830D20F0D48516C48529F19D4390ACA3CB636CB31
9811B28F3CFCE38D45413DC6FB2F60CD27C9B65282627A370A88296FC733A876
DAAB2711060AC3E24A4B2BDE2B5A6B0094E1A0426DD1D62A3B7328123FBD866F
AEDB59AD4AB57FC303BB5EA4EEDB39B4BA18C7408D49E86AF1FF5B06EA08EDF6
F4EE2B0915E7E1> |-
/o <1C60D8A8C9B7883C4A7D20AF02F248519684D53CFC242E61C1496541B9CE
EA6A7897D7666699B03F21228EC7BA0848E96D7EFB315379B280A7E230CB4070
45785C70CEEF55D239B1E02EDF4333F6E8CF5B72DA> |-
/p <1C60D8A8C9B7883C372C962195C172E9A7073D5EA7207CF57255F588225F
181A2F21C7DC257565C49ABCB1D71D916F82061E92250E16E91587D2BB8E5A49
52FDAE41DA886E334F311326412570FFC4E4A6BFF2638A7135609DDAF8B41645
285CB38B5815766F8C000EF0144C3C41F3480EDE10DBB81132F876A9FA0825ED
24CD75E0005C3EBA4572> |-
/q <1C60D8A8C9B7883C372C962195C172E9A0E870514ED7CFEED59E769C962F
192DCA8F21582637167DCF03CF834DA8FDF6CB7C861CB78E1153A5C6931A9425
DDB969740D6024CDB595A1AA848939870927CDFB8EAF2F7057C66DCD6DA50F2C
E132BCFB6B383E69D2FEECD008919D155C6818700357F075125AA6E882F410D5> |-
/r <1C60D8A8C9B7883C478830D208D625E29143C2A39959DC29D475238ADF68
B1BD7C6C492E6716EEF7B6D4B965C1D1412053774CE4723D464CA28C476F182C
0703D959FCC8A832A73DD52954B8CD7FD30FA15290EF16DA5553B3730CC63414
3C74987A4EA08B1BFD1FE46C993C692D5AA5> |-
/s <1C60D8A8C9B7883C4A7D20AF02F24847FCBC8320F552027E1BBA91727306
4B448C1E219D6771761953C699F55B69457599199C875CDE2C30B3404A099D9B
D065A195F90F73C05A7D7F57AAC3D9F6EBB22D3F04B13B217ECCDF33DA1500F9
04D56D439E52DC2B512A70F982EC661140B0BDF112DF780936562D79444CE561
55462716CFDD2033F98AFA3CF96979279CA5205E169D73FDE5BCE3AEADA13903
F78E1FE55129> |-
/t <1C60D8A8C9B7883C4A7D20AF0A7E92D5613B65AFEF55536C0C6DE4AFE20A
10C6970CE6FF2962A760B86C1D6370051A1B73D246B7D29444833B836A1EF0D8
3987BF5FB340E234471E761030FA005E3AF2243B9712C481663C21DCF2CA6EC2
311095E46BBCC49268EA2E747C71F6FBE1B8091D703C> |-
/u <1C60D8A8C9B7883C4A7D20AF0A7E92C75650A881710C1F05569716C5E79C
8B5E9DB2C0282130B445F6B57C4C1EF5C3C4088CE7D59E0BC4663C84334AE7BA
E2D2B560AE21587354649ED8CFFE69A3646B532DDE50AE6692B8BC6E873FA805
5C1CC683BFA7767A858597E206274A2B4A78380B44A399BD22> |-
/v <1C60D8A8C9B7883C4A103CD4EAE01FD804A0FC808A4B05A1CCDBF8105C59
77886FA30B95DE52399F2602278CEFF27631D0210BE832CAB5740D0194255CEA
F6224C1CAA5232C6677DF2C9430039A8A9338092F66BD1F888FCB191E106F666
25432E847076772AEC8CF9B58C> |-
/x <1C60D8A8C9B7883C478830D208D625E202B27052B97E3F39D7983FD856E0
CF68EA6192CFECF20342512BDDE3A5FC2F89457723FD72613413C44E5760B6CD
C10601A970B37F52D6CB67913ABFBB4678B04D3E8EA46D39AAE09138EA9A42AD
31262C87F4CC3D48A7F703E63E8FC29551E84A105DF870666DDEEED2BCFAA23C
C6302642588B93056B22EA50411A72A83D6B523AC0E644524B> |-
/y <1C60D8A8C9B7883C37293D8C0E2267BFA553152603B4DA54F5A894399784
B91A8E06CBE6DEC3AC8D9C0DD0886321036E94AA26CC3354B4FB14F55996EB3C
DA19C616BF6CF7B5340E0B8A26B1EA35B1013F27D08C125A2FD2BD435AEB2350
A62EA560E2204267765BEA3EF26688C7F188E3A4BADE608BDE0B997F92B9D142
A1CD6B567FA291FD21C4DDB6E0833F54995A994EF141B01D311A69611AF5C129
1D597A7DD1368348EBC7835E7C649584CA0904FE7D9BE06EA2F713B459AB80C2
987C> |-
/braceleft <1C60D8A8C9B7883CF40923EC4D515696A78DB3358C4D5997030B
8784D1B42A2C941E72C3EAD6F0A6E60F1A9AD784AEFB13307FBA8734114EA5FE
5617F897EB502676B0A6A3346B38F7ED1E4E2FE91AA124DE5AEA9AFEA04E838A
29A23E2A1FAE5701E96D4BCB28D30F50E0F503635AA6439AC595A35AA300C3F2
8C5A89BA5F09B0B696EBCAE7F872014770FE499B0E0FACA29B8C71> |-
/braceright <1C60D8A8C9B7883CF40923EC4D515696A78DB3358C4D5997030
BBB6A4B603C5F7B9F9E746B3BF688EDCBBF64C15A1F39A369CEAFC5A5A994233
FF2E35FD42225469B896E7ABCA9A54E35BA5CDB94DA90B2BEDBCE53EDA030736
B1B3C11072F61A1086D73AFCA4AA7B919739AE6BB2E83F4DA91B6EC72B536635
60608DADDFE3ECC775F8CCAF26E6712FC4B9FA9208610E775EBCBB333F7888D2
DAB> |-
/.notdef <1C60D8A8C9B7883CC2> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEIG+CMTT8 /HEJAAA+CMTT8 findfont ct_VMDictPut
/ARMEIG+CMTT8*1 
[34{/.notdef}rp /quotedbl /numbersign 4{/.notdef}rp /parenleft /parenright /asterisk /.notdef 
/comma /hyphen /period /slash /zero /one /two /three 
/.notdef /five 3{/.notdef}rp /nine /.notdef /semicolon /.notdef /equal 
/greater 28{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /.notdef 
/c /d /e /f /g /h /i /.notdef 
/k /l /.notdef /n /o /p /q /r 
/s /t /u /v /.notdef /x /y /.notdef 
/braceleft /.notdef /braceright 130{/.notdef}rp]
ARMEIG+CMTT8 nf
ARMEIG+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
72 513.6 mo
(#include"nrutil.h")
[4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 8.75759 4.1971 4.1971 4.1971 4.19711 
4.19711 4.1971 4.1971 4.1971 4.1971 0 ]xsh
72 531.48 mo
(voidspline\(floatx[],floaty[],intn,floatyp1,floatypn,floaty2[]\))
[4.1971 4.19711 4.1971 8.51769 4.19711 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 4.19711 
4.19711 4.1971 4.1971 8.87714 4.19711 4.19708 4.19711 8.63724 4.1971 4.1971 4.1971 4.1971 
8.5177 4.1971 4.1971 4.1971 8.63724 4.19711 4.1971 8.51768 4.19711 8.51768 4.1971 4.19711 
4.1971 4.19711 8.5177 4.19708 4.19708 4.19711 8.63724 4.19708 4.19714 4.19708 4.19708 8.63727 
4.19708 4.19708 4.19711 8.5177 4.19711 4.19711 4.19711 4.19711 8.63727 4.19711 4.19711 4.19711 
4.19711 0 ]xsh
%ADOBeginSubsetFont: DLPBAA+CMSS8 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /DLPBAA+CMSS8 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMSS8) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 49 /one put
dup 71 /G put
dup 73 /I put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
dup 122 /z put
dup 170 /quotedblleft put
dup 174 /fi put
dup 186 /quotedblright put
def
/FontBBox {-65 -250 1062 761} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-21 -0 694 715 444 459 656 677] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [66] def
/StdVW [87] def
/StemSnapH [59 66] def
/StemSnapV [87 101] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
34 dict dup begin
/comma <1C60D8A8C9B845C878C1CFCCB5F5F9E3A52F2BE8C6E51D4412DCD0D6
EA31615EB5727C1F99B3> |-
/hyphen <1C60D8A8C9B80898F3CBCDD83627D931A2EA01B809A19B5E8B72FFB
32FE0> |-
/period <1C60D8A8C9B845C80860AB44A338CC6083B186B062A47301A0A0> |-
/slash <1C60D8A8C9B7883C37D0390FA268C00AA6E97DC38CEDE5F7BA6FF788
7A92D19F2C13E2C7473EDD0ED308161488D158EAFB2D9F29D6B1A246C5D46B1A
3C43632A969F01E12907> |-
/one <1C60D8A8C9B7883C478FD7F46F74AD01DD5B54699EA0E353C31BD1A212
ADADED6E40A7A9FBC51D62BA784D7A55D02BB8B16483754CBF9A880FE2F6BDF4
2A0714> |-
/G <1C60D8A8C9B639EE071BE8242701378AD42DF6804E37D767548B620A2FA5
56F5285103938E8A376D8DCD09E2492320DBFD2AD3E9DE68FDC80ADC9E08C0B9
17BB9743269002633495265FCB95BF2EC601EAE7FE6736AD0D1606021244097B
3D84F65F6026EA2C99013A78E42509> |-
/I <1C60D8A8C9B845C808251600A255C99B753981E42091FC248AE4E0F76F30
6400> |-
/T <1C60D8A8C9B60BC6FA14843A5E7B4F8106FF8EB164A22D0F763873A27898
5BEACD5BA3A81B0C31C87D718ED98197A92DE9AC18ED4C8A7625E52D02D4AF8D> |-
/a <1C60D8A8C9B7BDE3EC5076B9DD7E38E64E726A6C54B306A0C490A11BFAA5
A7F2BFE5727664F0EE3908FB9FE3259630AE60DA068A29D724CA5EDADE792224
9BD245A92F2621C6B1F65F693FB98346367FF40A5058BB83441A5B2D0F836DA5
C75B78DE7B95D7D78354EAC9ADFEAE9D23804AB0D195FD1BF3> |-
/b <1C60D8A8C9B7967682E8E54742F49032E80413F610CF78732B372CA38672
C3B9828FD54AC1A5BFA620E912D6B2EFEB4132CFC7F73BD0029ED58ADDD443B2
D87F4E0AB4F2EE5A0DBD5CD0DE2EEB58E0BF59CC7D37181AC388A8C5562B9A6F
FFBB4F925FF769FD4A18632E5A> |-
/c <1C60D8A8C9B74383EFE2AED1D20DB94D25F65EA0DDCFCFB4A826D66997A3
91AF5D7A5B5FBB73D056E81114D01C5FE3ACFCCA4AA70FA75F3348C80CC88517
20B7369EF1022939925699461F8805AE42EB5D6DBB> |-
/d <1C60D8A8C9B7967682E8E54742F49032E80413B97DE6ABD0BEA040F18EB6
B957ED534F93F87C25CCCE606AB15E87D378F5D78382F96D5F45BBC8BAC55E6F
32CE4F2223BBC310FCC7C379D2088E5EF1F1365A41A382DBFE9E946DAC1CFA85
0DB4A35843> |-
/e <1C60D8A8C9B74383EFFF10C87598D4A3D5946A491C4C0AC6E2B8E58E9559
2041F7F708467C72BD9F4C9318DC61A7F3A3A2A776A0B5C761D1F735E0EDD54B
F6FD0F1F356781F961059A6E20FD864DCA47293E8BA42814C097640FDB33F82B
4A97FA9A> |-
/f <1C60D8A8C9B827990E4578150F1625517477194A0A9F58BFB8DD527961FD
8E1E1C8A08A81670231949877B49F410182698C913BBD82FC48DBA8D095B203E
4740906A8EB5346A88FF0C26B91FB52874> |-
/g <1C60D8A8C9B7883C373F644420BDFE6066184AB4968D81C59DD800329B9D
81FBB06ED60AF28107A0DDF501D6F8A72DEB35FABD098C4C6724101AB7C40841
175CD716B26483B36ABE899150213E6E5D57A36A6307F5E38084B6A515D5BDEF
446308AFEEB3DAD1CB1FEB524393850D9F2761D0B9F9524E1192200BEFBFD5FA
D5E9C79EC986E315F412E36F02FA1E3C9BF92DFB5816F700890659AADB7DB279
65D140B5EA2197FE7C9AB634D3C2294EAD45A4B945C45FDB08FBABDCA4080059
3CB1BAE4CAD7BA670521646F11E006C82EDB2374C8B2CD24> |-
/h <1C60D8A8C9B79676885C9E82F970D03A3EA564673B28D25469F15427ABEA
1B44D3CC94AA13907FF2C9D6CD72F75DBBAF5F619F0A97C8B984A88D15812FE2
F3093055E243C78E0BE1F6F5> |-
/i <1C60D8A8C9B86FAE6A72F95D40DFC0014093276B4B8451DBCAF1A4FF5653
63ABB851E8B0984AFAFDEA481FD7589BA4> |-
/l <1C60D8A8C9B86FAE6A72F95C980400B16FB0876AC9DC237314DDD8191AED
CEE6> |-
/n <1C60D8A8C9B79676885C9E82F970D01D47FD1FE922CC158415BE4CC338A7
2202E1ED65025A24B388E99D73616E595F28C4A4014C1C85111B44755B1BCD4E
74ECA524192B0F> |-
/o <1C60D8A8C9B7883C4DCBD75181A7FF6E6971E5C276A30685F0E1C3A50A98
195E99E32A3BD4AC4B6385045A7923253550E4F4C560D3FD17093917A13A3580
186A49C75945BBE1162D2FA0F817EB6A3D2BE8E2DA3B7EC0211E5F> |-
/p <1C60D8A8C9B79676F81A548F2A3AA3F01980623A4E67AC1E039DAFC14730
4927D5B1AA45D7C48455D12B4D6726328822BD905764AE3B9EF2FDFF3CF4D4BB
8801EE59A2A3C7954518978E33AAE49E3BC325D9A7B3BE29C1F3C8B1F496A638
F8DFE0925BA886DCEE> |-
/q <1C60D8A8C9B79676F81A548F2A3AA3F019806275DD4AC867009963F38C76
CAED2AFD9F11208415788A3057D34EF31F16051FB5E093F8DD35C0E971582ECB
A5BBFF053F9184124019F32CD33A50A0C547F76AF50D740667CDF28CDF9E21C0
F0> |-
/r <1C60D8A8C9B801FDB7D99B90CA4C2B0E219FE557019AB7A075EE85AB1DB7
8178C0D4C6BE5A99A3C0709B3986AA8EB9916187BA> |-
/s <1C60D8A8C9B704CCCD10E3D8345FD533ED38163C3E3BB669B7A294C1DBDD
F78275A299FF2227F844370DB83C3EFAAEEDA78F237317918CE17D2489E24998
738E3756354592FE28D229BC7EEAAC44E9AAC80ED39081CF46F30A90D57A1062
439E799BFA68E8398A84FBF51768B0BE7E6AC49320A4AE84C1ABCE09E7D14E86
ED999DE409BA9B> |-
/t <1C60D8A8C9B73B17047A7EDA9F6F31E3EA1A295736984E1D18E34820EAA5
37FC6B9EA6B3F9D0B075F655BF278168F2718223D509FD407F3F41CE16107A08
FC979309226C82AB6E2F17D655FF539CC8CAADF2> |-
/u <1C60D8A8C9B7967682E3DDB03E6BB5EE72A3B68B77ECE4659260E2C49167
AF4E3E6F4BBF0D13961A011158B739C6EF267565215CB4438FC6DD7F94266BB1
0338CC1ADB6E> |-
/v <1C60D8A8C9B751D5746CBC3A5E1D072240F5E641991AFCF9D3C65AAB09E2
76830801ED12889F123B114B28606759705FA786836D971EB1E73F30> |-
/w <1C60D8A8C9B60BC6FA14843A9F920EAF3E3669EDF48260377441EF336A0A
86A1DC9C56363F2494483695FE64D2A3E7B5F17EF614B5CC980F2FD23846C319
F767C5C64233127071C20DEE479871D1CCD256C88EF06507F2F6A0069C253397
22A47165BE54955CB90C0D170C9D48DECC14A54907F7F3E9713878594C1D559B
F1> |-
/y <1C60D8A8C9B751D5041C6AD215AEAD58DEF97ED0CE6C9DD04E918FB93DD1
99BDB1C3718B925E2E045F50D56F0A8CD5C93FDCA0C2B58684AF3944E79AEAF6
C2DE5C0F0EED4A01CD978A85DD0734B3A0B132FD63C32844EBF336CFA6135FD6
1F2913> |-
/z <1C60D8A8C9B74D93D6C1C1914A22609E077966A3760742878DF216F0AB17
1C19A66EF01C2949398FF6BFFE2448BE952489C7792D9D1C83A5FCB3559F6991
55B8BCBBBF35E8> |-
/quotedblleft <1C60D8A8C9B7883C34835648E9C10264DFF1AB51281933C74
1C9EAF6410ED8D71AEFDD83F7AB695C622B138E2BAFD091AC602BAC63C4B574A
352CEC399E8F388EB> |-
/fi <1C60D8A8C9B7E2CE5B6DC6886C8D0AA0C7F0107DA84B899CB7B2A0BB03C
3F577271DA5806DCE492242DA291CCFB505031F9160603B9593E154CBAE90B2C
2B6E2360844370A813A2E408FFAFC8259348736BBBBA7E3330707177CE868256
03F2A56539E1629724D42C15FC9> |-
/quotedblright <1C60D8A8C9B7883C34831343669E15A63AC20DB6F96460B9
245491EB1E0ED163468A8926D5333C5844BFB402AB156282BD6E61D023BEE2B1
9F594B97C80C03F9> |-
/.notdef <1C60D8A8C9B808980A> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEIH+CMSS8 /DLPBAA+CMSS8 findfont ct_VMDictPut
/ARMEIH+CMSS8*1 
[44{/.notdef}rp /comma /hyphen /period /slash /.notdef /one 21{/.notdef}rp 
/G /.notdef /I 10{/.notdef}rp /T 12{/.notdef}rp /a /b 
/c /d /e /f /g /h /i 2{/.notdef}rp 
/l /.notdef /n /o /p /q /r /s 
/t /u /v /w /.notdef /y /z 47{/.notdef}rp 
/quotedblleft 3{/.notdef}rp /fi 11{/.notdef}rp /quotedblright 69{/.notdef}rp]
ARMEIH+CMSS8 nf
ARMEIH+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
72 540.48 mo
(Givenarrays)
[5.6364 2.03561 3.96278 3.71726 7.92224 3.83597 2.88045 2.88044 3.83597 3.96278 0 ]xsh
%ADOBeginSubsetFont: OVSAAA+CMTT9 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /OVSAAA+CMTT9 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMTT9) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 110 /n put
dup 112 /p put
dup 120 /x put
dup 121 /y put
def
/FontBBox {-6 -233 542 698} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 611 622 431 439] def
/OtherBlues [-228 -222] def
/BlueScale 0.04796 def
/StdHW [65] def
/StdVW [74] def
/StemSnapH [65] def
/StemSnapV [74] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
10 dict dup begin
/period <1C60D8A8C9B78E059954BBB8A5007692C4FF0DC21623ADCBCBC5AD5
607A6F4AA1A3DA926D580DC6DF7ABDF> |-
/one <1C60D8A8C9B78E05996F6CB6318B0C24FDE0F928ADCAFF3192A90D2FB5
A9E5330EC1110F982A83EEE906383E3A7467DF6BD5EE324B77D031AA3B940CD8
C46DF07F5751DD461B81170026CA6694D0EC929D3F8660FCE02A5AB8BBCB35A2
E356B5A4AA> |-
/two <1C60D8A8C9B78E05996F6CB6B7992BACAC505ABFD2DDB66BADF46AC79C
BEB7FF1528A87DD2B6F02452B996BA424C27EFC59DBA09271BA2BD596CFE80B2
332231187E128C5BFB8DA8571AF6FC6AD361587D1DA3FA4285D964A6EAD25F51
8A8204ED8C5CE19C32E0B369AAE8EAD03214BDA2B9352C8701733C05E8D8B9C0
75> |-
/bracketleft <1C60D8A8C9B78E052AEEE373354B3AB3330A1A774B464B7A8A
A8BF0C06AA3278289C38E89AFD6F360FEBF697B06FB94E43571156D5BEFFF91A
EA343DFC3E384824547B31FA0CB0> |-
/bracketright <1C60D8A8C9B78E052AEEE373354B3AB3218EAD86E0C470986
A04142AAD7EA61C5ED0CB601DF691CA2C7740A2DEFE8F2489735E69F1A82AB90
A80F1A29060B2A195547B04FF05C5> |-
/n <1C60D8A8C9B78E05996F6CB6712F7999C891D9AA450FEC6A7B0BA5B5BCE0
5249B928911742195C5A9CAE9C2A1FC34D0A4320DEBCC97D05726DC00DD35C1C
05E66D14443B41AB8728F2340E579ABA439BE32258BFD47CA7013C285CEA1A48
F0D2AFA792A3C7BD965BC44F79002C37F3715ED6ACE122493CB41EC30B490A3E
F97780070F29CE> |-
/p <1C60D8A8C9B78E05E957984633A39DB806CAEE6A380037075D5D35813785
C7431D8AC7994839DD4569ED923F7F9239DFB160D1081C1E087A20FDC1B6AB7F
DA12BA53C1A56BA8FA4BE2CC0AB3B31177C803FCA4FB82CCB98FC83E5606A52A
62A8CE42C90A15B9D1DF5356330457E96595369801EFF34103DEDAE0588F8D4C
7168236A686A19966509> |-
/x <1C60D8A8C9B78E05996F6CB67482346509975DCA20F66B51DA69BAAED4A6
85DCB69DDD6F6BF9DA3B6F50543EF832BF715F0E016CDBDF2AC27B3FCFBF4F77
1B5EEFFEC889BAC3D6161A1C507BBEC084972F56B1CB7357A849FFB10646457E
B61E8910E42CBE0C332CFBED466EFA1DB031902477652DE1D15DC3E775C657F8
B932F83C342A93B43A4AFB479BAC71897EFCCA0175258E32DE> |-
/y <1C60D8A8C9B78E05E95280E85497A2CB8D3CA33B8547A1ED79689C3792A6
C1E02B76C268A80C641451F40BD7F4F2491C962B34137320579B18629C9DD249
FB0A123A70F2D9A7DF66D1EF936FBED105D0D7C3F3637AD94E3A3D9FA6A10CA1
2BFD7C193FDB68FD9BE8356AFD9A93BDDCD86429716291636A7CF6C7096AA20B
1FD12496EC0AAC66437330A815D4564CF563CBB40C16245D628614FD54369A4C
B8A406739BF4E7A276C6B928348006FF5DD6A3FA8A4C84D708A6C13D4248BBA9
D7> |-
/.notdef <1C60D8A8C9B78E051C> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEII+CMTT9 /OVSAAA+CMTT9 findfont ct_VMDictPut
/ARMEII+CMTT9*1 
[46{/.notdef}rp /period 2{/.notdef}rp /one /two 40{/.notdef}rp /bracketleft /.notdef 
/bracketright 16{/.notdef}rp /n /.notdef /p 7{/.notdef}rp /x /y 
134{/.notdef}rp]
ARMEII+CMTT9 nf
ARMEII+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
119.393 540.48 mo
(x[1..n])
[4.67951 4.6795 4.6795 4.67952 4.6795 4.67952 0 ]xsh
ARMEIH+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
155.867 540.48 mo
(and)
[4.07587 4.32214 0 ]xsh
ARMEII+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
172.185 540.48 mo
(y[1..n])
[4.6795 4.67952 4.6795 4.6795 4.67952 4.6795 0 ]xsh
ARMEIH+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
208.66 540.48 mo
(containingatabulatedfunction,i.e.,)
[3.71167 4.18196 4.32535 3.01033 4.07587 2.0356 4.32535 2.03561 4.32533 8.03709 7.67598 3.00235 
4.07587 4.32535 4.32532 2.03561 4.07587 3.00235 3.71167 8.0426 2.64209 4.32532 4.32535 3.7117 
3.01031 2.03561 4.18195 4.32535 6.35852 2.03564 2.39816 3.71725 2.39819 0 ]xsh
ARMEII+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
344.48 540.48 mo
(y)sh
%ADOBeginSubsetFont: VBSAAA+CMMI6 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /VBSAAA+CMMI6 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/BaseFontName (CMMI6) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 78 /N put
dup 105 /i put
def
/FontBBox {10 -250 1241 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-21 -0 683 704 431 441 452 463] def
/OtherBlues [-204 -194] def
/BlueScale 0.04379 def
/StdHW [35] def
/StdVW [85] def
/StemSnapH [35 39] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/N <1C60D8A8C9B5C96BE5C3E8EB120EE391F39A233835D7C296DBAFC3DDE828
3EAB3CC060D93AB3A158C8068B8C540AC262F78B73B39C782444305121A0BA12
73D314517570D2A3FC0590D982C938C3D0E55F6F900E263029B3915282372B9D
7CE0268094EA9D93425F615094D29898C3CBE77F54EE3F6EF7AA706B839F31E3
7247F8B2A26AF9231F97C1EEBE755A6360375DCA45B33E293F3CFA73A8000CB2
4F9D1AECCCBC6501AC4FCB06373EB9FAEB8C19F9712A9A3CBAB019A0440F0FD9
871D17835C7BA57F9A2307D407AA85AC9090> |-
/i <1C60D8A8C9B77D5FE26A5467CEBA8D27174A141828D6B8D91CC43DE243B1
F23F652FAEF2E5B69E6DFF553791FFC7A4F17D8667089458281A82196281D3A3
7B75D8CF4E6E7A7965A182BBECA0530A436006B0945C3129D30C71FAE61F83E1
F124E74F0A454C0704D38D0F03F1AAC08B243BA36E601B8AECBDBB5B9F9A1478
7C7F6E6B76A920821E33D650D7914FDD509DB1F7D1E4B092D60CD44E932AF682
F72D6C9CDDF73D82EF561137C8C9B20CA7D0116CFC7C8E43> |-
/.notdef <1C60D8A8C9B81F2CC3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEIJ+CMMI6 /VBSAAA+CMMI6 findfont ct_VMDictPut
/ARMEIJ+CMMI6*1 
[78{/.notdef}rp /N 26{/.notdef}rp /i 150{/.notdef}rp]
ARMEIJ+CMMI6 nf
ARMEIJ+CMMI6*1 [5.9776 0 0 -5.9776 0 0 ]msf
349.2 543 mo
(i)sh
%ADOBeginSubsetFont: BYBAAA+CMR8 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /BYBAAA+CMR8 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMR8) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 61 /equal put
def
/FontBBox {-36 -250 1070 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-21 -0 683 704 431 446 665 675] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [33] def
/StdVW [76] def
/StemSnapH [28 33] def
/StemSnapV [76 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
6 dict dup begin
/parenleft <1C60D8A8C9B71EB594BAA87F31A170DCF548DAEE3311FC43FC78
A6C074493B3549D0E1827F1703C6338D1907CB557F57F502EA6D6799A8DE937E
F9683D579DF1ABAB4E74C3A1B979FDB2EF2D12A2FA9CDA68067A5474500A9603
68C6287159041D49A1> |-
/parenright <1C60D8A8C9B71EB594BAA87F31A170DCF0F44A88F271C1204DA
8CF0A554BEEB2F39FC92A6198D8CB5B5035678EDF15C268D7DFBF834C3E0481F
4D74050740572F4CCA890EC4E0E90C1B49113DEAB732B279883A40AC82E62D22
FC7681B0EFAEE5F4823C1A08D4996DA0A> |-
/zero <1C60D8A8C9B7883CBAA78CA806F705F10D1AC319938D611C6D9BBD69F
6190342FB8FEE9368658E53BCE0AE7824A3280DBA7A5BEF9C087CCC08CFF6EE3
D1CDFAC58984B448A56F36AF08290137970E991F67C347622795CF41E8928BFB
8E257576760A149EDA95EF674E027B6AB519EF80CF7C75785FE2FE5A8F75A351
8927237EA043AA5EE9A8092D5C4A8721DCA0DF83E6E87BB> |-
/one <1C60D8A8C9B7883C47E9695A643EC7CDC9D492AB150D29B838BCDE5298
51B4F36139BB3C5556B7F7E4934494C8CA669B61323ACA68A6240E429D123FC3
10871A43C3C2B8652E724507A70C99EC1FF6EE1EA351C2BAEF> |-
/equal <1C60D8A8C9B6AF04192A4BB30DDD738252E20241690489A62629F3B3
44313DD3D5F1F837570FB3ACBDAD182696C7EA47D7904E4AA1692C85CD41F507
B0C4FDE1117DD6F957380D576A13E4CC28E9DC> |-
/.notdef <1C60D8A8C9B808980A> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEIK+CMR8 /BYBAAA+CMR8 findfont ct_VMDictPut
/ARMEIK+CMR8*1 
[40{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one 11{/.notdef}rp /equal 
194{/.notdef}rp]
ARMEIK+CMR8 nf
ARMEIK+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf
355.92 540.48 mo
(=)sh
%ADOBeginSubsetFont: HYTBAA+CMMI8 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /HYTBAA+CMMI8 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/BaseFontName (CMMI8) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 60 /less put
dup 102 /f put
def
/FontBBox {-24 -250 1110 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-21 -0 683 704 431 441 452 463] def
/OtherBlues [-204 -194] def
/BlueScale 0.04379 def
/StdHW [32] def
/StdVW [78] def
/StemSnapH [28 32] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/period <1C60D8A8C9B845C808722EC4BC14AFF8AE2E7B77E6F8BCE7168E5D6
AAF8EDCBCC1E75FB1AEB9A3BD002E> |-
/less <1C60D8A8C9B6AF04A5AA9B6324162AB0A8421C462943261BF98CA6A86
EE8E36A75FCCF72BC2CD9DE16942BBCCCE77CC318589284D20BBC7022576A3ED
7595E85C3DA992EFD410374BE1C4B76BEF42EB5A873C335A43AD0BA9B96BCF5E
B> |-
/f <1C60D8A8C9B7BDE39624BA35F9873A747EE9BC84CD60C9A16B59BCEE4C43
E8416755182EA20990D7A7761E006E7D35C02B34FC60C39830397490FF62933D
8C47CCB6287D584878A7D75FB9E44810769C0D3B8C0C46152FFBBE481E634F1E
1419E7B4D16C8F8727C8D54601BAFE35C7D44D79D4A0B9D56FA4D16BA3EE73C1
653129732D16EBC48F121D350074E0526F0600B2A4AADD6C3D3E045FAEFD46B5
A308B504D1A00A5DDAC27119F3019E67C00755AD3F8DA917638DAB563314E2E7
1A06BDE902AC84> |-
/.notdef <1C60D8A8C9B81F2CC3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEIL+CMMI8 /HYTBAA+CMMI8 findfont ct_VMDictPut
/ARMEIL+CMMI8*1 
[46{/.notdef}rp /period 13{/.notdef}rp /less 41{/.notdef}rp /f 153{/.notdef}rp]
ARMEIL+CMMI8 nf
ARMEIL+CMMI8*1 [7.9701 0 0 -7.9701 0 0 ]msf
365.999 540.48 mo
(f)sh
ARMEIK+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf
370.918 540.48 mo
(\()sh
ARMEII+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
374.158 540.48 mo
(x)sh
ARMEIJ+CMMI6*1 [5.9776 0 0 -5.9776 0 0 ]msf
378.96 541.68 mo
(i)sh
ARMEIK+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf
382.2 540.48 mo
(\))sh
ARMEIH+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
385.439 540.48 mo
(,with)
[6.11862 5.76157 2.03561 3.00238 0 ]xsh
ARMEII+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
72 549.48 mo
(x)sh
%ADOBeginSubsetFont: SPGAAA+CMR6 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /SPGAAA+CMR6 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMR6) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
def
/FontBBox {-20 -250 1193 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-21 -0 683 704 431 446 665 675] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [39] def
/StdVW [83] def
/StemSnapH [32 39] def
/StemSnapV [83 100] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
5 dict dup begin
/zero <1C60D8A8C9B7D8BE97822546F43AB88E94201900EED03E9240CF10643
38339B6B288DE8F9A89E9E95E2AAE09DB4E4FCBCFC3241C49873C1BEB5DF809B
84354400F1A8A60C7F66DAC356766A8FEC88A824082410A228025EF9EFF3993D
AA406EB3831DEC9EBB3EF5E42909424B3F1B4BE4B89A2ED0AB452> |-
/one <1C60D8A8C9B7D8BE6A6D108299748564B8AA7FDE972DFCEF4C94952114
EFA32AA147A324B4F97380434F467992105F86859DCCB242ACAEFFBF289D2510
C71F8870F8C93978AE618D37971A84A2BBB106D0B0CA26DAEB> |-
/two <1C60D8A8C9B7D8BE6A3AF0AE9C7D4FBA9B02864DF6BF344A2B6AA1A0A5
9286E6B7771F2FC88421A5248A8C846419F71339C984DF218079620CB53B3D33
22EDD7DCE7F4AEDE980B0C15FE0A5F8431A01C095F9661EBA2EB366166D7A76F
1703DA16DC063EC354A2450FF18D4A834F4990EED138F52B9DEC0E62637C103F
29927E13CC1A6ECA113C2531F4> |-
/three <1C60D8A8C9B7D8BE97865F34940D2F402A7C64121D263057BA1B7AF8
4C5AB2E7826E880A1B485EF333B1558A1278ED97EB6C6CD29C2F8DCC07E83A23
6B1EAD22E3E66E384BB251B1646A42AE80057F57F6273FD52E6D9245B10CC46C
1BD508600E608E92CF7AD6B845955643DC78DF08EEC16C4F0DFA43948C18DE3D
3BC7808547DC18A99B63DED4798DBEDBEEFD57F1FA3CD64895C35F45D4EF653A
5D20F2C4EF4CDA5BEA573DAC3B15AECF> |-
/.notdef <1C60D8A8C9B71A73C3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEIM+CMR6 /SPGAAA+CMR6 findfont ct_VMDictPut
/ARMEIM+CMR6*1 
[48{/.notdef}rp /zero /one /two /three 204{/.notdef}rp]
ARMEIM+CMR6 nf
ARMEIM+CMR6*1 [5.9776 0 0 -5.9776 0 0 ]msf
76.68 550.56 mo
(1)sh
ARMEIL+CMMI8*1 [7.9701 0 0 -7.9701 0 0 ]msf
83.16 549.48 mo
(<)sh
ARMEII+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
92.1589 549.48 mo
(x)sh
ARMEIM+CMR6*1 [5.9776 0 0 -5.9776 0 0 ]msf
96.84 550.56 mo
(2)sh
ARMEIL+CMMI8*1 [7.9701 0 0 -7.9701 0 0 ]msf
103.32 549.48 mo
(<...<)
[8.99589 3.71883 3.83839 4.67843 0 ]xsh
ARMEII+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
133.436 549.48 mo
(x)sh
ARMEIJ+CMMI6*1 [5.9776 0 0 -5.9776 0 0 ]msf
138.12 550.8 mo
(N)sh
ARMEIH+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
145.08 549.48 mo
(,andgivenvalues)
[5.03868 4.07587 4.32933 7.0822 4.18594 2.03561 3.96277 3.71725 7.0822 3.96278 4.07587 2.0356 
4.32933 3.71567 0 ]xsh
ARMEII+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
210.711 549.48 mo
(yp1)
[4.6795 4.67952 0 ]xsh
ARMEIH+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
227.508 549.48 mo
(and)
[4.07587 4.32214 0 ]xsh
ARMEII+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
242.986 549.48 mo
(ypn)
[4.6795 4.67952 0 ]xsh
ARMEIH+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
259.784 549.48 mo
(forthe\256rstderivativeoftheinterpolating)
[2.64206 3.95721 5.52094 3.00235 4.32376 6.59763 4.55573 2.88043 3.23746 5.64206 4.32373 3.71008 
2.88046 2.03561 3.96277 4.07587 3.00873 2.03561 3.96277 6.47733 4.18036 5.28253 3.00876 4.32373 
6.59766 2.03561 4.32373 3.00873 3.71008 2.88046 4.56204 4.19711 2.03561 4.07587 3.00873 2.03558 
4.32376 0 ]xsh
72.0002 558.36 mo
(functionatpoints1and)
[2.64207 4.32454 4.32455 3.71088 3.00953 2.03561 4.18117 7.562 4.07587 6.0023 4.56205 4.19711 
2.03561 4.32215 3.00954 6.35693 7.19704 4.07587 4.32454 0 ]xsh
ARMEII+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
161.387 558.36 mo
(n)sh
ARMEIH+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
166.067 558.36 mo
(,respectively,thisroutinereturnsanarray)
[5.39813 2.88045 3.72205 3.20395 4.56206 3.72205 3.72203 3.02069 2.03561 3.96277 3.72205 2.0356 
3.24228 5.51848 3.02069 4.33571 2.03561 6.23738 2.85335 4.19231 4.33571 3.02069 2.03561 4.32216 
6.95789 2.88046 3.72205 3.02066 4.33572 2.85333 4.33569 6.47729 4.07587 7.32208 3.83597 2.85336 
2.85333 3.836 0 ]xsh
ARMEII+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
319.404 558.36 mo
(y2[1..n])
[4.6795 4.6795 4.67953 4.6795 4.6795 4.6795 4.6795 0 ]xsh
ARMEIH+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
360.078 558.36 mo
(thatcontains)
[3.00235 4.32217 4.07825 6.12186 3.71725 4.19708 4.32217 3.00235 4.07825 2.03003 4.32217 0 
]xsh
72.0006 567.36 mo
(thesecondderivativesoftheinterpolatingfunctionatthetabulatedpoints)
[3.01033 4.32534 6.9579 3.23743 3.71168 3.71167 4.18196 4.32534 7.8019 4.32534 3.71168 2.88045 
2.03561 3.96277 4.07587 3.01035 2.03561 3.96277 3.71725 6.35693 4.19711 5.76234 3.00237 4.32533 
7.07745 2.03561 4.32216 3.01031 3.71169 2.88045 4.56206 4.18196 2.03561 4.07587 3.00235 2.03561 
4.32214 7.55728 2.64209 4.32532 4.32535 3.71167 3.01035 2.03561 4.18195 7.68234 4.07587 6.24222 
3.01031 4.32535 6.95792 3.00235 4.07587 4.32535 4.32535 2.03558 4.07587 3.00238 3.71167 7.80188 
4.56204 4.19714 2.03558 4.32217 3.01031 0 ]xsh
ARMEII+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
342.92 567.36 mo
(x)sh
ARMEIJ+CMMI6*1 [5.9776 0 0 -5.9776 0 0 ]msf
347.76 568.56 mo
(i)sh
ARMEIH+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
350.88 567.36 mo
(.If)
[6.59842 2.39819 0 ]xsh
ARMEII+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
365.519 567.36 mo
(yp1)
[4.6795 4.6795 0 ]xsh
ARMEIH+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
382.796 567.36 mo
(and/or)
[4.07587 4.32852 4.32852 4.18515 3.95721 0 ]xsh
ARMEII+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
72 576.36 mo
(ypn)
[4.67951 4.6795 0 ]xsh
ARMEIH+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
89.1576 576.36 mo
(areequalto)
[3.83597 2.88044 6.71721 3.71725 4.32215 4.32215 4.07587 5.1559 3.00237 0 ]xsh
ARMEIK+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf
134.511 576.36 mo
(1)sh
%ADOBeginSubsetFont: CANBAA+CMSY8 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /CANBAA+CMSY8 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.035 def
/BaseFontName (CMSY8) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 127 /multiply put
def
/FontBBox {-30 -955 1185 779} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-24 -0 683 704] def
/OtherBlues [-126 -118] def
/BlueScale 0.039625 def
/StdHW [46] def
/StdVW [89] def
/StemSnapH [46 61] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/multiply <1C60D8A8C9B6AF046AD74CF7DF938EC4B148D983FE5645DF3138D
0807FE78EED625D6FB6493D494EF978BC1C893AD8AD6D66E034FAFE28C6B781B
A473D8E3EC2032DDDFBA2C98817155487FDA8E1A50B4E8056FD4242C5B33320E
842BA1329EFC89A1F141A7EB95BC0CCB8C019C24348AAE7AA6E09FE894BB25C6
B61C4A4299478E9B6E0BEA938014412> |-
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEIN+CMSY8 /CANBAA+CMSY8 findfont ct_VMDictPut
/ARMEIN+CMSY8*1 
[127{/.notdef}rp /multiply 128{/.notdef}rp]
ARMEIN+CMSY8 nf
ARMEIN+CMSY8*1 [7.9701 0 0 -7.9701 0 0 ]msf
140.75 576.36 mo
(\177)sh
ARMEIK+CMR8*1 [7.9701 0 0 -7.9701 0 0 ]msf
149.27 576.36 mo
(10)
[4.1971 0 ]xsh
ARMEIM+CMR6*1 [5.9776 0 0 -5.9776 0 0 ]msf
157.68 573.48 mo
(30)
[3.59846 0 ]xsh
ARMEIH+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
168.6 576.36 mo
(orlarger,theroutineissignaledtosetthecorrespondingboundary)
[3.9572 6.00075 2.03561 3.83595 2.88045 4.19711 3.71008 2.88043 5.39813 3.00237 4.32375 6.83755 
2.88045 4.1971 4.32375 3.00874 2.03561 4.32214 6.9579 2.03561 6.23738 3.23743 2.03561 4.19711 
4.32373 4.07587 2.03561 3.71725 7.56201 3.00235 7.19705 3.23743 3.71008 6.12189 3.00873 4.32373 
6.95789 3.71725 3.95718 2.88046 2.88046 3.71722 3.23746 4.56204 4.18036 4.32376 4.32376 2.03558 
4.32373 7.55731 4.56204 4.19711 4.32373 4.32373 4.32376 3.83597 2.88043 0 ]xsh
72 585.36 mo
(conditionforanaturalspline,withzerosecondderivativeonthatboundary.)
[3.71327 4.18355 4.32693 4.32693 2.03561 3.01192 2.03561 4.18356 7.68235 2.64206 3.9572 6.00075 
7.07581 4.32693 4.07587 3.01192 4.32693 2.88045 4.07587 5.27626 3.23743 4.32693 2.03561 2.03561 
4.32217 3.71326 5.63884 5.73766 2.03561 3.01193 7.562 3.72128 3.71725 2.88045 7.3174 3.23744 
3.71327 3.71327 4.18356 4.32693 7.68234 4.32693 3.71327 2.88045 2.03561 3.96277 4.07587 3.01193 
2.03558 3.9628 6.83755 4.18353 7.44247 3.01193 4.3269 4.07587 6.24222 4.56204 4.19711 4.32693 
4.32693 4.32693 3.83594 2.88046 3.24228 0 ]xsh
ARMEIG+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
72 594.24 mo
({)sh
87.9601 603.24 mo
(inti,k;)
[4.1971 4.19711 8.51769 4.1971 4.19711 4.1971 0 ]xsh
87.9601 612.24 mo
(floatp,qn,sig,un,*u;)
[4.1971 4.19711 4.1971 4.19711 8.63725 4.1971 4.19711 4.1971 4.1971 4.1971 4.19711 4.19708 
4.19711 4.1971 4.1971 4.1971 4.1971 4.1971 4.1971 0 ]xsh
87.9601 630.12 mo
(u=vector\(1,n-1\);)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 
4.1971 4.19711 4.19708 0 ]xsh
87.9601 639.12 mo
(if\(yp1>0.99e30\))
[4.1971 8.51769 4.19711 4.1971 4.19711 8.51769 8.51768 4.19711 4.19708 4.19711 4.1971 4.1971 
4.1971 4.1971 0 ]xsh
ARMEIH+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
221.149 639.12 mo
(Thelowerboundaryconditionisseteithertobe\252nat-)
[5.73686 4.32614 5.7576 2.03561 3.9572 5.52167 3.71246 4.80045 4.56207 4.19708 4.32614 4.32614 
4.32614 3.83597 2.88043 6.12268 3.71246 4.18277 4.32614 4.32614 2.03561 3.01111 2.03564 4.18274 
6.48206 2.03561 5.03708 3.23746 3.71725 5.0419 3.71725 2.03561 3.00235 4.32614 3.71246 4.92081 
3.00235 6.23746 4.56204 5.63724 4.19711 4.32614 4.07587 3.01111 0 ]xsh
235.56 648.119 mo
(ural\272)
[4.32216 2.88045 4.07587 2.0356 0 ]xsh
ARMEIG+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
103.917 648.119 mo
(y2[1]=u[1]=0.0;)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 4.1971 
4.1971 4.19711 0 ]xsh
87.9601 657 mo
(else{)
[4.1971 4.19711 4.1971 8.51769 0 ]xsh
ARMEIH+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
221.156 657 mo
(orelsetohaveaspeci\256ed\256rstderivative.)
[3.9572 5.88039 3.72523 2.03561 3.20715 6.71719 3.02388 7.31738 4.3389 4.07587 3.96277 6.59766 
7.07581 3.23746 4.56204 3.72522 3.72525 2.03561 4.55569 3.71725 7.44244 4.55573 2.85654 3.20715 
6.00229 4.32217 3.72522 2.85654 2.03561 3.9628 4.07587 3.00232 2.03564 3.96277 3.72522 0 
]xsh
ARMEIG+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
103.92 666 mo
(y2[1]=-0.5;)
[4.1971 4.19711 4.1971 4.19711 8.51768 8.5177 4.1971 4.1971 4.1971 4.19711 0 ]xsh
103.92 674.999 mo
(u[1]=\(3.0/\(x[2]-x[1]\)\)*\(\(y[2]-y[1]\)/\(x[2]-x[1]\)-yp1\);)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 4.1971 
4.1971 4.19711 4.19708 4.19711 4.19708 4.19711 4.1971 4.1971 4.1971 4.1971 4.19711 4.31744 
4.1971 4.1971 4.1971 4.31746 4.19708 4.19711 4.31744 4.1971 4.19711 4.1971 4.31744 4.1971 
4.1971 4.19708 4.31747 4.19711 4.19708 4.31744 4.19711 4.19711 4.19708 4.31744 4.19711 4.19711 
4.31744 4.19708 4.19708 4.19711 0 ]xsh
87.9601 683.88 mo
(})sh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/2 ]]
] del_res
/ARMEIC+CMR10*1 uf
/ARMEIC+CMR10 uf
/BKUAAA+CMR10 uf
/ARMEIE+CMSY10*1 uf
/ARMEIE+CMSY10 uf
/RQIBAA+CMSY10 uf
/ARMEIA+CMMI7*1 uf
/ARMEIA+CMMI7 uf
/IPIBAA+CMMI7 uf
/ARMEIH+CMSS8*1 uf
/ARMEIH+CMSS8 uf
/DLPBAA+CMSS8 uf
/ARMEHZ+CMSY7*1 uf
/ARMEHZ+CMSY7 uf
/ROVAAA+CMSY7 uf
/ARMEIB+Times-Italic*1 uf
/ARMEIM+CMR6*1 uf
/ARMEIM+CMR6 uf
/SPGAAA+CMR6 uf
/ARMEIF+CMTT10*1 uf
/ARMEIF+CMTT10 uf
/IMLBAA+CMTT10 uf
/ARMEIK+CMR8*1 uf
/ARMEIK+CMR8 uf
/BYBAAA+CMR8 uf
/ARMEHV+Helvetica-Oblique*1 uf
/ARMEIN+CMSY8*1 uf
/ARMEIN+CMSY8 uf
/CANBAA+CMSY8 uf
/ARMEIL+CMMI8*1 uf
/ARMEIL+CMMI8 uf
/HYTBAA+CMMI8 uf
/ARMEID+CMR7*1 uf
/ARMEID+CMR7 uf
/GLBBAA+CMR7 uf
/ARMEIG+CMTT8*1 uf
/ARMEIG+CMTT8 uf
/HEJAAA+CMTT8 uf
/ARMEHY+CMMI10*1 uf
/ARMEHY+CMMI10 uf
/MMFAAA+CMMI10 uf
/ARMEHX+Helvetica*1 uf
/ARMEHW+Times-Roman*1 uf
/ARMEIJ+CMMI6*1 uf
/ARMEIJ+CMMI6 uf
/VBSAAA+CMMI6 uf
/ARMEII+CMTT9*1 uf
/ARMEII+CMTT9 uf
/OVSAAA+CMTT9 uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Page: 4 4
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
[
[/Label (4)]
[/TrimBox [12 51.377624511719 583.08001708984 790.42236328125]]
[/BleedBox [12 51.377624511719 583.08001708984 790.42236328125]]
[/ArtBox [12 51.5776 583.08 790.622 ]]
]xpdfm
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -842 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
12 51.5776 mo
12 790.622 li
583.08 790.622 li
583.08 51.5776 li
cp
clp
[0.933137 0 0 0.933137 12 51.5776 ]ct
false sop
/3 
[/DeviceGray] /CSA add_res
0 gry
%%IncludeResource: font Times-Roman
/ARMEIO+Times-Roman /Times-Roman findfont ct_VMDictPut
/ARMEIO+Times-Roman*1 
[49{/.notdef}rp /one 4{/.notdef}rp /six 201{/.notdef}rp]
ARMEIO+Times-Roman nf
ARMEIO+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
72 84.6 mo
(116)
[4.9813 4.9813 0 ]xsh
%%IncludeResource: font Helvetica-Oblique
/ARMEIP+Helvetica-Oblique /Helvetica-Oblique findfont ct_VMDictPut
/ARMEIP+Helvetica-Oblique*1 
[46{/.notdef}rp /period 4{/.notdef}rp /three 15{/.notdef}rp /C /.notdef /E 
3{/.notdef}rp /I 23{/.notdef}rp /a 2{/.notdef}rp /d /e 2{/.notdef}rp 
/h /i 2{/.notdef}rp /l /.notdef /n /o /p 
/.notdef /r /.notdef /t 3{/.notdef}rp /x 135{/.notdef}rp]
ARMEIP+Helvetica-Oblique nf
ARMEIP+Helvetica-Oblique*1 [8.9664 0 0 -8.9664 0 0 ]msf
163.624 84.6 mo
(Chapter3.InterpolationandExtrapolation)
[6.4736 4.98532 4.98532 4.98531 2.49266 4.98532 5.14575 4.98532 14.8528 2.49266 4.98532 2.49265 
4.98532 3.22604 4.98532 4.98532 1.9904 4.98531 2.49268 1.99039 4.98532 7.02518 4.98532 4.98532 
7.26547 5.98053 4.48318 2.49265 2.8656 4.98532 4.98532 4.98532 1.99039 4.98535 2.49261 1.99042 
4.98532 0 ]xsh
72 88.92 mo
406.8 88.92 li
406.8 88.44 li
72 88.44 li
cp
f
%%IncludeResource: font Helvetica
/ARMEIQ+Helvetica /Helvetica findfont ct_VMDictPut
/ARMEIQ+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/period /slash /zero /one /two /three /four /five 
/.notdef /seven /eight /nine /colon 5{/.notdef}rp /at /A 
/B /C /D /E /F /G /H /I 
/J /.notdef /L /M /N /O /P /.notdef 
/R /S /T /U /V 2{/.notdef}rp /Y 7{/.notdef}rp 
/a /b /c /d /e /f /g /h 
/i /.notdef /k /l /m /n /o /p 
/.notdef /r /s /t /u /v /w /.notdef 
/y /z 54{/.notdef}rp /endash 78{/.notdef}rp]
ARMEIQ+Helvetica nf
ARMEIQ+Helvetica*1 [0 7 7 0 0 0 ]msf
466 178.92 mo
(Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING \(ISBN 0-521-43108-5\))
[4.66895 3.89203 5.83093 3.89197 1.55389 3.89203 1.94598 3.89203 3.89197 3.89197 3.89203 1.94598 
1.94604 2.33093 3.89197 5.83093 1.94604 5.05389 5.05389 5.83093 4.66895 5.05389 1.94598 5.05389 
4.66895 3.89203 1.94598 5.05389 4.66895 5.05389 1.94598 4.66895 4.66895 4.66895 1.94601 1.94601 
5.05389 1.94598 5.05389 1.94598 1.94601 4.27695 5.05389 4.66895 1.94598 4.66895 5.05389 4.27698 
1.94598 5.44598 4.27698 1.94598 4.66895 5.05389 1.94598 4.66895 5.05389 4.27698 1.94598 4.27695 
1.94601 5.05389 1.94598 5.05389 5.44598 5.83096 4.66895 5.05389 4.27695 1.94598 5.05389 5.44601 
1.94601 2.33093 1.94598 4.66895 4.66895 5.05389 1.94601 3.892 2.33093 3.89203 3.89197 3.89203 
2.33093 3.892 3.892 3.89197 3.89203 3.89197 2.33099 3.89197 0 ]ysh
458 178.92 mo
(Copyright \(C\) 1988-1992 by Cambridge University Press.Programs Copyright \(C\) 1988-1992 by Numerical Recipes Software. )
[5.05389 3.89197 3.89203 3.5 2.33093 1.55389 3.89203 3.89197 1.94598 1.94604 2.33093 5.05389 
2.33093 1.94598 3.89203 3.89203 3.89197 3.89197 2.33099 3.89197 3.89203 3.89197 3.89203 1.94598 
3.89197 3.5 1.94604 5.05389 3.89197 5.83096 3.892 2.33093 1.55389 3.89203 3.89197 3.89203 
1.94598 5.05389 3.892 1.55389 3.5 3.892 2.33093 3.5 1.55389 1.94601 3.5 1.94601 
4.66895 2.33093 3.892 3.5 3.5 3.69601 4.66895 2.33093 3.892 3.892 2.33093 3.89203 
5.83093 3.5 1.94598 5.05389 3.89203 3.89197 3.5 2.33096 1.55389 3.892 3.892 1.94601 
1.94598 2.33093 5.05389 2.33096 1.94601 3.89197 3.89203 3.89197 3.89203 2.33093 3.892 3.892 
3.892 3.892 1.94598 3.89203 3.5 1.94598 5.05389 3.892 5.83096 3.89197 2.33096 1.55389 
3.5 3.892 1.55389 1.94598 5.05389 3.89203 3.5 1.55389 3.89197 3.89203 3.5 1.94598 
4.66895 3.89197 1.94604 1.94598 5.05389 3.89197 2.33099 3.89197 1.94598 0 ]ysh
449.999 178.92 mo
(Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copyin)
[4.66895 3.89203 2.33093 5.83093 1.55389 3.5 3.5 1.55389 3.89197 3.89203 1.94598 1.55389 
3.5 1.94598 3.89203 2.33093 3.89203 3.89197 1.94604 3.89197 3.89197 1.94604 1.94598 3.89203 
2.33093 1.94598 1.55389 3.89197 1.94604 3.89197 2.33093 3.89203 3.89203 1.94598 1.94598 3.892 
3.5 3.892 2.33093 3.5 1.94601 1.94601 3.89197 1.94601 5.83096 3.89197 3.5 3.89203 
1.94598 3.892 3.892 3.892 1.94601 3.89197 3.89203 3.89197 3.89203 2.33093 1.94598 3.5 
3.89203 3.89197 3.5 1.94601 1.94601 3.89197 2.33096 1.94601 1.94598 3.892 3.892 1.55389 
2.33093 1.94601 3.892 5.05389 3.892 1.94601 3.89197 3.89203 2.33093 3.5 3.892 3.892 
3.892 1.55389 1.94601 3.89197 3.5 3.89203 1.94598 1.94598 4.27698 3.89197 2.33096 1.94601 
3.89197 3.89203 2.33093 1.94598 2.33096 3.892 3.892 2.33096 3.89197 3.89203 3.89197 3.5 
1.94598 1.55389 3.89203 3.89197 1.94604 1.94598 3.89197 2.33099 1.94598 3.89197 3.89203 3.5 
1.94598 3.5 3.89203 3.89197 3.5 1.55389 0 ]ysh
449.999 573.034 mo
(g of machine-)
[3.89203 1.94598 3.89197 1.94604 1.94598 5.83093 3.89203 3.5 3.89197 1.55389 3.89203 3.89197 
0 ]ysh
441.999 178.92 mo
(readable files \(including this one\) to any servercomputer, is strictly prohibited. To order Numerical Recipes booksor CDROMs, v)
[2.33093 3.89203 3.89197 3.89203 3.89197 3.89203 1.55389 3.89197 1.94598 1.94604 1.55389 1.55389 
3.89197 3.5 1.94604 2.33093 1.55389 3.89197 3.5 1.55389 3.89203 3.89197 1.55389 3.89203 
3.89197 1.94598 1.94604 3.89197 1.55389 3.5 1.94598 3.89203 3.89203 3.89197 2.33093 1.94601 
1.94601 3.89197 1.94601 3.892 3.892 3.5 1.94601 3.5 3.89197 2.33096 3.5 3.892 
4.08093 3.5 3.89203 5.83093 3.892 3.892 1.94598 3.89203 2.33093 1.94598 1.94601 1.55389 
3.5 1.94601 3.5 1.94598 2.33093 1.55389 3.5 1.94601 1.55389 3.5 1.94601 3.89197 
2.33096 3.892 3.892 1.55389 3.892 1.55389 1.94598 3.89203 3.89197 1.94601 1.94601 4.27692 
3.89203 1.94598 3.892 2.33096 3.89197 3.89203 2.33093 1.94598 5.05389 3.89203 5.83093 3.892 
2.33096 1.55389 3.5 3.89197 1.55389 1.94601 5.05389 3.892 3.5 1.55389 3.892 3.892 
3.5 1.94598 3.89203 3.89197 3.89203 3.5 5.25 3.89197 2.33093 1.94604 5.05389 5.05389 
5.05389 5.44598 5.83093 3.5 1.94598 1.94604 0 ]ysh
441.999 576.87 mo
(isit website)
[1.55389 3.5 1.55389 1.94598 1.94604 5.05389 3.89197 3.89203 3.5 1.55389 1.94598 0 
]ysh
433.999 178.92 mo
(http://www.nr.com or call 1-800-872-7423 \(North America only\),or send email to directcustserv@cambridge.org \(outside North Amer)
[3.89203 1.94598 1.94598 3.89197 1.94604 1.94598 1.94598 5.05389 5.05389 5.05389 1.94598 3.89203 
2.33093 1.94598 3.5 3.89203 5.83093 1.94598 3.89203 2.33093 1.94598 3.5 3.89203 1.55389 
1.55389 1.94598 3.89203 2.33093 3.89203 3.89197 3.89197 2.33099 3.89197 3.89203 3.89197 2.33096 
3.892 3.892 3.892 3.892 1.94601 2.33093 5.05389 3.892 2.33096 1.94598 3.892 1.94601 
4.66895 5.83093 3.892 2.33096 1.55389 3.5 3.89197 1.94601 3.892 3.892 1.55389 3.5 
2.33096 3.69598 3.892 2.33096 1.94598 3.5 3.892 3.892 3.892 1.94601 3.89197 5.83096 
3.892 1.55389 1.55389 1.94598 1.94601 3.892 1.94598 3.89203 1.55389 2.33093 3.892 3.5 
1.94601 3.5 3.89197 3.5 1.94601 3.5 3.892 2.33093 3.5 7.10501 3.5 3.892 
5.83093 3.89203 2.33093 1.55389 3.892 3.892 3.892 1.94601 3.89197 2.33093 3.89203 1.94598 
2.33093 3.89203 3.89197 1.94604 3.5 1.55389 3.89197 3.89203 1.94598 5.05389 3.89197 2.33099 
1.94598 3.89197 1.94604 4.66895 5.83093 3.89197 0 ]ysh
433.999 588.455 mo
(ica\).)
[1.55389 3.5 3.89203 2.33093 0 ]ysh
%ADOBeginSubsetFont: HEJAAA+CMTT8 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /HEJAAA+CMTT8 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMTT8) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 34 /quotedbl put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 54 /six put
dup 57 /nine put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 66 /B put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 123 /braceleft put
dup 125 /braceright put
def
/FontBBox {-5 -232 545 699} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-10 -0 611 621 431 439] def
/OtherBlues [-228 -222] def
/BlueScale 0.04796 def
/StdHW [66] def
/StdVW [76] def
/StemSnapH [66] def
/StemSnapV [76] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
50 dict dup begin
/quotedbl <1C60D8A8C9B7883C3B43F08459AB97254BC337220A14C2014EEF2
52E1C8A10EB47ACB609061CCD43968C62B72FFBA2C9B00EBD430C76C8B660510
3CD896F9CBB74508DD47685D0CD778AE8C0E87984693BD9539D0F9B0ED6F7BAA
365B2> |-
/parenleft <1C60D8A8C9B7883CF464839EB6B239ED34DD418F4ED0AF7EA422
FC3C6BD7C1B9E173AF8B5BCC28C5CB81F9196D2AD1C32793B0AF5CA66A9E7EFF
3859F2E2087B497AE4C260CFF49E23D28981E45F47C3EA4A16747B95ACBE> |-
/parenright <1C60D8A8C9B7883CF464839EB6B239EDDA334E31DE8AA5AB2EB
6CB7D8C0C56EB81E0625A49A6A93F7A291D9628B42FAF1F0784ABA589B580291
CB9F55D2D8130F5B4EF0FC05173E85D3745B44F55258C525E109A37325D3563> |-
/asterisk <1C60D8A8C9B7883C29B4926474EA12156D8DAE08A133F4EE2C8D5
36C77C7B20F8E6F218ECA6AD4A062649BA1219CB62A50A4ABF117C498067C924
034079DE22B6D6263D8AF5A19F3EA2105B29B51E00AC6DDE1BCE466E5B208DE3
35F4A71D33FCAAEBD2CC600EE111D3D282A34EB2BABF61CC134FCC3240032C61
614242B887F34A79043CB7C8086987F1A1F183552C5D490EA7AFE161D08806F1
73DA36BF0BD9290B77420569447900D53B57F69DCC5717D56> |-
/plus <1C60D8A8C9B7883C15534D4E2BF3167CB61B4809C27DDC21EFB21FA09
72DABB5AA433141802AA985D4B4867AAD091C4467D6F51D68DFE5C69A80C8499
A0497EBA63AD9CF91502A46DAAEADF23CC528CD71DB0DB3D8500392AB73DA> |-
/comma <1C60D8A8C9B7883C3741EA86A23C06E46672DF0D727F341C4FDC7B55
10DA0F848C41FC15917DC25282FE6922A98D871D9DCF3BC18D634ADCBB75D3DC
C8B98738796CFA49F3A2E24C1981> |-
/hyphen <1C60D8A8C9B7883C3B073729B4E389B42E79295C08101196E06B913
67D99537B429ABCD9298C5EB237263DAD5F61> |-
/period <1C60D8A8C9B7883C47B214EA82737CFDD7F7EB939C9BE1AD8C5CB40
08AF9AC1C617255AA4C709BF9409262> |-
/slash <1C60D8A8C9B7883CF464839EB6B239E2F62F503DCC481C5D4FD2A50A
8EDD7D452E18D4D11534010718B08B9B36121CA81F082388AF504DBF3854EC0A
6653761542> |-
/zero <1C60D8A8C9B7883C4DD6B519314A3320BBB907C889B327F809DBA0078
8A87A456BB5C4F1874B6CF757FA285A07142F9E056475CA45FC4554C89CD6E26
34F7A71A0B534AF130B735BD75C2AE93ED4730EBB4AC347EBCBBC24368BA625F
6> |-
/one <1C60D8A8C9B7883C478830D24C3F6416C397CCD7D4C535C8ADC225A18A
A0E8C31FBF4952EEAE0B7353BF0C7A5F54CF70D2FABDCF00BBEFD2F36C366ED0
EB4828666B57F567D0F2A46290DAF721EF3F49F031212DF59D79DFF18EA897FA
BE555CB294> |-
/two <1C60D8A8C9B7883C478830D2B6A4C711815372C818DFBCE56E9F5DC7F7
FE87CF7B102066244349AFAA3B9EC9E0B056E0ED957AC9CF0974265C590741B7
7E523898DEC81B83F227660F216E00E787A531B5BBC681AAF9CAA82AA0ED07BE
FCC328CDBFA6734D97EAE21FC6C82D6A1ED6D2E694EF3A6DA464944993982C8C> |-
/three <1C60D8A8C9B7883C4DD6B5169E537CBA3A5484DDED558C9203AF68BD
45BAC81CC92823F58612D2B07D1DC9D4494911A5F41CE90BDDA9E838B5BF7756
281C2B40462954A34C011D378592F25D50E13E1640B08421C9F29E78A96191F1
CA6902E7241B6DACA1F065142C799D76FE7108FEE17A3BBA154B887BC93C6B9D
C829F71E05AA5DD58AFD68760DB473D349B699AAC1A4E3006FB96F198DF8FC71
34B596A04DA4553AB761B25C49B7E1B64575> |-
/five <1C60D8A8C9B7883C4DD6B516F50E529F8916DA965E32C847149402B1A
70F98627B82690528CE043CD29BF01FEA5908B0DD55E7F69A64EEC6B69860F37
ECBE0641DD7D732AA0384417F0A999D9E0BB497D6CEBDB69B48ED7D48A4BD2A7
DB869199346ACAB23288EE33ADBA3833B6727C889A63E46A07CEAAD1D863C6DB
27F2E3DD519646BA54B6D55> |-
/six <1C60D8A8C9B7883C4DD6B516FF1E43ACD13BB4138BC64C553BC47D501C
F0DC41B7869C489B0BEC473F9EFEF225023C97BBCA59C44117D1D3AB5794CEF9
182BE5EE455148DE51ABD4837613E84886B0198C9C5F9C1F080BE23FA15B14F3
160DECAF3C08E559AEF95451569FC2181D30C3362A6442176E23C9706FB5A4F7
91A78663D4C8F773314C7097FFD29E656B7958DEC7558F> |-
/nine <1C60D8A8C9B7883C4DD6B5164ED7AD92D5C825B551B0F596C22F2FFFF
49425DC47B5B0C0715C728080790DFA1669DF7B058DF6520E3E97E37F7461F97
B75F6B11B80F4F55E711A7609D21628EF3B5D7E4ABB93E9E15EAD9738BBC2AA7
FA32705342695A59DF48BE97764DC827A123667D17BA9DF9617EAB4C682C23EC
B6DA2F2C6377B98EC84E6C3ACE533DCB6D7850CB0C6B2> |-
/semicolon <1C60D8A8C9B7883C3741EA86A23C06E46694648BEB38F12DB851
1E989C476DD34C7F2FAC7A8C3AB360619128D3BAB007AB1DE3BB50438742965D
762EEC3CEF8FAD84F898EA39546B9A9CF152A5D505EDA014AFBFA2C726CE5C01
27DDA35AC2F589208109> |-
/less <1C60D8A8C9B7883C7251C6DC5086A537AC6C62579C99271F2D132E6F8
FAF6DD1331D5E5E1B8B80B9BFC0FE18CC6E440FFFCA768C00370ECA0600DD0AA
C68C5B7D6C8F5933AB10511CBF0489FD61FD33A6A1DC5CF24351654071D7D5A8
9C2E3B35ACEEECB> |-
/equal <1C60D8A8C9B7883C3BCB227077E73D8CFA35921F3AD54BD0531B2D23
CB7347759AB098CC24D56DAE17C1B3A3854AE08DBFF23830D3A9ABACA019CB26
2AC88B0C0BDE284A0013AEC872120E09739399> |-
/greater <1C60D8A8C9B7883C7251C6DC5086A537AC6C625823805853B44EA8
5ABADBF9E127ECCDEE0D5F4A09D32E931FC03AAB89DC948DE1CE0BDAA68239C0
CBF4CC1B118641EAB16ACFF4691EF007805C7A7E87E81F1B5124F55C3B7260C4
5D31> |-
/B <1C60D8A8C9B7883C478830DD566FBFEF4A96AE3F1B042D27748941F7A984
F975A55342F3A3BBAD01E58914A4131F6E7201B15846C85606DC9EEA2E4FAF0F
E74DF7C58B75B9410862A07F6161488B9641227356046489AA2D7A231BF66D49
72F26E8080FFA50D2ECDFCA4E1224286C13947899E1205256B441341C6EB8C21
0491C0AEA3> |-
/bracketleft <1C60D8A8C9B7883CF40923E2D1CA298F26E232930E97D71BB9
65A65A57E9B0612C5EA0601FC41093D062AD30C2B1BCBE71C8D4378D35FEA2C6
9EB2122ACDC2AF92308DCD74E69E> |-
/bracketright <1C60D8A8C9B7883CF40923E2D1CA298F36CB4F4E7F1E1E7C8
8CCEBFFF43BE5EFBF219FA0040B1AD8E286282DF79DDEFA6C0F870B6F642B799
B06AE2AE8579BBE97C70E28C9725A> |-
/underscore <1C60D8A8C9B7883CE405408CE20AF5674A40E16FD2BAC61DD83
6D5097FFCD05C1D9B0912BAC5EFBD247C5E7A> |-
/a <1C60D8A8C9B7883C478830DD8A5BFB452538458154F4CE3B20AD66AD581A
DF189C4AA24F8CBBC0F70339A3AC822FEE3457B7E5F60BEFA6CFDF765B8A3D2F
273CC300F8F8736B1B2290BF6D64B521AB42268778DDD081E97AF1F166EABEF5
8CAACAFD7314321FAABBFB171C6401E8BC138F90EAB8EAC011C39D38EC2210C7
CD76FC3051095C80212DE7950D4EEF9B6992774477395A54> |-
/b <1C60D8A8C9B7883C4A7D20AF0DD3ED7104BEE7B1BB4EB59C17857FE3B8BD
15CD5987C237AAE7CCE6905F305ECA8ACEA7903D72EF9306DEBA552EAFC1A9A3
E590A6401A923BA4FB1A004FD7FE95F33781B31AE3F09381E446EB61D8B80403
1AAF8CA49F69BBAAB3A724024688BAF8062BBF82700B37> |-
/c <1C60D8A8C9B7883C4A7D20AF02F248405BB0FEB5BEB4424866E4AA8F7D1C
96E7B766FF4C7548AFD9BCEED1405BE68EEDAC184D6FA024DEEB00C6D3EAA865
A5DA65F020516612C5C28F3550F2FA31F4BFD863231970126034040555433EAD
DB9C42D590ADC0EE374998B8B8B5AB6D> |-
/d <1C60D8A8C9B7883C4A7D20AF0DD3ED7104BEE7F6D84DAE7EA020CA7AFA2C
BFE4AC36897205198721830A8AB1EAC205FA933B72BED81C5D5CF5D35E96AF4F
501D61996653C99302F0913D5B28065C17C79D42CBA02B6F956C63467FC09B35
4AB3AC510D8FB3DF115C3D51800C44B77444BCC0972329CE5F0067004D23925D
DC> |-
/e <1C60D8A8C9B7883C4A7D20A0A2FB7F2250F0DBD938F9100315996944235D
A4D35522DC5271E0997530F8F11CDC910ECE5428D0632B4858C70F59802E7E55
F069BB51A48FA483655B9CF2246FBCE33DD8D793CBF78B460B1AEB2359A0A7ED
9C180739C2D45FBC5051E3D6690D1A> |-
/f <1C60D8A8C9B7883C478830D208D625ED20D4215FF985DD676DC5BC2A1A63
501158AACA945017F911C2111684137446B54CAB850A66781409BDC92EC035F1
E33BF970187700C459FBA93F0ADCB5EF454EEE57A28A9A4D4EBD4C39A8680068
4B0229BE71DE1E6C7D6B07A91E1667941CAF1694F3A42E5B99E532> |-
/g <1C60D8A8C9B7883C3726489C458D0799001161A278FAE7520D22FEC683F8
1B67E72D39B273A40C0DF57A109D016FA40F92646BBA7EAC1A83D2AD5B1957E8
2D91509F7E20E4E5CD52564A699A8F1AE342E1036F7B7ED905A8B77C7B9BE9BA
5513F882542C9A2B8B4042D854B2BCD70634E9D2A7DD36431BEFB6F1B0C1E019
2CA38C620F1C27F012DED5E10248E9C34C89FB8F0361A0E9D37E40F6C7C3CEE2
3C7F07A49FDD7C7AB53D1774431D880563394764824E39D44C3D9DCEADC2EC88
9DC120D5A6EDD38A6B818C249CD53AC9A3DA07676E77A1E4DC5CEC5A8E82F61B
A4> |-
/h <1C60D8A8C9B7883C478830D20F0D4843C402F45DB9BECD77059F06484889
F902119F32FCEB497A95B198E71C1F94089E3E94F29A3051C3B126B0A4114AD7
2356E65E7E3BE096156B77074D24131680E327D8EFB42A9BD03329AA74062396
1BC0BFB051E3368135D06C4E611FAA43DEB16EA7B458F594D0E6E59189C74F6D
5C737F6DEBD2DA677B09C5FE4233> |-
/i <1C60D8A8C9B7883C478830D208D625ED16FFC4A91D386BCAC0EAE25622BB
1E44E76B43D5E9C02FB35DD2E716D71DB34EC5EF64E6676204311902DF93FA14
06434F9C55AC89918A3CB5264191C5A857EEB6C55C2A58756AE17BE12F9B5C9C
7E384136ACA12CCE72424CD36982DD> |-
/k <1C60D8A8C9B7883C478830D208D625ED2FFC6C26E637A967509A0F27CA34
14B8E2A1603C3EFCA59AA5338F2DC21F760119D5FE24E6D34D5933FDF4A90D1B
BB633CC4C0B996410EBB0EC8BA881CFB9B8B86A75809C0459811ADF214D9E930
548E744C4DD983CF0C49C52BD9480D36BA4A16E43C130EED5BC0DF38948DBC84
CAC1C98D86F398F2CA631E26225D67C73F81FB84EF10AC71D4544F8CC57E28> |-
/l <1C60D8A8C9B7883C478830D2BCF2481623045F78FD9BBADFFA8FB26EC510
AF3C97F27FDF441DB62E62A99256AEE465959742BAD1238681D42B1BB9244EBE
B8EFC1F9DC1EEC08C5424940618DBDED6D> |-
/n <1C60D8A8C9B7883C478830D20F0D48516C48529F19D4390ACA3CB636CB31
9811B28F3CFCE38D45413DC6FB2F60CD27C9B65282627A370A88296FC733A876
DAAB2711060AC3E24A4B2BDE2B5A6B0094E1A0426DD1D62A3B7328123FBD866F
AEDB59AD4AB57FC303BB5EA4EEDB39B4BA18C7408D49E86AF1FF5B06EA08EDF6
F4EE2B0915E7E1> |-
/o <1C60D8A8C9B7883C4A7D20AF02F248519684D53CFC242E61C1496541B9CE
EA6A7897D7666699B03F21228EC7BA0848E96D7EFB315379B280A7E230CB4070
45785C70CEEF55D239B1E02EDF4333F6E8CF5B72DA> |-
/p <1C60D8A8C9B7883C372C962195C172E9A7073D5EA7207CF57255F588225F
181A2F21C7DC257565C49ABCB1D71D916F82061E92250E16E91587D2BB8E5A49
52FDAE41DA886E334F311326412570FFC4E4A6BFF2638A7135609DDAF8B41645
285CB38B5815766F8C000EF0144C3C41F3480EDE10DBB81132F876A9FA0825ED
24CD75E0005C3EBA4572> |-
/q <1C60D8A8C9B7883C372C962195C172E9A0E870514ED7CFEED59E769C962F
192DCA8F21582637167DCF03CF834DA8FDF6CB7C861CB78E1153A5C6931A9425
DDB969740D6024CDB595A1AA848939870927CDFB8EAF2F7057C66DCD6DA50F2C
E132BCFB6B383E69D2FEECD008919D155C6818700357F075125AA6E882F410D5> |-
/r <1C60D8A8C9B7883C478830D208D625E29143C2A39959DC29D475238ADF68
B1BD7C6C492E6716EEF7B6D4B965C1D1412053774CE4723D464CA28C476F182C
0703D959FCC8A832A73DD52954B8CD7FD30FA15290EF16DA5553B3730CC63414
3C74987A4EA08B1BFD1FE46C993C692D5AA5> |-
/s <1C60D8A8C9B7883C4A7D20AF02F24847FCBC8320F552027E1BBA91727306
4B448C1E219D6771761953C699F55B69457599199C875CDE2C30B3404A099D9B
D065A195F90F73C05A7D7F57AAC3D9F6EBB22D3F04B13B217ECCDF33DA1500F9
04D56D439E52DC2B512A70F982EC661140B0BDF112DF780936562D79444CE561
55462716CFDD2033F98AFA3CF96979279CA5205E169D73FDE5BCE3AEADA13903
F78E1FE55129> |-
/t <1C60D8A8C9B7883C4A7D20AF0A7E92D5613B65AFEF55536C0C6DE4AFE20A
10C6970CE6FF2962A760B86C1D6370051A1B73D246B7D29444833B836A1EF0D8
3987BF5FB340E234471E761030FA005E3AF2243B9712C481663C21DCF2CA6EC2
311095E46BBCC49268EA2E747C71F6FBE1B8091D703C> |-
/u <1C60D8A8C9B7883C4A7D20AF0A7E92C75650A881710C1F05569716C5E79C
8B5E9DB2C0282130B445F6B57C4C1EF5C3C4088CE7D59E0BC4663C84334AE7BA
E2D2B560AE21587354649ED8CFFE69A3646B532DDE50AE6692B8BC6E873FA805
5C1CC683BFA7767A858597E206274A2B4A78380B44A399BD22> |-
/v <1C60D8A8C9B7883C4A103CD4EAE01FD804A0FC808A4B05A1CCDBF8105C59
77886FA30B95DE52399F2602278CEFF27631D0210BE832CAB5740D0194255CEA
F6224C1CAA5232C6677DF2C9430039A8A9338092F66BD1F888FCB191E106F666
25432E847076772AEC8CF9B58C> |-
/w <1C60D8A8C9B7883C4A103CD4EAE01FE7EC75D3177B2C2FBC05FF760BEA5A
516239287D9A5EA8F87A7FC84516447DBC3D0998D25C9364221E071483844478
87BF80207CF003A42FD0B1A924B527934EC9A8EE1928E70B00D8F0E73DD63DB0
68236D3331866576B74AF1B4E40142C3F97FE564FDDF189DA62E475BAF08A81A
3C373E08FA7C6A6125CBCEA364E204184F602710219B3E1C3A1F10090B429172
97A1CD550FE6> |-
/x <1C60D8A8C9B7883C478830D208D625E202B27052B97E3F39D7983FD856E0
CF68EA6192CFECF20342512BDDE3A5FC2F89457723FD72613413C44E5760B6CD
C10601A970B37F52D6CB67913ABFBB4678B04D3E8EA46D39AAE09138EA9A42AD
31262C87F4CC3D48A7F703E63E8FC29551E84A105DF870666DDEEED2BCFAA23C
C6302642588B93056B22EA50411A72A83D6B523AC0E644524B> |-
/y <1C60D8A8C9B7883C37293D8C0E2267BFA553152603B4DA54F5A894399784
B91A8E06CBE6DEC3AC8D9C0DD0886321036E94AA26CC3354B4FB14F55996EB3C
DA19C616BF6CF7B5340E0B8A26B1EA35B1013F27D08C125A2FD2BD435AEB2350
A62EA560E2204267765BEA3EF26688C7F188E3A4BADE608BDE0B997F92B9D142
A1CD6B567FA291FD21C4DDB6E0833F54995A994EF141B01D311A69611AF5C129
1D597A7DD1368348EBC7835E7C649584CA0904FE7D9BE06EA2F713B459AB80C2
987C> |-
/braceleft <1C60D8A8C9B7883CF40923EC4D515696A78DB3358C4D5997030B
8784D1B42A2C941E72C3EAD6F0A6E60F1A9AD784AEFB13307FBA8734114EA5FE
5617F897EB502676B0A6A3346B38F7ED1E4E2FE91AA124DE5AEA9AFEA04E838A
29A23E2A1FAE5701E96D4BCB28D30F50E0F503635AA6439AC595A35AA300C3F2
8C5A89BA5F09B0B696EBCAE7F872014770FE499B0E0FACA29B8C71> |-
/braceright <1C60D8A8C9B7883CF40923EC4D515696A78DB3358C4D5997030
BBB6A4B603C5F7B9F9E746B3BF688EDCBBF64C15A1F39A369CEAFC5A5A994233
FF2E35FD42225469B896E7ABCA9A54E35BA5CDB94DA90B2BEDBCE53EDA030736
B1B3C11072F61A1086D73AFCA4AA7B919739AE6BB2E83F4DA91B6EC72B536635
60608DADDFE3ECC775F8CCAF26E6712FC4B9FA9208610E775EBCBB333F7888D2
DAB> |-
/.notdef <1C60D8A8C9B7883CC2> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEIR+CMTT8 /HEJAAA+CMTT8 findfont ct_VMDictPut
/ARMEIR+CMTT8*1 
[34{/.notdef}rp /quotedbl 5{/.notdef}rp /parenleft /parenright /asterisk /plus /comma 
/hyphen /period /slash /zero /one /two /three /.notdef 
/five /six 2{/.notdef}rp /nine /.notdef /semicolon /less /equal 
/greater 3{/.notdef}rp /B 24{/.notdef}rp /bracketleft /.notdef /bracketright /.notdef 
/underscore /.notdef /a /b /c /d /e /f 
/g /h /i /.notdef /k /l /.notdef /n 
/o /p /q /r /s /t /u /v 
/w /x /y /.notdef /braceleft /.notdef /braceright 130{/.notdef}rp]
ARMEIR+CMTT8 nf
ARMEIR+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
87.96 115.92 mo
(for\(i=2;i<=n-1;i++\){)
[4.1971 4.19711 8.51769 4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.1971 
4.1971 4.1971 4.1971 4.19711 4.19708 4.19711 8.99748 0 ]xsh
%ADOBeginSubsetFont: DLPBAA+CMSS8 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /DLPBAA+CMSS8 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMSS8) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 67 /C put
dup 71 /G put
dup 73 /I put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 170 /quotedblleft put
dup 174 /fi put
dup 186 /quotedblright put
def
/FontBBox {-65 -250 1062 761} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-21 -0 694 715 444 459 656 677] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [66] def
/StdVW [87] def
/StemSnapH [59 66] def
/StemSnapV [87 101] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
39 dict dup begin
/quoteright <1C60D8A8C9B845C87B30F247CF8B452BDD364A47EB716C07FEC
254A38A764EE2880B04DFF85D2D4D> |-
/parenleft <1C60D8A8C9B71EB594BAA87F31A170DCD8C01DC4C1DC6B3A579B
D13ED727CC56DECBAF15E33A6E27477C93FF4C03B3291F4D57C784E76BB4071F
D8B2EAB665208F68B632064A68F6AAB6A95DF7836EBADA5350746F16939520> |-
/parenright <1C60D8A8C9B71EB594BAA87F31A170DCF0F96CFA5596A2BE43A
EE660373A3045A207CA323990143948C20E0461CB42D1075C8CC4D4EC4D06F7B
CC0CEE5690A22346E82B97B9154B1BBEEA2BA93C11D26F45472E7D573D33B88> |-
/comma <1C60D8A8C9B845C878C1CFCCB5F5F9E3A52F2BE8C6E51D4412DCD0D6
EA31615EB5727C1F99B3> |-
/hyphen <1C60D8A8C9B80898F3CBCDD83627D931A2EA01B809A19B5E8B72FFB
32FE0> |-
/period <1C60D8A8C9B845C80860AB44A338CC6083B186B062A47301A0A0> |-
/C <1C60D8A8C9B65A722ADD6F2FE2193BFF994826AD76D7F4990D605C046859
DCD34020539A2ACC2DC8A0872B4F0A2C5AAFC5CBDDC99BF80E82F75ABBC82A6E
76E40FBEB8F353FB36E310033D1C54C2E6FCAC0089FB00B701614FBA> |-
/G <1C60D8A8C9B639EE071BE8242701378AD42DF6804E37D767548B620A2FA5
56F5285103938E8A376D8DCD09E2492320DBFD2AD3E9DE68FDC80ADC9E08C0B9
17BB9743269002633495265FCB95BF2EC601EAE7FE6736AD0D1606021244097B
3D84F65F6026EA2C99013A78E42509> |-
/I <1C60D8A8C9B845C808251600A255C99B753981E42091FC248AE4E0F76F30
6400> |-
/T <1C60D8A8C9B60BC6FA14843A5E7B4F8106FF8EB164A22D0F763873A27898
5BEACD5BA3A81B0C31C87D718ED98197A92DE9AC18ED4C8A7625E52D02D4AF8D> |-
/W <1C60D8A8C9B5ED60CD5E404818F6992F62929015400724930F53E9C37A3A
992DCA27482F05B8D6584089B6276E2A97274AC0AA89086488AD993097F7BF32
DA50B0F56F96A8018A4755E9E51FD19DDFD4F1F9BAE4E45317A8C46216BD6306
DE6D5E5A8D854C3CC338E3907B559BEB77701CC4EF3D32C583C904> |-
/a <1C60D8A8C9B7BDE3EC5076B9DD7E38E64E726A6C54B306A0C490A11BFAA5
A7F2BFE5727664F0EE3908FB9FE3259630AE60DA068A29D724CA5EDADE792224
9BD245A92F2621C6B1F65F693FB98346367FF40A5058BB83441A5B2D0F836DA5
C75B78DE7B95D7D78354EAC9ADFEAE9D23804AB0D195FD1BF3> |-
/b <1C60D8A8C9B7967682E8E54742F49032E80413F610CF78732B372CA38672
C3B9828FD54AC1A5BFA620E912D6B2EFEB4132CFC7F73BD0029ED58ADDD443B2
D87F4E0AB4F2EE5A0DBD5CD0DE2EEB58E0BF59CC7D37181AC388A8C5562B9A6F
FFBB4F925FF769FD4A18632E5A> |-
/c <1C60D8A8C9B74383EFE2AED1D20DB94D25F65EA0DDCFCFB4A826D66997A3
91AF5D7A5B5FBB73D056E81114D01C5FE3ACFCCA4AA70FA75F3348C80CC88517
20B7369EF1022939925699461F8805AE42EB5D6DBB> |-
/d <1C60D8A8C9B7967682E8E54742F49032E80413B97DE6ABD0BEA040F18EB6
B957ED534F93F87C25CCCE606AB15E87D378F5D78382F96D5F45BBC8BAC55E6F
32CE4F2223BBC310FCC7C379D2088E5EF1F1365A41A382DBFE9E946DAC1CFA85
0DB4A35843> |-
/e <1C60D8A8C9B74383EFFF10C87598D4A3D5946A491C4C0AC6E2B8E58E9559
2041F7F708467C72BD9F4C9318DC61A7F3A3A2A776A0B5C761D1F735E0EDD54B
F6FD0F1F356781F961059A6E20FD864DCA47293E8BA42814C097640FDB33F82B
4A97FA9A> |-
/f <1C60D8A8C9B827990E4578150F1625517477194A0A9F58BFB8DD527961FD
8E1E1C8A08A81670231949877B49F410182698C913BBD82FC48DBA8D095B203E
4740906A8EB5346A88FF0C26B91FB52874> |-
/g <1C60D8A8C9B7883C373F644420BDFE6066184AB4968D81C59DD800329B9D
81FBB06ED60AF28107A0DDF501D6F8A72DEB35FABD098C4C6724101AB7C40841
175CD716B26483B36ABE899150213E6E5D57A36A6307F5E38084B6A515D5BDEF
446308AFEEB3DAD1CB1FEB524393850D9F2761D0B9F9524E1192200BEFBFD5FA
D5E9C79EC986E315F412E36F02FA1E3C9BF92DFB5816F700890659AADB7DB279
65D140B5EA2197FE7C9AB634D3C2294EAD45A4B945C45FDB08FBABDCA4080059
3CB1BAE4CAD7BA670521646F11E006C82EDB2374C8B2CD24> |-
/h <1C60D8A8C9B79676885C9E82F970D03A3EA564673B28D25469F15427ABEA
1B44D3CC94AA13907FF2C9D6CD72F75DBBAF5F619F0A97C8B984A88D15812FE2
F3093055E243C78E0BE1F6F5> |-
/i <1C60D8A8C9B86FAE6A72F95D40DFC0014093276B4B8451DBCAF1A4FF5653
63ABB851E8B0984AFAFDEA481FD7589BA4> |-
/k <1C60D8A8C9B7B4A143C5C055846735B33EAD0261D50EEFEF4E127174539A
CF61DEE2D3762369F70592B71D9E681BDBB6972B2BD202BCA14FE6991788> |-
/l <1C60D8A8C9B86FAE6A72F95C980400B16FB0876AC9DC237314DDD8191AED
CEE6> |-
/m <1C60D8A8C9B681FF4AC4A6219D01D0E90BE687ED1286018E853CF99B3B70
A708BD7F59983CE82A3E40C43B3E472041ECF4F68FC049B0CC1A7FA8BBE5D594
86A71601ECA8E8DD72E5678592FAA35762D266F86ED555E960BB3166D69803F2
EEC490553F38C504703C> |-
/n <1C60D8A8C9B79676885C9E82F970D01D47FD1FE922CC158415BE4CC338A7
2202E1ED65025A24B388E99D73616E595F28C4A4014C1C85111B44755B1BCD4E
74ECA524192B0F> |-
/o <1C60D8A8C9B7883C4DCBD75181A7FF6E6971E5C276A30685F0E1C3A50A98
195E99E32A3BD4AC4B6385045A7923253550E4F4C560D3FD17093917A13A3580
186A49C75945BBE1162D2FA0F817EB6A3D2BE8E2DA3B7EC0211E5F> |-
/p <1C60D8A8C9B79676F81A548F2A3AA3F01980623A4E67AC1E039DAFC14730
4927D5B1AA45D7C48455D12B4D6726328822BD905764AE3B9EF2FDFF3CF4D4BB
8801EE59A2A3C7954518978E33AAE49E3BC325D9A7B3BE29C1F3C8B1F496A638
F8DFE0925BA886DCEE> |-
/q <1C60D8A8C9B79676F81A548F2A3AA3F019806275DD4AC867009963F38C76
CAED2AFD9F11208415788A3057D34EF31F16051FB5E093F8DD35C0E971582ECB
A5BBFF053F9184124019F32CD33A50A0C547F76AF50D740667CDF28CDF9E21C0
F0> |-
/r <1C60D8A8C9B801FDB7D99B90CA4C2B0E219FE557019AB7A075EE85AB1DB7
8178C0D4C6BE5A99A3C0709B3986AA8EB9916187BA> |-
/s <1C60D8A8C9B704CCCD10E3D8345FD533ED38163C3E3BB669B7A294C1DBDD
F78275A299FF2227F844370DB83C3EFAAEEDA78F237317918CE17D2489E24998
738E3756354592FE28D229BC7EEAAC44E9AAC80ED39081CF46F30A90D57A1062
439E799BFA68E8398A84FBF51768B0BE7E6AC49320A4AE84C1ABCE09E7D14E86
ED999DE409BA9B> |-
/t <1C60D8A8C9B73B17047A7EDA9F6F31E3EA1A295736984E1D18E34820EAA5
37FC6B9EA6B3F9D0B075F655BF278168F2718223D509FD407F3F41CE16107A08
FC979309226C82AB6E2F17D655FF539CC8CAADF2> |-
/u <1C60D8A8C9B7967682E3DDB03E6BB5EE72A3B68B77ECE4659260E2C49167
AF4E3E6F4BBF0D13961A011158B739C6EF267565215CB4438FC6DD7F94266BB1
0338CC1ADB6E> |-
/v <1C60D8A8C9B751D5746CBC3A5E1D072240F5E641991AFCF9D3C65AAB09E2
76830801ED12889F123B114B28606759705FA786836D971EB1E73F30> |-
/w <1C60D8A8C9B60BC6FA14843A9F920EAF3E3669EDF48260377441EF336A0A
86A1DC9C56363F2494483695FE64D2A3E7B5F17EF614B5CC980F2FD23846C319
F767C5C64233127071C20DEE479871D1CCD256C88EF06507F2F6A0069C253397
22A47165BE54955CB90C0D170C9D48DECC14A54907F7F3E9713878594C1D559B
F1> |-
/x <1C60D8A8C9B751D5746CBC3A5E1D072DA5D647C072A212B3CF777B0629C5
5D17B9CD1ACA595E8299726B9631E867D1A0E597D489343F174F76149C207B49
EE5114> |-
/y <1C60D8A8C9B751D5041C6AD215AEAD58DEF97ED0CE6C9DD04E918FB93DD1
99BDB1C3718B925E2E045F50D56F0A8CD5C93FDCA0C2B58684AF3944E79AEAF6
C2DE5C0F0EED4A01CD978A85DD0734B3A0B132FD63C32844EBF336CFA6135FD6
1F2913> |-
/quotedblleft <1C60D8A8C9B7883C34835648E9C10264DFF1AB51281933C74
1C9EAF6410ED8D71AEFDD83F7AB695C622B138E2BAFD091AC602BAC63C4B574A
352CEC399E8F388EB> |-
/fi <1C60D8A8C9B7E2CE5B6DC6886C8D0AA0C7F0107DA84B899CB7B2A0BB03C
3F577271DA5806DCE492242DA291CCFB505031F9160603B9593E154CBAE90B2C
2B6E2360844370A813A2E408FFAFC8259348736BBBBA7E3330707177CE868256
03F2A56539E1629724D42C15FC9> |-
/quotedblright <1C60D8A8C9B7883C34831343669E15A63AC20DB6F96460B9
245491EB1E0ED163468A8926D5333C5844BFB402AB156282BD6E61D023BEE2B1
9F594B97C80C03F9> |-
/.notdef <1C60D8A8C9B808980A> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEIS+CMSS8 /DLPBAA+CMSS8 findfont ct_VMDictPut
/ARMEIS+CMSS8*1 
[39{/.notdef}rp /quoteright /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period 
20{/.notdef}rp /C 3{/.notdef}rp /G /.notdef /I 10{/.notdef}rp /T 
2{/.notdef}rp /W 9{/.notdef}rp /a /b /c /d /e 
/f /g /h /i /.notdef /k /l /m 
/n /o /p /q /r /s /t /u 
/v /w /x /y 48{/.notdef}rp /quotedblleft 3{/.notdef}rp /fi 
11{/.notdef}rp /quotedblright 69{/.notdef}rp]
ARMEIS+CMSS8 nf
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
221.145 115.92 mo
(Thisisthedecompositionloopofthetridiagonalal-)
[5.76157 4.32216 2.03082 5.99669 2.03082 5.99669 3.00237 4.32214 6.47731 4.32214 3.71725 3.71725 
4.19711 6.74106 4.56204 4.19711 3.23743 2.03082 3.00235 2.03082 4.19711 7.44244 2.03561 4.43701 
4.19708 7.08221 4.19708 5.40213 3.00235 4.32214 6.59766 3.00238 2.88043 2.03082 4.32214 2.03082 
4.0791 4.19708 4.19708 4.32214 4.07907 4.91602 4.07907 2.03082 0 ]xsh
278.759 124.92 mo
(gorithm.)
[4.20428 3.95718 2.86533 2.03558 3.03265 4.34766 6.69882 0 ]xsh
ARMEIR+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
312.594 124.92 mo
(y2)
[4.19711 0 ]xsh
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
323.512 124.92 mo
(and)
[4.07587 4.32214 0 ]xsh
ARMEIR+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
338.75 124.92 mo
(u)sh
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
345.35 124.92 mo
(areusedfortem-)
[3.83597 2.88043 6.23743 4.32214 3.22787 3.74594 6.84229 2.64209 3.95718 5.4006 3.00235 3.71725 
6.71078 0 ]xsh
278.759 133.8 mo
(porarystorageofthedecomposed)
[4.56204 3.95721 2.86292 3.83597 2.86292 8.40292 3.2135 3.03027 3.95718 2.88046 4.07587 4.19711 
8.27774 4.19708 6.96185 3.00235 4.34528 8.27774 4.34528 3.7316 3.7316 4.20187 6.69644 4.56204 
4.20187 3.21353 3.7316 0 ]xsh
278.759 142.8 mo
(factors.)
[2.64206 4.07587 3.71725 3.00235 3.95721 2.88043 3.23746 0 ]xsh
ARMEIR+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
103.919 124.92 mo
(sig=\(x[i]-x[i-1]\)/\(x[i+1]-x[i-1]\);)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 4.1971 
4.1971 4.1971 4.19711 4.19708 4.19711 4.1971 4.1971 4.1971 4.1971 4.1971 4.1971 4.31746 
4.1971 4.1971 4.1971 4.31744 4.19711 4.1971 4.31744 4.1971 4.19711 0 ]xsh
103.919 133.8 mo
(p=sig*y2[i-1]+2.0;)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 4.1971 
4.1971 4.1971 4.19711 4.19708 4.19711 0 ]xsh
103.919 142.8 mo
(y2[i]=\(sig-1.0\)/p;)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 4.1971 
4.1971 4.1971 4.19711 4.19708 4.19711 0 ]xsh
103.919 151.8 mo
(u[i]=\(y[i+1]-y[i]\)/\(x[i+1]-x[i]\)-\(y[i]-y[i-1]\)/\(x[i]-x[i-1]\);)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 4.1971 
4.1971 4.1971 4.19711 4.19708 4.19711 4.1971 4.1971 4.1971 4.1971 4.1971 4.1971 4.31746 
4.1971 4.1971 4.1971 4.31744 4.19711 4.1971 4.31744 9.11705 8.5177 4.19708 4.19711 4.19711 
4.19708 4.19708 4.19711 4.19711 4.19708 4.19711 4.19711 4.19708 4.19708 4.19711 4.19711 4.19708 
4.19708 4.19711 4.19711 4.19708 4.19711 4.19711 4.19708 4.19708 4.19711 4.31747 4.19708 4.19711 
0 ]xsh
103.919 160.68 mo
(u[i]=\(6.0*u[i]/\(x[i+1]-x[i-1]\)-sig*u[i-1]\)/p;)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 4.1971 
4.1971 4.1971 4.19711 4.19708 4.19711 4.1971 4.1971 4.1971 4.1971 4.1971 4.1971 4.31746 
4.1971 4.1971 4.1971 4.31744 4.19711 4.1971 4.31744 4.1971 4.19711 4.1971 4.31744 4.1971 
4.19711 4.19708 4.31744 4.19711 4.19711 4.31744 4.19708 4.19711 0 ]xsh
87.9592 169.68 mo
(})sh
87.9592 178.68 mo
(if\(ypn>0.99e30\))
[4.1971 8.51769 4.19711 4.1971 4.19711 8.51769 8.51768 4.19711 4.19708 4.19711 4.1971 4.1971 
4.1971 4.1971 0 ]xsh
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
221.148 178.68 mo
(Theupperboundaryconditionisseteithertobe)
[5.73766 4.32693 8.03786 4.32693 4.32693 4.56204 3.71329 7.32059 4.56204 4.19711 4.32693 4.32693 
4.32693 3.83597 2.88043 8.40292 3.71329 4.18353 4.32693 4.32693 2.03564 3.0119 2.03561 4.18356 
8.7623 2.03561 7.43689 3.23743 3.71725 7.32217 3.71722 2.03561 3.00235 4.32697 3.71326 7.32059 
3.00235 8.5177 4.56207 0 ]xsh
235.559 187.679 mo
(\252natural\272)
[4.1971 4.32216 4.07825 3.00237 4.32216 2.88043 4.07825 2.03006 0 ]xsh
ARMEIR+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
103.914 187.679 mo
(qn=un=0.0;)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.1971 0 ]xsh
87.9592 196.56 mo
(else{)
[4.1971 4.19711 4.1971 8.51769 0 ]xsh
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
221.155 196.56 mo
(orelsetohaveaspeci\256ed\256rstderivative.)
[3.9572 5.88039 3.72523 2.03561 3.20715 6.71719 3.02388 7.31738 4.3389 4.07587 3.96277 6.59766 
7.07581 3.23746 4.56204 3.72525 3.72522 2.03561 4.55569 3.71725 7.44247 4.55569 2.85654 3.20715 
6.00232 4.32214 3.72522 2.85654 2.03561 3.96277 4.07587 3.00238 2.03558 3.9628 3.72522 0 
]xsh
ARMEIR+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
103.919 205.56 mo
(qn=0.5;)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 0 ]xsh
103.919 214.559 mo
(un=\(3.0/\(x[n]-x[n-1]\)\)*\(ypn-\(y[n]-y[n-1]\)/\(x[n]-x[n-1]\)\);)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 4.1971 
4.1971 4.19711 4.19708 4.19711 4.19708 4.19711 4.1971 4.1971 4.1971 4.1971 4.19711 4.31744 
4.1971 4.1971 4.1971 4.31746 4.19708 4.19711 4.31744 4.1971 4.19711 4.1971 4.31744 4.1971 
4.1971 4.19711 4.31744 4.19708 4.19711 4.31747 4.19708 4.19708 4.19711 4.31744 4.19711 4.19708 
4.31744 4.19711 4.19711 4.19708 4.31744 4.19711 4.19711 4.31744 0 ]xsh
87.9592 223.559 mo
(})sh
87.9592 232.44 mo
(y2[n]=\(un-qn*u[n-1]\)/\(qn*y2[n-1]+1.0\);)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 
4.1971 4.1971 4.19711 4.19708 4.19711 4.1971 4.1971 4.1971 4.1971 4.1971 4.1971 4.31746 
4.1971 4.1971 4.31746 4.19708 4.19711 4.1971 4.31744 4.1971 4.19711 4.31744 4.1971 4.1971 
4.1971 0 ]xsh
87.9592 241.439 mo
(for\(k=n-1;k>=1;k--\))
[4.1971 4.19711 8.51769 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 4.1971 
4.19711 4.1971 4.1971 4.1971 4.1971 4.1971 0 ]xsh
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
221.145 241.439 mo
(Thisisthebacksubstitutionloopofthetridiagonal)
[5.73766 4.32693 2.03561 6.59683 2.03561 6.59683 3.01192 4.32693 7.19781 4.32214 4.07587 3.71725 
4.08783 3.23743 4.32697 4.32693 3.23743 3.01193 2.03561 3.01193 4.3269 3.01193 2.03561 4.18356 
8.2825 2.03561 4.43698 4.18356 7.8027 4.18356 5.8819 3.01193 4.32693 7.31735 3.00238 2.88043 
2.03558 4.32697 2.03558 4.07587 4.18356 4.18356 4.32693 4.07587 0 ]xsh
235.559 250.439 mo
(algorithm.)
[4.0687 2.02046 4.19711 3.9572 2.89717 2.02048 3.00235 4.32217 6.73068 0 ]xsh
ARMEIR+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
103.913 250.439 mo
(y2[k]=y2[k]*y2[k+1]+u[k];)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.19711 4.19708 4.19711 4.1971 
4.1971 4.1971 4.1971 4.1971 4.1971 4.19711 4.19708 4.19711 4.19708 4.19711 4.1971 4.31746 
0 ]xsh
87.9592 259.319 mo
(free_vector\(u,1,n-1\);)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.19711 4.19711 4.19708 4.19711 
4.1971 4.1971 4.1971 4.1971 4.1971 4.1971 4.19711 4.19708 0 ]xsh
71.999 268.319 mo
(})sh
%%IncludeResource: font Times-Roman
/ARMEIO+Times-Roman*1 
[40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef /period 2{/.notdef}rp 
/one 4{/.notdef}rp /six 3{/.notdef}rp /colon 14{/.notdef}rp /I 5{/.notdef}rp 
/O 17{/.notdef}rp /a /b /c /d /e /f 
/g /h /i 2{/.notdef}rp /l /m /n /o 
/p /.notdef /r /s /t /u /v 2{/.notdef}rp 
/y 48{/.notdef}rp /quotedblleft 15{/.notdef}rp /quotedblright 69{/.notdef}rp]
ARMEIO+Times-Roman nf
ARMEIO+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
91.92 296.28 mo
(Itisimportanttounderstandthattheprogram)
[3.31747 6.24953 2.7696 7.35532 2.7696 7.7509 4.9813 4.98129 3.31747 2.76961 4.42325 4.98129 
5.88989 2.76959 8.46124 4.98129 4.98129 4.98131 4.42323 3.31747 3.87538 2.76961 4.42325 4.98129 
8.10159 2.76959 4.98129 4.42325 6.12999 2.76961 4.98129 7.78363 4.98131 3.31747 4.98128 4.98132 
3.31744 4.42328 0 ]xsh
%ADOBeginSubsetFont: IMLBAA+CMTT10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /IMLBAA+CMTT10 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMTT10) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 112 /p put
dup 115 /s put
dup 116 /t put
dup 120 /x put
dup 121 /y put
def
/FontBBox {-4 -235 731 800} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 611 622 431 440] def
/OtherBlues [-229 -222] def
/BlueScale 0.04796 def
/StdHW [61] def
/StdVW [69] def
/StemSnapH [61] def
/StemSnapV [69] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
10 dict dup begin
/e <1C60D8A8C9B78E0597CED296E4DF68F57D691EB40490BC0E3694A5AD16EF
8A4C42509F5EC82DED1ADE3F99EFB62E9AEDC7EDD5864ED4AD854BBBC30F02BB
3445BE2D343398E4E410DA907E4AF891E988EBF702755D737A3F1D7180EE892E
12328CBC80382D1CE834408AB8F4B8> |-
/i <1C60D8A8C9B78E05996B3573566568C75479E22564A3834F3FF0CB347574
CC2A502F85F740F591300E69B039D730185D703A65E03A7AE8A5896360C52193
422D46DCA3858C85C7D3735F0189AE0EC4B26122B3CC5C6F5305A44DCAC7D12D
B652EFBBCAE7FA1BC7AD5F1A111355C1CBFB8911D5457DF2D53DF380C7> |-
/l <1C60D8A8C9B78E05996B3573EACCBDF587501E2E2A7DAB07F1EC7DA6B38D
A835EA10078B9E2B100F85897D223789968CA4EAC10C4518C8484F6D351A45C2
631D45E58DD2D017C08AC6FE6E789829FF> |-
/n <1C60D8A8C9B78E05996B3573566568D3BD7DBC88EC0DBB494335B1E5E2B7
545BF5C126FAD117D4185F678CBDBB86A3D5BF7A1FC96E952495142FC1403365
3DC2225A5B237F6F93C2AB3A660518B2D756CB3253126D6E9E75DC70BD3EABEF
FBE1F4DCC612E90D6C3F42A291FC34C6A59A26A0FAEA5C060CBCF99AA0FD3CFE
C907624115BA8AEF49BE1FD04968360B30D105FA904CA39A0D7F> |-
/p <1C60D8A8C9B78E05E9579C8066B5A1A06B36B7FF66195215C79244992D77
B97EFBEA0A8D05A6CA95BB13E70354726AE8C05FABCDDE3F7B30CB6672B8B8A3
301542E48301FFDEAE69AFD0B49FEA49CBD0CA48EE7014446B9B4ED70741C91C
2C1D2C9254171ABA5A747575563C7A28538E954047A3BBAECB0D48226D3CC60A
10275408D602711ED86FED017A11D96C70DEF32508C2E3F127F50D> |-
/s <1C60D8A8C9B78E0597CED2992C40EF0E23ED992D0847EBD4D7A32405CA34
8BE21E2815FE9E3B4F6CE7DE8ED79CBFF6780D984520D4E47AFC689725072389
774DDC786F016BFD014DEFD2D215C8F3AE1E706DA78EBC69748F186A9961B36E
72753BE06922009C0C56DA25E5958E9D5F9FCB985581D87937C60A27317D1C79
3A386C4DBD7CAA3075189E1D814800E18C62454A70859C018D7795D755A68960
0B8BC77ED035A4776C85B9D6A70EB62E3E37E5723F2E6B9267> |-
/t <1C60D8A8C9B78E0597CED299252BC7B05D988F4F7EE667DF4F850255BD28
5E9BDB6F1D9734666CE6E99228B4903C845663259737533F426C749652248BD5
8E77C356FC8FFF7AAAF4F3EDBBF4F304000495C28895CB8E17AE8F20B0D8171A
FE2F325DCA0172B98285FEDEFC5314F65074B9> |-
/x <1C60D8A8C9B78E05996B3573566568995105A112EC758F266EB06CA3D030
D24193382A89A5EF5D11E36C2DB4A4D3E11F57036BAB7F8643E2D88760A64A76
20AA8F58DD7AAD84A999CEBD138256AF5276829F5EF2F7EBAE1D157FAE0734E6
C7087C366BC363834BDFEC21C84A88208EC7054A8B9EAC0C20BC1441822D6372
A252B0319D772C186FDD8B3CADAB9A0E90A21E7C08A8467C30BB500007> |-
/y <1C60D8A8C9B78E05E95DE290973D6E363A47F2CED9B1B42B6B0D762D57F5
2FBD58655FD8922D99AA453DD21045F754FFEA2D25D7125E3D7E2AAE2CFF8D51
302B9D7F6E12FC2D0713B7975A8C09CE6D90ECF6E2C336D53FAC96C12F0BB1FC
5944E208C4CD65ED837F7D0DBB7DB32B90CC8E56739588036489AC8F0D82C118
47A9A533C31B5732EE64C2CEC44DC4C3A52323257691B77E20476EC17EC2BE0E
0276> |-
/.notdef <1C60D8A8C9B78E051C> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEIT+CMTT10 /IMLBAA+CMTT10 findfont ct_VMDictPut
/ARMEIT+CMTT10*1 
[101{/.notdef}rp /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n 
/.notdef /p 2{/.notdef}rp /s /t 3{/.notdef}rp /x /y 
134{/.notdef}rp]
ARMEIT+CMTT10 nf
ARMEIT+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
282.254 296.28 mo
(spline)
[5.27911 5.27911 5.27914 5.27911 5.27911 0 ]xsh
ARMEIO+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
317.169 296.28 mo
(iscalledonly)
[2.76959 7.35532 4.42325 4.42325 2.76959 2.76959 4.42325 8.34171 4.98129 4.98129 2.76959 0 
]xsh
%%IncludeResource: font Times-Italic
/ARMEIU+Times-Italic /Times-Italic findfont ct_VMDictPut
/ARMEIU+Times-Italic*1 
[99{/.notdef}rp /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l 
/.notdef /n /o /p 2{/.notdef}rp /s /t 139{/.notdef}rp]
ARMEIU+Times-Italic nf
ARMEIU+Times-Italic*1 [9.9626 0 0 -9.9626 0 0 ]msf
375.399 296.28 mo
(once)
[4.98129 4.98129 4.42325 0 ]xsh
ARMEIO+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
397.569 296.28 mo
(to)
[2.76959 0 ]xsh
72.0008 308.16 mo
(processanentiretabulatedfunctioninarrays)
[4.9813 3.31747 4.98129 4.42325 4.42325 3.87537 6.99566 4.42325 8.10158 4.42325 4.9813 2.7696 
2.76961 3.31747 7.54352 2.76961 4.42325 4.7412 4.98129 2.76961 4.42325 2.76961 4.42323 8.10158 
3.31747 4.98131 4.98131 4.42325 2.76959 2.76959 4.98129 7.86151 2.76959 8.22113 4.42325 3.31747 
3.31744 4.42325 4.98132 0 ]xsh
ARMEIT+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
257.266 308.16 mo
(x)sh
%ADOBeginSubsetFont: IPIBAA+CMMI7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /IPIBAA+CMMI7 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/BaseFontName (CMMI7) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 105 /i put
def
/FontBBox {0 -250 1171 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 -0 683 703 431 441 451 463] def
/OtherBlues [-204 -194] def
/BlueScale 0.04379 def
/StdHW [32] def
/StdVW [81] def
/StemSnapH [32 36] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/i <1C60D8A8C9B70721B9F639782C8460B97E82801AD0D8A919DC5D9CAA4C68
FBE7833AC2F83808014E455261AE4698D1787D69206B38071478CB577B72EF41
ED0606485A0805B327A9541BF99C223B853428820C7432E93F64332505182833
A9A1726F67F49595C0D6B4E36728E08E3A3FFE1D3400C0426C9F7D546B609ED9
847726C531FCA5CF35B9B04381F81797F4E937A123F607399D53953A016040EB
4EB08C885D7568DA709FDAC1486D> |-
/.notdef <1C60D8A8C9B81F2CC3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEIV+CMMI7 /IPIBAA+CMMI7 findfont ct_VMDictPut
/ARMEIV+CMMI7*1 
[105{/.notdef}rp /i 150{/.notdef}rp]
ARMEIV+CMMI7 nf
ARMEIV+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
263.4 309.6 mo
(i)sh
ARMEIO+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
270 308.16 mo
(and)
[4.42325 4.98129 0 ]xsh
ARMEIT+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
287.506 308.16 mo
(y)sh
ARMEIV+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
292.8 309.6 mo
(i)sh
ARMEIO+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
296.16 308.16 mo
(.Oncethishasbeendone,)
[8.25104 7.19284 4.98129 4.42325 7.54352 2.76962 4.98129 2.76959 7.1152 4.98132 4.42325 7.1152 
4.98129 4.42325 4.42325 7.98102 4.98132 4.98129 4.98129 4.42325 0 ]xsh
72.0005 320.16 mo
(valuesoftheinterpolatedfunctionforanyvalueof)
[4.7412 4.42324 2.7696 4.9813 4.42325 6.39491 4.9813 5.71746 2.76961 4.98129 6.94279 2.76959 
4.98131 2.76959 4.42325 3.31747 4.98129 4.98131 2.76961 4.42325 2.76959 4.42325 7.26173 3.31747 
4.98131 4.98129 4.42325 2.76959 2.76959 4.98131 7.38129 3.31747 4.98131 5.71745 4.42325 4.86176 
7.38129 4.74121 4.42325 2.76961 4.98129 6.94278 4.98129 0 ]xsh
%ADOBeginSubsetFont: MMFAAA+CMMI10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /MMFAAA+CMMI10 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/BaseFontName (CMMI10) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 120 /x put
def
/FontBBox {-32 -250 1048 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 -0 683 705 431 442 453 466] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [31] def
/StdVW [72] def
/StemSnapH [25 31] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/x <1C60D8A8C9B7FF2B5E691B02ABF5E6B36349D70F01EDCA1CD9EAA7D42C0C
D3775D212B1A0D3DAC3A979A163114C48B359F5B767254ECAFBA627EEAB5004E
5F287E21D1D40C030BD9B088F0AD749D63A2E8A505BC208CD0E68AC6F5ABB682
EEEDF99234D0D423385B905D018FF751827D822E9B656B7606E7C9937680BD2F
E67DB02D1BD1BEEA015CC64F197C1A9477A24BC5FD41A198210AE3B1CF7C11C4
61E37B78D075740C0279207334FF27799FB349732AFD1D730E14B11CF1BC247B
EFBEC79CE40DBC31725DADD888B5B0345E950DFABA> |-
/.notdef <1C60D8A8C9B81F2CC3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEIW+CMMI10 /MMFAAA+CMMI10 findfont ct_VMDictPut
/ARMEIW+CMMI10*1 
[120{/.notdef}rp /x 135{/.notdef}rp]
ARMEIW+CMMI10 nf
ARMEIW+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
275.845 320.16 mo
(x)sh
ARMEIO+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
284.124 320.16 mo
(areobtainedbycalls\(asmany)
[4.42325 3.31747 6.94278 4.98129 4.98132 2.76959 4.42325 2.76959 4.98129 4.42325 7.38129 4.98129 
7.38132 4.42325 4.42322 2.76962 2.76959 6.51547 3.31747 4.42325 6.3949 7.75092 4.42325 4.86172 
0 ]xsh
72.0005 332.04 mo
(asdesired\)toaseparateroutine)
[4.42325 6.87511 4.9813 4.42325 3.87537 2.7696 3.31747 4.42324 4.9813 6.19766 2.7696 7.86148 
7.42299 3.87538 4.42325 4.98129 4.42325 3.31747 4.42323 2.76961 7.30344 3.31746 4.98131 4.98129 
2.76959 2.76962 4.98129 0 ]xsh
ARMEIT+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
202.945 332.04 mo
(splint)
[5.27911 5.27913 5.27911 5.27913 5.27911 0 ]xsh
ARMEIO+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
237.259 332.04 mo
(\(for\252)
[3.31747 3.31747 4.98129 6.19766 0 ]xsh
ARMEIU+Times-Italic*1 [9.9626 0 0 -9.9626 0 0 ]msf
259.497 332.04 mo
(spl)
[3.87537 4.98129 0 ]xsh
ARMEIO+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
271.123 332.04 mo
(ine)
[2.76959 4.98132 0 ]xsh
ARMEIU+Times-Italic*1 [9.9626 0 0 -9.9626 0 0 ]msf
286.177 332.04 mo
(int)
[2.76959 4.98132 0 ]xsh
ARMEIO+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
296.818 332.04 mo
(erpolation\272\):)
[4.42325 3.31747 4.98129 4.98129 2.76962 4.42322 2.76962 2.76959 4.98129 4.98132 4.42322 3.31747 
0 ]xsh
ARMEIR+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
72 353.04 mo
(voidsplint\(floatxa[],floatya[],floaty2a[],intn,floatx,float*y\))
[4.1971 4.19711 4.1971 8.51769 4.19711 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 4.19711 
4.19711 4.1971 4.1971 8.87714 4.19711 4.19708 4.19711 4.19708 8.63725 4.1971 4.1971 4.1971 
4.19711 8.63724 4.1971 4.19711 4.1971 4.1971 8.5177 4.1971 4.1971 4.1971 4.1971 8.63724 
4.19711 4.1971 4.19708 4.19711 4.19711 8.63721 4.19714 4.19708 8.5177 4.19708 8.5177 4.19708 
4.19714 4.19708 4.19708 8.63727 4.19711 8.5177 4.19711 4.19711 4.19711 4.19711 8.5177 4.19711 
4.19711 0 ]xsh
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
72 362.04 mo
(Giventhearrays)
[5.6364 2.03561 3.96278 3.71726 6.72195 3.00236 4.32215 6.2374 3.83597 2.88045 2.88045 3.83597 
3.96278 0 ]xsh
%ADOBeginSubsetFont: OVSAAA+CMTT9 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /OVSAAA+CMTT9 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMTT9) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 112 /p put
dup 115 /s put
dup 120 /x put
dup 121 /y put
def
/FontBBox {-6 -233 542 698} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 611 622 431 439] def
/OtherBlues [-228 -222] def
/BlueScale 0.04796 def
/StdHW [65] def
/StdVW [74] def
/StemSnapH [65] def
/StemSnapV [74] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
15 dict dup begin
/period <1C60D8A8C9B78E059954BBB8A5007692C4FF0DC21623ADCBCBC5AD5
607A6F4AA1A3DA926D580DC6DF7ABDF> |-
/one <1C60D8A8C9B78E05996F6CB6318B0C24FDE0F928ADCAFF3192A90D2FB5
A9E5330EC1110F982A83EEE906383E3A7467DF6BD5EE324B77D031AA3B940CD8
C46DF07F5751DD461B81170026CA6694D0EC929D3F8660FCE02A5AB8BBCB35A2
E356B5A4AA> |-
/two <1C60D8A8C9B78E05996F6CB6B7992BACAC505ABFD2DDB66BADF46AC79C
BEB7FF1528A87DD2B6F02452B996BA424C27EFC59DBA09271BA2BD596CFE80B2
332231187E128C5BFB8DA8571AF6FC6AD361587D1DA3FA4285D964A6EAD25F51
8A8204ED8C5CE19C32E0B369AAE8EAD03214BDA2B9352C8701733C05E8D8B9C0
75> |-
/bracketleft <1C60D8A8C9B78E052AEEE373354B3AB3330A1A774B464B7A8A
A8BF0C06AA3278289C38E89AFD6F360FEBF697B06FB94E43571156D5BEFFF91A
EA343DFC3E384824547B31FA0CB0> |-
/bracketright <1C60D8A8C9B78E052AEEE373354B3AB3218EAD86E0C470986
A04142AAD7EA61C5ED0CB601DF691CA2C7740A2DEFE8F2489735E69F1A82AB90
A80F1A29060B2A195547B04FF05C5> |-
/a <1C60D8A8C9B78E0594570E2E801A31276212EAD76D542D27BE94CA55AA2A
ACE7472A5740B3AAD690E9889C6F1C89248F20CE65348E656CCF43C4220FCA2D
0D8DA148C3E44399844887395913F91A530650DCB2769A0E92D9C0208D9B259F
2B6A8C1B2DAFBC3D212D43E518230737A326E1F663E92A376A05B3D1E50A095D
CE13F24FFEAD1DB6227406BA6526B6FB> |-
/e <1C60D8A8C9B78E0594570E2EBCF35AF4A74864126D6F82CACA520B2E1C58
25DED7FC47119D632CD6BB5963AA572264E8BB241152858E83562B0472A622E4
5476AD067455414CA21AB194EC3B05E3A4B9172DAD2F226F96E95AF05B8F2058
9CEB89E1751E465E4711CAC0E98C9B> |-
/i <1C60D8A8C9B78E05996F6CB67482346A568A5473CD8CCFA57F30CA91C354
31AC98B7E54708DB37D22997ED3D64ACAF6E49D94959AE53CAA2F0298581E980
B0985E55905F6B197AF127B9EAD6D1E2B57E9B0E62A7602E37202EB3FD8E0961
59937E238885BCF74A4970F6937D> |-
/l <1C60D8A8C9B78E05996F6CB6C05ACA9B88516D4451206DCB7ABEF0276411
99269DBD28A8B75F16926B96C0D87CE112CDD17FA3C56DC0E1A036D185556B6E
3662679CFD10AE49B619DCB3E9A7B3CB91> |-
/n <1C60D8A8C9B78E05996F6CB6712F7999C891D9AA450FEC6A7B0BA5B5BCE0
5249B928911742195C5A9CAE9C2A1FC34D0A4320DEBCC97D05726DC00DD35C1C
05E66D14443B41AB8728F2340E579ABA439BE32258BFD47CA7013C285CEA1A48
F0D2AFA792A3C7BD965BC44F79002C37F3715ED6ACE122493CB41EC30B490A3E
F97780070F29CE> |-
/p <1C60D8A8C9B78E05E957984633A39DB806CAEE6A380037075D5D35813785
C7431D8AC7994839DD4569ED923F7F9239DFB160D1081C1E087A20FDC1B6AB7F
DA12BA53C1A56BA8FA4BE2CC0AB3B31177C803FCA4FB82CCB98FC83E5606A52A
62A8CE42C90A15B9D1DF5356330457E96595369801EFF34103DEDAE0588F8D4C
7168236A686A19966509> |-
/s <1C60D8A8C9B78E0594570E21784791C0FA1B7D204FF27840FA504A29463A
FBF997948E50299DCA9744650DE506291F24F3281AB0BA1626F0AE0048009D48
24001AB7771F9F85476E1163E5E1F5B4F6898F17271D845AFFF3BED7A1528900
5F2A8AEE6357BC00FA60B5074EDBDF90A2143001BF1767443EEF4C364167719D
577E7283E6AC96FBF0CE3ED013F99ACD7F26B09DEA776E5EFCB1E5417F98E272
E745041AEE1ED89A362297FFC6> |-
/x <1C60D8A8C9B78E05996F6CB67482346509975DCA20F66B51DA69BAAED4A6
85DCB69DDD6F6BF9DA3B6F50543EF832BF715F0E016CDBDF2AC27B3FCFBF4F77
1B5EEFFEC889BAC3D6161A1C507BBEC084972F56B1CB7357A849FFB10646457E
B61E8910E42CBE0C332CFBED466EFA1DB031902477652DE1D15DC3E775C657F8
B932F83C342A93B43A4AFB479BAC71897EFCCA0175258E32DE> |-
/y <1C60D8A8C9B78E05E95280E85497A2CB8D3CA33B8547A1ED79689C3792A6
C1E02B76C268A80C641451F40BD7F4F2491C962B34137320579B18629C9DD249
FB0A123A70F2D9A7DF66D1EF936FBED105D0D7C3F3637AD94E3A3D9FA6A10CA1
2BFD7C193FDB68FD9BE8356AFD9A93BDDCD86429716291636A7CF6C7096AA20B
1FD12496EC0AAC66437330A815D4564CF563CBB40C16245D628614FD54369A4C
B8A406739BF4E7A276C6B928348006FF5DD6A3FA8A4C84D708A6C13D4248BBA9
D7> |-
/.notdef <1C60D8A8C9B78E051C> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEIX+CMTT9 /OVSAAA+CMTT9 findfont ct_VMDictPut
/ARMEIX+CMTT9*1 
[46{/.notdef}rp /period 2{/.notdef}rp /one /two 40{/.notdef}rp /bracketleft /.notdef 
/bracketright 3{/.notdef}rp /a 3{/.notdef}rp /e 3{/.notdef}rp /i 2{/.notdef}rp 
/l /.notdef /n /.notdef /p 2{/.notdef}rp /s 4{/.notdef}rp 
/x /y 134{/.notdef}rp]
ARMEIX+CMTT9 nf
ARMEIX+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
130.551 362.04 mo
(xa[1..n])
[4.6795 4.67952 4.6795 4.6795 4.67952 4.6795 4.67952 0 ]xsh
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
170.505 362.04 mo
(and)
[4.07587 4.32216 0 ]xsh
ARMEIX+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
185.743 362.04 mo
(ya[1..n])
[4.6795 4.67952 4.6795 4.6795 4.67952 4.6795 4.67952 0 ]xsh
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
223.296 362.04 mo
(,whichtabulateafunction\(withthe)
[4.79878 5.76157 4.32535 2.03561 3.71167 6.8423 3.01033 4.07585 4.32535 4.32535 2.03561 4.07587 
3.00235 6.35776 6.35611 2.64206 4.32535 4.32535 3.71167 3.01031 2.03561 4.18198 6.84229 3.24139 
5.73605 2.03564 3.00235 6.84229 3.00235 4.32535 0 ]xsh
ARMEIX+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
353.837 362.04 mo
(xa)
[4.6795 0 ]xsh
%ADOBeginSubsetFont: VBSAAA+CMMI6 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /VBSAAA+CMMI6 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/BaseFontName (CMMI6) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 105 /i put
def
/FontBBox {10 -250 1241 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-21 -0 683 704 431 441 452 463] def
/OtherBlues [-204 -194] def
/BlueScale 0.04379 def
/StdHW [35] def
/StdVW [85] def
/StemSnapH [35 39] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/i <1C60D8A8C9B77D5FE26A5467CEBA8D27174A141828D6B8D91CC43DE243B1
F23F652FAEF2E5B69E6DFF553791FFC7A4F17D8667089458281A82196281D3A3
7B75D8CF4E6E7A7965A182BBECA0530A436006B0945C3129D30C71FAE61F83E1
F124E74F0A454C0704D38D0F03F1AAC08B243BA36E601B8AECBDBB5B9F9A1478
7C7F6E6B76A920821E33D650D7914FDD509DB1F7D1E4B092D60CD44E932AF682
F72D6C9CDDF73D82EF561137C8C9B20CA7D0116CFC7C8E43> |-
/.notdef <1C60D8A8C9B81F2CC3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEIY+CMMI6 /VBSAAA+CMMI6 findfont ct_VMDictPut
/ARMEIY+CMMI6*1 
[105{/.notdef}rp /i 150{/.notdef}rp]
ARMEIY+CMMI6 nf
ARMEIY+CMMI6*1 [5.9776 0 0 -5.9776 0 0 ]msf
363.36 363.24 mo
(i)sh
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
366.48 362.04 mo
('sinorder\),)
[2.38464 5.51688 2.04996 6.72195 3.95721 2.88043 4.32214 3.71725 2.88046 3.2374 0 ]xsh
72.0007 370.92 mo
(andgiventhearray)
[4.05753 4.32215 7.0822 4.19711 2.00931 3.96278 3.75471 6.96265 3.00237 4.32214 6.59766 3.83597 
2.88603 2.88602 3.83597 0 ]xsh
ARMEIX+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
142.19 370.92 mo
(y2a[1..n])
[4.6795 4.67952 4.6795 4.6795 4.67952 4.6795 4.67952 4.6795 0 ]xsh
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
184.543 370.92 mo
(,whichistheoutputfrom)
[5.03868 5.76157 4.32535 2.03561 3.71167 7.20255 2.03561 5.87714 3.01033 4.32535 6.47729 4.1971 
4.32535 3.01033 4.32533 4.32533 5.88196 2.64206 2.88046 4.18195 0 ]xsh
ARMEIX+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
279.569 370.92 mo
(spline)
[4.6795 4.6795 4.6795 4.67953 4.6795 0 ]xsh
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
310.404 370.92 mo
(above,andgivenavalueof)
[4.07904 4.56207 4.19708 3.9628 3.71725 5.03867 4.07907 4.32214 7.08218 4.19711 2.03082 3.9628 
3.71725 7.08218 6.71558 3.96277 4.07904 2.03082 4.32217 6.35776 4.19708 0 ]xsh
ARMEIX+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
72 379.92 mo
(x)sh
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
76.6792 379.92 mo
(,thisroutinereturnsacubic-splineinterpolatedvalue)
[5.87873 3.00236 4.32375 2.03561 6.71718 2.88045 4.18037 4.32375 3.00874 2.03561 4.32375 7.31735 
2.88045 3.71725 3.00873 4.32375 2.88045 4.32216 6.83673 7.31572 3.71008 4.32373 4.32375 2.03561 
3.71008 2.87804 3.23743 4.32217 2.03561 2.03561 4.32214 7.31735 2.03561 4.32375 3.00873 3.71008 
2.88045 4.56204 4.1971 2.03561 4.07587 3.00873 3.71008 8.04259 3.96278 4.07588 2.03558 4.32373 
0 ]xsh
ARMEIX+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
273.33 379.92 mo
(y)sh
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
278.01 379.92 mo
(.)sh
ARMEIR+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
72.0001 388.92 mo
({)sh
87.9602 397.8 mo
(voidnrerror\(charerror_text[]\);)
[4.1971 4.19711 4.1971 8.51769 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.1971 
4.1971 4.1971 4.1971 8.87715 4.1971 4.1971 4.1971 4.1971 4.1971 4.1971 4.19711 4.19708 
4.19711 4.19708 4.19711 4.1971 4.1971 0 ]xsh
87.9602 406.8 mo
(intklo,khi,k;)
[4.1971 4.19711 8.51769 4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.1971 
0 ]xsh
87.9602 415.8 mo
(floath,b,a;)
[4.1971 4.19711 4.1971 4.19711 8.63725 4.1971 4.1971 4.19711 4.1971 4.1971 0 ]xsh
87.9602 433.68 mo
(klo=1;)
[4.1971 4.19711 4.1971 4.19711 4.1971 0 ]xsh
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
206.755 433.68 mo
(Wewill\256ndtherightplaceinthetablebymeansof)
[7.7948 7.6776 5.76158 2.02924 2.02924 5.99594 4.54774 4.32216 8.40205 3.00235 4.32214 7.79794 
2.90598 2.02924 4.19708 4.32217 7.08224 4.32214 2.02924 4.07748 3.71725 7.79794 2.02924 8.40204 
3.00238 4.32214 7.79794 3.00235 4.07745 4.32217 2.02924 7.79794 4.08224 7.92233 6.73944 3.71729 
4.07745 4.32214 7.31732 4.19711 0 ]xsh
221.16 442.68 mo
(bisection.Thisisoptimalifsequentialcallstothis)
[4.32216 2.0356 3.25816 3.71725 3.71725 3.00237 2.03082 4.1971 4.32216 6.83833 5.76157 4.32214 
2.03085 6.71716 2.03082 6.71719 4.19711 4.32214 3.00235 2.03561 6.74106 4.07907 5.63568 2.03561 
6.00226 3.23746 3.71722 4.32217 4.32214 3.71725 4.32217 3.00235 2.03082 4.07907 5.75604 3.71725 
4.07907 2.03082 2.03085 6.71716 3.00238 7.67764 3.00235 4.32214 2.03085 0 ]xsh
221.16 451.68 mo
(routineareatrandomvaluesof)
[2.88045 4.1971 4.32535 3.01033 2.03561 4.32214 6.47729 3.83597 2.88046 6.35773 4.07587 5.64206 
2.88046 4.07587 4.32532 4.32538 4.18195 9.36084 3.96277 4.07587 2.03561 4.32535 3.71167 5.87714 
4.19708 0 ]xsh
ARMEIR+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
333.703 451.68 mo
(x)sh
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
337.902 451.68 mo
(.Ifsequentialcalls)
[6.59842 2.39819 5.04266 3.23743 3.71088 4.32455 4.32455 3.71088 4.32452 3.00955 2.03561 4.07587 
4.91599 3.71725 4.07587 2.03561 2.03561 0 ]xsh
221.16 460.56 mo
(areinorder,andcloselyspaced,onewoulddobetter)
[3.83597 2.88045 6.2374 2.03561 6.72195 3.9572 2.84856 4.33093 3.71725 2.84857 5.03867 4.07587 
4.33093 6.84229 3.71725 2.03564 4.18753 3.19916 3.71725 2.03564 6.48291 3.23743 4.33093 4.07587 
3.71725 3.71725 4.33093 5.03867 4.19711 4.3309 6.2374 5.52167 4.19711 4.3309 2.03564 6.96265 
4.32214 6.71722 4.56207 3.71722 3.01593 3.0159 3.71725 0 ]xsh
221.16 469.56 mo
(tostorepreviousvaluesof)
[3.01033 7.67764 3.23744 3.00235 3.9572 2.88045 7.1978 4.08224 2.88046 3.71725 3.96277 2.03561 
4.18195 4.32535 6.83673 3.9628 4.07587 2.03558 4.32535 3.7117 6.5968 4.19711 0 ]xsh
ARMEIR+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
319.066 469.56 mo
(klo)
[4.19711 4.19708 0 ]xsh
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
335.144 469.56 mo
(and)
[4.07587 4.32214 0 ]xsh
ARMEIR+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
351.342 469.56 mo
(khi)
[4.19711 4.19708 0 ]xsh
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
367.42 469.56 mo
(andtestif)
[4.07587 4.32214 7.80191 3.00235 3.71725 3.23743 6.60168 2.03558 0 ]xsh
221.16 478.56 mo
(theyremainappropriateonthenextcall.)
[3.00237 4.32214 3.71725 6.96272 2.90755 3.71725 6.74107 4.07904 2.03082 7.44244 4.07907 4.32214 
4.08224 2.88046 4.19711 4.08224 2.90753 2.03082 4.07907 3.00235 6.95789 4.19711 7.32208 3.00235 
4.32217 6.83755 4.32214 3.71725 3.91974 6.12186 3.71725 4.07587 2.03082 2.03082 0 ]xsh
ARMEIR+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
87.961 442.68 mo
(khi=n;)
[4.1971 4.19711 4.1971 4.19711 4.1971 0 ]xsh
87.961 451.68 mo
(while\(khi-klo>1\){)
[4.1971 4.19711 4.1971 4.19711 8.63725 4.1971 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 
8.63725 8.51768 4.1971 8.5177 0 ]xsh
103.921 460.56 mo
(k=\(khi+klo\)>>1;)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.19711 4.19708 8.7576 4.19711 
8.51768 4.1971 0 ]xsh
103.921 469.56 mo
(if\(xa[k]>x\)khi=k;)
[4.1971 8.51769 4.19711 4.1971 4.19711 4.1971 4.19711 8.63724 8.39734 4.19711 8.51768 4.1971 
4.1971 4.1971 4.1971 4.1971 0 ]xsh
103.921 478.56 mo
(elseklo=k;)
[4.1971 4.19711 4.1971 8.51769 4.19711 4.1971 4.19711 4.19708 4.19711 0 ]xsh
87.961 487.56 mo
(}klo)
[118.797 4.1971 4.19711 0 ]xsh
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
222.358 487.56 mo
(and)
[4.07587 4.32214 0 ]xsh
ARMEIR+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
238.196 487.56 mo
(khi)
[4.1971 4.1971 0 ]xsh
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
253.793 487.56 mo
(nowbrackettheinputvalueof)
[4.32455 3.95718 8.76154 4.08224 2.88043 4.07587 3.71088 3.83838 3.71088 6.24222 3.00952 4.32455 
6.83755 2.03561 4.32452 4.32455 4.32455 6.12183 3.9628 4.07587 2.03561 4.32214 6.71722 4.19708 
0 ]xsh
ARMEIR+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
365.497 487.56 mo
(x)sh
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
369.697 487.56 mo
(.)sh
ARMEIR+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
87.961 496.44 mo
(h=xa[khi]-xa[klo];)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.19711 4.19711 4.19708 4.19711 
4.1971 4.1971 4.1971 4.1971 4.1971 0 ]xsh
87.961 505.44 mo
(if\(h==0.0\)nrerror\("Badxainputtoroutinesplint"\);)
[4.1971 8.51769 4.19711 8.51769 4.1971 8.39735 4.19711 4.19708 4.19711 8.63724 4.1971 4.1971 
4.19711 4.19708 4.19711 4.19708 4.19711 4.1971 4.1971 4.1971 4.1971 8.87714 4.19711 8.39734 
4.19711 4.19708 4.19711 4.19711 8.63724 4.19708 8.5177 4.19711 4.19708 4.19711 4.19708 4.19711 
4.19711 8.63724 4.19708 4.19711 4.19708 4.19711 4.19711 4.19708 4.19711 4.19708 0 ]xsh
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
336.327 505.44 mo
(The)
[5.74722 4.33649 0 ]xsh
ARMEIR+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
352.164 505.44 mo
(xa)
[4.19711 0 ]xsh
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
360.563 505.44 mo
('smustbedis-)
[2.39819 5.15744 6.72034 4.32214 3.23743 4.92236 4.56204 5.7576 4.32217 2.03561 3.23743 0 
]xsh
350.761 514.439 mo
(tinct.)
[3.00555 2.03561 4.32056 3.70688 3.00555 0 ]xsh
ARMEIR+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
87.9578 514.439 mo
(a=\(xa[khi]-x\)/h;)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 
4.1971 4.19711 4.19708 0 ]xsh
87.961 523.32 mo
(b=\(x-xa[klo]\)/h;)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 
4.1971 4.1971 4.19711 0 ]xsh
ARMEIS+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
206.749 523.32 mo
(Cubicsplinepolynomialisnowevaluated.)
[5.40054 4.32773 4.32774 2.0356 6.83755 3.23744 4.32773 2.03561 2.0356 4.32216 6.83755 4.56206 
4.18433 2.03561 3.9628 4.32214 4.18436 6.72034 2.03561 4.07587 5.15591 2.03561 6.23737 4.32217 
3.95718 8.88107 3.71408 3.96277 4.07587 2.03561 4.32773 4.07587 3.0127 3.71408 4.32773 0 
]xsh
ARMEIR+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
87.961 532.32 mo
(*y=a*ya[klo]+b*ya[khi]+\(\(a*a*a-a\)*y2a[klo]+\(b*b*b-b\)*y2a[khi]\)*\(h*h\)/6.0;)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 
4.1971 4.1971 4.19711 4.19708 4.19711 4.1971 4.1971 4.1971 4.1971 4.1971 4.1971 4.31746 
4.1971 4.1971 4.31746 4.19708 4.19711 4.1971 4.31744 4.1971 4.19711 4.31744 4.1971 4.1971 
4.1971 4.31746 4.1971 4.1971 4.31744 4.19711 4.19711 4.19708 4.31744 4.19708 4.19714 4.31744 
4.19708 4.19708 4.19711 4.31747 4.19708 4.19708 4.31747 4.19711 4.19708 4.19708 4.31744 4.19711 
4.19711 4.19711 4.31747 4.19711 4.19711 4.31744 4.19711 4.19711 4.19711 4.31744 4.19711 4.19711 
0 ]xsh
72.0008 541.319 mo
(})sh
ARMEIQ+Helvetica*1 [7.9701 0 0 -7.9701 0 0 ]msf
72.0008 587.159 mo
(CITEDREFERENCESANDFURTHERREADING:)
[5.75429 2.21569 4.86967 5.31599 8.75424 5.75429 5.31599 4.86967 5.31599 5.75429 5.31599 5.75429 
5.7543 5.31598 8.31595 5.31599 5.75429 8.75424 4.86967 5.75429 5.5144 4.86966 5.75429 5.31599 
8.63469 5.7543 5.31599 5.31599 5.75429 2.21568 5.75429 6.20074 0 ]xsh
72.0008 599.159 mo
(DeBoor,C.1978,)
[5.75429 6.95152 5.31599 4.43137 4.43137 2.29373 4.73584 5.51439 4.85538 4.43137 4.43137 4.43137 
4.43137 0 ]xsh
%%IncludeResource: font Helvetica-Oblique
/ARMEIP+Helvetica-Oblique*1 
[46{/.notdef}rp /period 4{/.notdef}rp /three 13{/.notdef}rp /A /.notdef /C 
/.notdef /E /F /G /.notdef /I 3{/.notdef}rp /M 
/N /.notdef /P 2{/.notdef}rp /S 13{/.notdef}rp /a /.notdef 
/c /d /e /f /.notdef /h /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
/t /u 2{/.notdef}rp /x /y 134{/.notdef}rp]
ARMEIP+Helvetica-Oblique nf
ARMEIP+Helvetica-Oblique*1 [7.9701 0 0 -7.9701 0 0 ]msf
138.746 599.159 mo
(APracticalGuidetoSplines)
[7.83614 5.31599 2.53365 4.43137 3.98505 2.2157 1.76924 3.98505 4.43137 4.40895 6.20073 4.43138 
1.76923 4.43138 6.95152 2.21568 6.95152 5.31599 4.43138 1.76923 1.76926 4.43137 4.43137 0 
]xsh
ARMEIQ+Helvetica*1 [7.9701 0 0 -7.9701 0 0 ]msf
241.265 599.159 mo
(\(NewYork:Springer-Verlag\).)
[2.65398 5.7543 4.31102 8.15408 4.23605 4.43137 2.77435 3.98505 4.85538 5.31598 4.4314 2.77432 
1.76923 4.4314 4.43137 4.43137 2.65399 2.65399 4.71582 4.4314 2.77432 1.76926 4.43137 4.43137 
2.65399 0 ]xsh
72.0008 611.159 mo
(Forsythe,G.E.,Malcolm,M.A.,andMoler,C.B.1977,)
[4.62977 4.43137 2.65398 3.98505 3.98505 2.21569 4.43137 4.31103 6.05568 6.20074 2.21569 5.31599 
2.21568 6.17603 6.63904 4.43137 1.76926 3.98505 4.43137 1.76924 6.63904 5.93532 6.63904 2.2157 
5.31598 2.2157 6.29558 4.43138 4.43137 8.15103 6.63901 4.4314 1.76923 4.43137 2.29373 5.93533 
5.5144 2.2157 5.19562 6.05569 4.43137 4.43137 4.4314 4.43137 0 ]xsh
ARMEIP+Helvetica-Oblique*1 [7.9701 0 0 -7.9701 0 0 ]msf
274.264 611.159 mo
(ComputerMethodsforMathematical)
[5.7543 4.43137 6.63904 4.43137 4.43137 2.2157 4.43137 6.49399 6.63904 4.43137 2.2157 4.43137 
4.43137 4.43137 7.82504 1.9758 4.43137 6.49399 6.63904 4.43137 2.2157 4.43137 4.43137 6.63904 
4.43137 2.2157 1.76926 3.98505 4.43137 0 ]xsh
91.0805 621.119 mo
(Computations)
[5.7543 4.43137 6.63904 4.43137 4.43137 2.21568 4.43138 2.21568 1.76924 4.43138 4.43137 0 
]xsh
ARMEIQ+Helvetica*1 [7.9701 0 0 -7.9701 0 0 ]msf
143.008 621.119 mo
(\(EnglewoodCliffs,NJ:Prentice-Hall\),)
[2.65398 5.31601 4.43137 4.43137 1.76926 4.31102 5.63394 4.43138 4.43137 7.07108 5.75429 1.76924 
1.76924 2.21568 2.2157 3.86469 4.97574 5.7543 3.98505 4.97574 5.31598 2.65399 4.43137 4.43138 
2.21568 1.76924 3.98506 4.43137 2.65399 5.75427 4.43137 1.76926 1.76926 2.65399 0 ]xsh
%ADOBeginSubsetFont: RQIBAA+CMSY10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /RQIBAA+CMSY10 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.035 def
/BaseFontName (CMSY10) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 120 /section put
def
/FontBBox {-29 -960 1116 775} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 -0 683 705] def
/OtherBlues [-124 -119] def
/BlueScale 0.04379 def
/StdHW [40] def
/StdVW [85] def
/StemSnapH [40 55] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/section <1C60D8A8C9B77FE2C21025717E56A95A2AED779B59275C4388C38A
6E34199A2881F057C86D2C64D6AD83C219CE4FC24811B35CF11A716830781B4C
55499B1CCAAE25531CE1DD3A5469743C4170F451EC317EFC7B35F210032592F4
F33AB5AD76DC73D4A3EC2EAC36EFFFD7DC3DBF13129CC8D5CDAC08F016F1C876
7835BFA7D602B4372E57AF819BB8627B128B53816CCB23266A5C248667D515A1
F282A274C98D35BE4D3C2AF3353C4325B242AC6FF18226BB2F1BF65A287413B2> |-
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEIZ+CMSY10 /RQIBAA+CMSY10 findfont ct_VMDictPut
/ARMEIZ+CMSY10*1 
[120{/.notdef}rp /section 135{/.notdef}rp]
ARMEIZ+CMSY10 nf
ARMEIZ+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
278.013 621.12 mo
(xx)
[4.43436 0 ]xsh
ARMEIQ+Helvetica*1 [7.9701 0 0 -7.9701 0 0 ]msf
286.772 621.12 mo
(4.4\2614.5.)
[4.43137 2.2157 4.43137 4.43137 4.4314 2.21567 4.43137 0 ]xsh
72.0004 633 mo
(Stoer,J.,andBulirsch,R.1980,)
[5.31599 2.21569 4.43137 4.43138 2.29373 4.25603 3.74515 2.21569 4.37558 4.43137 4.43137 6.35137 
5.31599 4.43137 1.76924 1.76924 2.65398 3.98506 3.98505 4.43138 4.25603 5.75429 4.25604 4.43137 
4.43138 4.43138 4.43137 0 ]xsh
ARMEIP+Helvetica-Oblique*1 [7.9701 0 0 -7.9701 0 0 ]msf
185.084 633 mo
(IntroductiontoNumericalAnalysis)
[2.21568 4.43138 2.21568 2.65398 4.43138 4.43138 4.43137 3.98505 2.2157 1.76923 4.43138 6.47173 
2.21568 6.47173 5.75429 4.43137 6.63904 4.43138 2.77432 1.76926 3.98505 4.43137 3.68924 5.31598 
4.4314 4.43137 1.76923 3.98508 3.98505 1.76923 0 ]xsh
ARMEIQ+Helvetica*1 [7.9701 0 0 -7.9701 0 0 ]msf
307.073 633 mo
(\(NewYork:Springer-Verlag\),)
[2.65399 5.75427 4.31104 7.67429 4.23605 4.43137 2.77435 3.98505 4.25601 5.31601 4.43137 2.77432 
1.76926 4.43137 4.43137 4.43137 2.65399 2.65399 4.71585 4.43137 2.77432 1.76926 4.43137 4.43137 
2.65399 0 ]xsh
ARMEIZ+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
91.08 642.96 mo
(x)sh
ARMEIQ+Helvetica*1 [7.9701 0 0 -7.9701 0 0 ]msf
95.5192 642.96 mo
(2.4.)
[4.43137 2.21568 4.43138 0 ]xsh
72.0002 654.96 mo
(Ralston,A.,andRabinowitz,P.1978,)
[5.7543 4.43137 1.76924 3.98505 2.21569 4.43137 4.43138 4.61548 5.31599 2.21568 4.61549 4.43137 
4.43137 6.71162 5.75429 4.43138 4.43138 1.76923 4.43138 4.31102 5.7543 1.76923 2.2157 3.98505 
4.49594 3.87579 4.61548 4.43137 4.43138 4.43138 4.43137 0 ]xsh
ARMEIP+Helvetica-Oblique*1 [7.9701 0 0 -7.9701 0 0 ]msf
205.419 654.96 mo
(AFirstCourseinNumericalAnalysis)
[7.71579 4.86967 1.76924 2.65398 3.98506 4.49593 5.75429 4.43138 4.43137 2.65399 3.98505 6.71162 
1.76923 6.71164 5.75427 4.43137 6.63904 4.4314 2.77432 1.76923 3.98508 4.43137 4.04947 5.31601 
4.43137 4.4314 1.76923 3.98505 3.98505 1.76926 0 ]xsh
ARMEIQ+Helvetica*1 [7.9701 0 0 -7.9701 0 0 ]msf
335.296 654.96 mo
(,2nded.\(NewYork:)
[4.61548 4.43137 4.4314 6.71161 4.43137 4.4314 4.49591 2.65399 5.7543 4.311 8.03455 4.23605 
4.43137 2.77432 3.98505 0 ]xsh
91.0807 664.92 mo
(McGraw-Hill\),)
[6.63903 3.98505 6.20074 2.53364 4.31102 5.7543 2.65398 5.75429 1.76924 1.76924 1.76924 2.65399 
0 ]xsh
ARMEIZ+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
142.571 664.92 mo
(x)sh
ARMEIQ+Helvetica*1 [7.9701 0 0 -7.9701 0 0 ]msf
147.01 664.92 mo
(3.8.)
[4.43138 2.21568 4.43137 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/3 ]]
] del_res
/ARMEIZ+CMSY10*1 uf
/ARMEIZ+CMSY10 uf
/RQIBAA+CMSY10 uf
/ARMEIV+CMMI7*1 uf
/ARMEIV+CMMI7 uf
/IPIBAA+CMMI7 uf
/ARMEIS+CMSS8*1 uf
/ARMEIS+CMSS8 uf
/DLPBAA+CMSS8 uf
/ARMEIU+Times-Italic*1 uf
/ARMEIT+CMTT10*1 uf
/ARMEIT+CMTT10 uf
/IMLBAA+CMTT10 uf
/ARMEIP+Helvetica-Oblique*1 uf
/ARMEIR+CMTT8*1 uf
/ARMEIR+CMTT8 uf
/HEJAAA+CMTT8 uf
/ARMEIW+CMMI10*1 uf
/ARMEIW+CMMI10 uf
/MMFAAA+CMMI10 uf
/ARMEIQ+Helvetica*1 uf
/ARMEIO+Times-Roman*1 uf
/ARMEIY+CMMI6*1 uf
/ARMEIY+CMMI6 uf
/VBSAAA+CMMI6 uf
/ARMEIX+CMTT9*1 uf
/ARMEIX+CMTT9 uf
/OVSAAA+CMTT9 uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Page: 5 5
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
[
[/Label (5)]
[/TrimBox [12 51.377624511719 583.08001708984 790.42236328125]]
[/BleedBox [12 51.377624511719 583.08001708984 790.42236328125]]
[/ArtBox [12 51.5776 583.08 790.622 ]]
]xpdfm
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -842 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
12 51.5776 mo
12 790.622 li
583.08 790.622 li
583.08 51.5776 li
cp
clp
[0.933137 0 0 0.933137 12 51.5776 ]ct
false sop
/4 
[/DeviceGray] /CSA add_res
0 gry
%%IncludeResource: font Helvetica-Oblique
/ARMEJA+Helvetica-Oblique /Helvetica-Oblique findfont ct_VMDictPut
/ARMEJA+Helvetica-Oblique*1 
[46{/.notdef}rp /period 4{/.notdef}rp /three /four 19{/.notdef}rp /H 6{/.notdef}rp 
/O 3{/.notdef}rp /S /T 12{/.notdef}rp /a /b /c 
/d /e 2{/.notdef}rp /h 3{/.notdef}rp /l /.notdef /n 
/o 2{/.notdef}rp /r /.notdef /t 2{/.notdef}rp /w 136{/.notdef}rp]
ARMEJA+Helvetica-Oblique nf
ARMEJA+Helvetica-Oblique*1 [8.9664 0 0 -8.9664 0 0 ]msf
153.12 84.6 mo
(3.4HowtoSearchanOrderedTable)
[4.98532 2.49266 7.38562 6.4736 4.86516 8.87392 2.49266 7.38562 5.98051 4.98532 4.98531 2.98575 
4.48322 7.26546 4.98532 7.38562 6.97586 2.98573 4.98532 4.98532 2.98575 4.98532 7.26547 4.39795 
4.98532 4.86517 1.99039 0 ]xsh
%%IncludeResource: font Times-Roman
/ARMEJB+Times-Roman /Times-Roman findfont ct_VMDictPut
/ARMEJB+Times-Roman*1 
[49{/.notdef}rp /one 5{/.notdef}rp /seven 200{/.notdef}rp]
ARMEJB+Times-Roman nf
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
388.244 84.6 mo
(117)
[4.98129 4.98129 0 ]xsh
72 88.92 mo
406.8 88.92 li
406.8 88.44 li
72 88.44 li
cp
f
%%IncludeResource: font Helvetica
/ARMEJC+Helvetica /Helvetica findfont ct_VMDictPut
/ARMEJC+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/period /slash /zero /one /two /three /four /five 
/.notdef /seven /eight /nine /colon 5{/.notdef}rp /at /A 
/B /C /D /E /F /G /H /I 
2{/.notdef}rp /L /M /N /O /P /.notdef /R 
/S /T /U 11{/.notdef}rp /a /b /c /d 
/e /f /g /h /i /.notdef /k /l 
/m /n /o /p /.notdef /r /s /t 
/u /v /w /.notdef /y 134{/.notdef}rp]
ARMEJC+Helvetica nf
ARMEJC+Helvetica*1 [0 7 7 0 0 0 ]msf
466 178.92 mo
(Sample page from NUMERICAL RECIPES IN C: THE ART OF SCIENTIFIC COMPUTING \(ISBN 0-521-43108-5\))
[4.66895 3.89203 5.83093 3.89197 1.55389 3.89203 1.94598 3.89203 3.89197 3.89197 3.89203 1.94598 
1.94604 2.33093 3.89197 5.83093 1.94604 5.05389 5.05389 5.83093 4.66895 5.05389 1.94598 5.05389 
4.66895 3.89203 1.94598 5.05389 4.66895 5.05389 1.94598 4.66895 4.66895 4.66895 1.94601 1.94601 
5.05389 1.94598 5.05389 1.94598 1.94601 4.27695 5.05389 4.66895 1.94598 4.66895 5.05389 4.27698 
1.94598 5.44598 4.27698 1.94598 4.66895 5.05389 1.94598 4.66895 5.05389 4.27698 1.94598 4.27695 
1.94601 5.05389 1.94598 5.05389 5.44598 5.83096 4.66895 5.05389 4.27695 1.94598 5.05389 5.44601 
1.94601 2.33093 1.94598 4.66895 4.66895 5.05389 1.94601 3.892 2.33093 3.89203 3.89197 3.89203 
2.33093 3.892 3.892 3.89197 3.89203 3.89197 2.33099 3.89197 0 ]ysh
458 178.92 mo
(Copyright \(C\) 1988-1992 by Cambridge University Press.Programs Copyright \(C\) 1988-1992 by Numerical Recipes Software. )
[5.05389 3.89197 3.89203 3.5 2.33093 1.55389 3.89203 3.89197 1.94598 1.94604 2.33093 5.05389 
2.33093 1.94598 3.89203 3.89203 3.89197 3.89197 2.33099 3.89197 3.89203 3.89197 3.89203 1.94598 
3.89197 3.5 1.94604 5.05389 3.89197 5.83096 3.892 2.33093 1.55389 3.89203 3.89197 3.89203 
1.94598 5.05389 3.892 1.55389 3.5 3.892 2.33093 3.5 1.55389 1.94601 3.5 1.94601 
4.66895 2.33093 3.892 3.5 3.5 3.69601 4.66895 2.33093 3.892 3.892 2.33093 3.89203 
5.83093 3.5 1.94598 5.05389 3.89203 3.89197 3.5 2.33096 1.55389 3.892 3.892 1.94601 
1.94598 2.33093 5.05389 2.33096 1.94601 3.89197 3.89203 3.89197 3.89203 2.33093 3.892 3.892 
3.892 3.892 1.94598 3.89203 3.5 1.94598 5.05389 3.892 5.83096 3.89197 2.33096 1.55389 
3.5 3.892 1.55389 1.94598 5.05389 3.89203 3.5 1.55389 3.89197 3.89203 3.5 1.94598 
4.66895 3.89197 1.94604 1.94598 5.05389 3.89197 2.33099 3.89197 1.94598 0 ]ysh
449.999 178.92 mo
(Permission is granted for internet users to make one paper copy for their own personal use. Further reproduction, or any copyin)
[4.66895 3.89203 2.33093 5.83093 1.55389 3.5 3.5 1.55389 3.89197 3.89203 1.94598 1.55389 
3.5 1.94598 3.89203 2.33093 3.89203 3.89197 1.94604 3.89197 3.89197 1.94604 1.94598 3.89203 
2.33093 1.94598 1.55389 3.89197 1.94604 3.89197 2.33093 3.89203 3.89203 1.94598 1.94598 3.892 
3.5 3.892 2.33093 3.5 1.94601 1.94601 3.89197 1.94601 5.83096 3.89197 3.5 3.89203 
1.94598 3.892 3.892 3.892 1.94601 3.89197 3.89203 3.89197 3.89203 2.33093 1.94598 3.5 
3.89203 3.89197 3.5 1.94601 1.94601 3.89197 2.33096 1.94601 1.94598 3.892 3.892 1.55389 
2.33093 1.94601 3.892 5.05389 3.892 1.94601 3.89197 3.89203 2.33093 3.5 3.892 3.892 
3.892 1.55389 1.94601 3.89197 3.5 3.89203 1.94598 1.94598 4.27698 3.89197 2.33096 1.94601 
3.89197 3.89203 2.33093 1.94598 2.33096 3.892 3.892 2.33096 3.89197 3.89203 3.89197 3.5 
1.94598 1.55389 3.89203 3.89197 1.94604 1.94598 3.89197 2.33099 1.94598 3.89197 3.89203 3.5 
1.94598 3.5 3.89203 3.89197 3.5 1.55389 0 ]ysh
449.999 573.034 mo
(g of machine-)
[3.89203 1.94598 3.89197 1.94604 1.94598 5.83093 3.89203 3.5 3.89197 1.55389 3.89203 3.89197 
0 ]ysh
441.999 178.92 mo
(readable files \(including this one\) to any servercomputer, is strictly prohibited. To order Numerical Recipes booksor CDROMs, v)
[2.33093 3.89203 3.89197 3.89203 3.89197 3.89203 1.55389 3.89197 1.94598 1.94604 1.55389 1.55389 
3.89197 3.5 1.94604 2.33093 1.55389 3.89197 3.5 1.55389 3.89203 3.89197 1.55389 3.89203 
3.89197 1.94598 1.94604 3.89197 1.55389 3.5 1.94598 3.89203 3.89203 3.89197 2.33093 1.94601 
1.94601 3.89197 1.94601 3.892 3.892 3.5 1.94601 3.5 3.89197 2.33096 3.5 3.892 
4.08093 3.5 3.89203 5.83093 3.892 3.892 1.94598 3.89203 2.33093 1.94598 1.94601 1.55389 
3.5 1.94601 3.5 1.94598 2.33093 1.55389 3.5 1.94601 1.55389 3.5 1.94601 3.89197 
2.33096 3.892 3.892 1.55389 3.892 1.55389 1.94598 3.89203 3.89197 1.94601 1.94601 4.27692 
3.89203 1.94598 3.892 2.33096 3.89197 3.89203 2.33093 1.94598 5.05389 3.89203 5.83093 3.892 
2.33096 1.55389 3.5 3.89197 1.55389 1.94601 5.05389 3.892 3.5 1.55389 3.892 3.892 
3.5 1.94598 3.89203 3.89197 3.89203 3.5 5.25 3.89197 2.33093 1.94604 5.05389 5.05389 
5.05389 5.44598 5.83093 3.5 1.94598 1.94604 0 ]ysh
441.999 576.87 mo
(isit website)
[1.55389 3.5 1.55389 1.94598 1.94604 5.05389 3.89197 3.89203 3.5 1.55389 1.94598 0 
]ysh
433.999 178.92 mo
(http://www.nr.com or call 1-800-872-7423 \(North America only\),or send email to directcustserv@cambridge.org \(outside North Amer)
[3.89203 1.94598 1.94598 3.89197 1.94604 1.94598 1.94598 5.05389 5.05389 5.05389 1.94598 3.89203 
2.33093 1.94598 3.5 3.89203 5.83093 1.94598 3.89203 2.33093 1.94598 3.5 3.89203 1.55389 
1.55389 1.94598 3.89203 2.33093 3.89203 3.89197 3.89197 2.33099 3.89197 3.89203 3.89197 2.33096 
3.892 3.892 3.892 3.892 1.94601 2.33093 5.05389 3.892 2.33096 1.94598 3.892 1.94601 
4.66895 5.83093 3.892 2.33096 1.55389 3.5 3.89197 1.94601 3.892 3.892 1.55389 3.5 
2.33096 3.69598 3.892 2.33096 1.94598 3.5 3.892 3.892 3.892 1.94601 3.89197 5.83096 
3.892 1.55389 1.55389 1.94598 1.94601 3.892 1.94598 3.89203 1.55389 2.33093 3.892 3.5 
1.94601 3.5 3.89197 3.5 1.94601 3.5 3.892 2.33093 3.5 7.10501 3.5 3.892 
5.83093 3.89203 2.33093 1.55389 3.892 3.892 3.892 1.94601 3.89197 2.33093 3.89203 1.94598 
2.33093 3.89203 3.89197 1.94604 3.5 1.55389 3.89197 3.89203 1.94598 5.05389 3.89197 2.33099 
1.94598 3.89197 1.94604 4.66895 5.83093 3.89197 0 ]ysh
433.999 588.455 mo
(ica\).)
[1.55389 3.5 3.89203 2.33093 0 ]ysh
%%IncludeResource: font Helvetica-BoldOblique
/ARMEJD+Helvetica-BoldOblique /Helvetica-BoldOblique findfont ct_VMDictPut
/ARMEJD+Helvetica-BoldOblique*1 
[46{/.notdef}rp /period 4{/.notdef}rp /three /four 14{/.notdef}rp /C 4{/.notdef}rp 
/H 6{/.notdef}rp /O 3{/.notdef}rp /S /T /.notdef /V 
10{/.notdef}rp /a /b /c /d /e 2{/.notdef}rp /h 
/i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r 
/s /t /u /.notdef /w 136{/.notdef}rp]
ARMEJD+Helvetica-BoldOblique nf
ARMEJD+Helvetica-BoldOblique*1 [14.944 0 0 -14.944 0 0 ]msf
72 123.84 mo
(3.4HowtoSearchanOrderedTable)
[8.30886 4.15443 12.5081 10.7893 8.89008 16.3069 4.97623 13.9307 9.96753 8.30885 8.30885 5.57251 
8.18932 13.8111 8.30887 13.9307 11.6264 5.57251 9.13066 8.30888 5.81308 8.30887 13.9307 7.93066 
8.3089 9.01111 4.15442 0 ]xsh
%%IncludeResource: font Times-Roman
/ARMEJB+Times-Roman*1 
[39{/.notdef}rp /quoteright /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period 
/.notdef /zero /one /two 3{/.notdef}rp /six /seven 2{/.notdef}rp 
/colon /semicolon 5{/.notdef}rp /A /.notdef /C 2{/.notdef}rp /F 
/G /.notdef /I 3{/.notdef}rp /M 5{/.notdef}rp /S /T 
2{/.notdef}rp /W 9{/.notdef}rp /a /b /c /d /e 
/f /g /h /i /.notdef /k /l /m 
/n /o /p /q /r /s /t /u 
/v /w /x /y /z 47{/.notdef}rp /quotedblleft 3{/.notdef}rp 
/fi 11{/.notdef}rp /quotedblright 69{/.notdef}rp]
ARMEJB+Times-Roman nf
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
91.92 153.84 mo
(Supposethatyouhavedecidedtousesomeparticularinterpolationscheme,)
[5.5392 4.9813 4.9813 4.9813 4.9813 3.87537 8.02374 2.76959 4.98131 4.42323 6.60919 4.98131 
4.98129 8.58179 4.98131 4.18314 4.86176 8.14326 4.98131 4.42325 4.42323 2.76961 4.98129 4.42325 
8.58179 2.76959 8.70134 4.98129 3.87538 8.26282 3.87538 4.98131 7.75092 8.14325 4.98132 4.42322 
3.31747 2.76962 2.76959 4.42322 4.98132 2.76959 4.42325 6.91797 2.76959 4.98129 2.76959 4.42328 
3.31744 4.98132 4.98129 2.76962 4.42322 2.76959 2.76959 4.98132 8.46124 3.87537 4.42328 4.98126 
4.42328 7.75085 4.42328 0 ]xsh
71.9998 165.84 mo
(suchasfourth-orderpolynomialinterpolation,tocomputeafunction)
[3.87537 4.9813 4.42325 8.34168 4.42325 7.23576 3.31747 4.98131 4.98129 3.31747 2.76961 4.98129 
3.31747 4.98131 3.31747 4.98129 4.42325 6.19766 4.98129 4.98129 2.76961 4.98131 4.98129 4.98129 
7.75092 2.76959 4.42325 5.88989 2.76959 4.98129 2.76962 4.42322 3.31747 4.98132 4.98129 2.76959 
4.42325 2.76962 2.76959 4.98129 4.98129 5.85104 2.76959 8.34167 4.42325 4.98129 7.75092 4.98129 
4.98129 2.76962 7.54352 7.9032 3.31747 4.98129 4.98129 4.42325 2.76962 2.76959 4.98129 0 
]xsh
%ADOBeginSubsetFont: MMFAAA+CMMI10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /MMFAAA+CMMI10 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/BaseFontName (CMMI10) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 46 /period put
dup 102 /f put
dup 120 /x put
def
/FontBBox {-32 -250 1048 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 -0 683 705 431 442 453 466] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [31] def
/StdVW [72] def
/StemSnapH [25 31] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
5 dict dup begin
/comma <1C60D8A8C9B854D0F83823896563389F99F93F23FF16CE93B743AB7C
376AC821786AAEDE7270059A6FF1CFEB37235A20C21D908EB2B0616D97378D86
D24E973D8D07D83E6BD6C0E31C021B3C13AA12FA9436B6F6> |-
/period <1C60D8A8C9B854D088E8E1B7306BEE53606180C9D8E09A11AAC6162
445F3509DC276AA079959B131> |-
/f <1C60D8A8C9B751D5041DDABC01027AC553E3B7A1CD6CA4EBFE1C8C71036B
AF7C331DFCD3108165E86A060250156BFE35CB7A84735E8BC28644095A9AA059
33DE617DFC95FD974A7177429B49121CF275958CF86390C5EE0030D4C1FB6AA3
583F7A1577E41185A63151AD1338C046ABC48CAE3EF775FB62625D14243EB8AB
6FF1DDA1DCE5F51F223B618E6983A6BC6E53269BF566609279A309D9C5924CEA
C7619E7AF633ABFEFD325418A17BB4D2062CC9CF4CC5B64BBBCA7129F7566E6B> |-
/x <1C60D8A8C9B7FF2B5E691B02ABF5E6B36349D70F01EDCA1CD9EAA7D42C0C
D3775D212B1A0D3DAC3A979A163114C48B359F5B767254ECAFBA627EEAB5004E
5F287E21D1D40C030BD9B088F0AD749D63A2E8A505BC208CD0E68AC6F5ABB682
EEEDF99234D0D423385B905D018FF751827D822E9B656B7606E7C9937680BD2F
E67DB02D1BD1BEEA015CC64F197C1A9477A24BC5FD41A198210AE3B1CF7C11C4
61E37B78D075740C0279207334FF27799FB349732AFD1D730E14B11CF1BC247B
EFBEC79CE40DBC31725DADD888B5B0345E950DFABA> |-
/.notdef <1C60D8A8C9B81F2CC3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEJE+CMMI10 /MMFAAA+CMMI10 findfont ct_VMDictPut
/ARMEJE+CMMI10*1 
[44{/.notdef}rp /comma /.notdef /period 55{/.notdef}rp /f 17{/.notdef}rp /x 
135{/.notdef}rp]
ARMEJE+CMMI10 nf
ARMEJE+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
354.897 165.84 mo
(f)sh
%ADOBeginSubsetFont: BKUAAA+CMR10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /BKUAAA+CMR10 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMR10) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 49 /one put
dup 61 /equal put
dup 103 /g put
dup 108 /l put
dup 111 /o put
def
/FontBBox {-251 -250 1009 969} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 -0 683 705 431 448 666 677] def
/OtherBlues [-206 -194] def
/BlueScale 0.04379 def
/StdHW [31] def
/StdVW [69] def
/StemSnapH [22 31] def
/StemSnapV [69 89] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
8 dict dup begin
/parenleft <1C60D8A8C9B7361F0ED0EA8752539777BEBB9273D40DABBCD23C
A817496382F6B840E6A1C46E658A7FF24A9D166F78212AF4C797827975E02701
CDC72E754F4000DECEE47D430E4D5342BD530D47AAD28508160E8A23665C3BDA
FA73039FCB9EE1AB6A300F016FDD82E5> |-
/parenright <1C60D8A8C9B7361F0ED0EA8752539777A78857B993CC758AF4B
0072B7985470F64120F1034EB48F73B7B659942A90C7AB7260686E937E5258E6
B309A8E598CE40EEFE407AA4D2ED07136A6BD81A0336437FF05EC04649152730
73C8D27D659011926A923EA546CAE8D> |-
/one <1C60D8A8C9B7A73DC579B9CE13A4EA8C203AFC890ABD6F58341B006CF1
BDD8FED3A7238E01F751FEAC75885229C293891E5636AD630D9C884528B6FEF0
0728A740ED77D054B4743ECA5E3947520FEF6B23D548765D11> |-
/equal <1C60D8A8C9B6FF86F5F7C936DCCEFAB8EDDDE1C4D97CDB55B3C9C87D
7B2BAB4AEAEAC0B654A106A73C0C0E7D9BE088117935915C3B6ED2E10E45916B
408B696BFD54F5ED27BB8E0386045AAF2DF481> |-
/g <1C60D8A8C9B7A73DB58EA28807584EB19BC6EA1448A12312E623B90358A1
6C40D52FF50AB2BCF83396829D3E501BD0EAB8595D9693E632ABAF05A4D1FBD5
E9FB32E59BDDF670BD3805B1A8647E1D2641030D018FCD259301AC116F3DEE87
AA68CECE526FB7B8BC0206EAEFB580DA05969530F8D40CD15579447988D4CF07
5C24F15E32C0A9AC369D08351B0D49CAFF731E593F6C55EE74B16DE9D9A4B199
3D1CF0FF1D3A57A52A0C64F106D414FF112A5DA34DEE3AB850B6A4492C25D3F0
9EFC86EFE140D828B1F4BAE5664F14014926ED1A5AFBCC814A3428F143CF5FB2
88702BF23054721A3BAA8027EF0D34A7A361A40A12717277178C5820C35A1131
71DEF9DBB455B7A9D7BB98406120BD93C5B4D04664B09F3E37553C20D6> |-
/l <1C60D8A8C9B854D088B75C708D03260E3AEADF1314CE13277507936B27F5
AB254B666C657D2D6BB8BB0FB6528E764DDF40375F7021BA974B543982E8407F
79508DC5A64E> |-
/o <1C60D8A8C9B7A73DCEB07E09D16841D605E4F67059E6B258F546B80703E4
CDAF20027B900118209D5372F965F2045D50C02A29110A048C891DEBA3210CDF
C5CDE2309C0CDE0E4855E9F6D8954C4C68826A14AD2E4C6227A036D85D304D6A
96FEAA92DEC3CD1B9F4AD57B5F1EBAB070FE911461A7D5B958F5> |-
/.notdef <1C60D8A8C9B81F2CC3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEJF+CMR10 /BKUAAA+CMR10 findfont ct_VMDictPut
/ARMEJF+CMR10*1 
[40{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one 11{/.notdef}rp /equal 41{/.notdef}rp 
/g 4{/.notdef}rp /l 2{/.notdef}rp /o 144{/.notdef}rp]
ARMEJF+CMR10 nf
ARMEJF+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
360.896 165.84 mo
(\()sh
ARMEJE+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
364.736 165.84 mo
(x)sh
ARMEJF+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
370.375 165.84 mo
(\))sh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
377.694 165.84 mo
(froma)
[3.31747 3.31747 4.98129 10.9908 0 ]xsh
71.9998 177.72 mo
(setoftabulated)
[3.87537 4.42325 5.88988 4.9813 6.19766 2.7696 4.42324 4.7412 4.9813 2.7696 4.42324 2.76961 
4.42323 0 ]xsh
ARMEJE+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
136.53 177.72 mo
(x)sh
%ADOBeginSubsetFont: IPIBAA+CMMI7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /IPIBAA+CMMI7 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/BaseFontName (CMMI7) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 105 /i put
def
/FontBBox {0 -250 1171 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 -0 683 703 431 441 451 463] def
/OtherBlues [-204 -194] def
/BlueScale 0.04379 def
/StdHW [32] def
/StdVW [81] def
/StemSnapH [32 36] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/i <1C60D8A8C9B70721B9F639782C8460B97E82801AD0D8A919DC5D9CAA4C68
FBE7833AC2F83808014E455261AE4698D1787D69206B38071478CB577B72EF41
ED0606485A0805B327A9541BF99C223B853428820C7432E93F64332505182833
A9A1726F67F49595C0D6B4E36728E08E3A3FFE1D3400C0426C9F7D546B609ED9
847726C531FCA5CF35B9B04381F81797F4E937A123F607399D53953A016040EB
4EB08C885D7568DA709FDAC1486D> |-
/.notdef <1C60D8A8C9B81F2CC3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEJG+CMMI7 /IPIBAA+CMMI7 findfont ct_VMDictPut
/ARMEJG+CMMI7*1 
[105{/.notdef}rp /i 150{/.notdef}rp]
ARMEJG+CMMI7 nf
ARMEJG+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
142.44 179.16 mo
(i)sh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
145.8 177.72 mo
('sand)
[2.71773 6.99565 4.42325 4.98131 0 ]xsh
ARMEJE+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
172.779 177.72 mo
(f)sh
ARMEJG+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
177.84 179.16 mo
(i)sh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
181.2 177.72 mo
('s.Thenyouwillneedafastwayof\256ndingyourplace)
[2.71773 3.87537 7.77083 6.08708 4.98129 4.42325 7.86148 4.98129 4.98131 7.74094 7.19286 2.76959 
2.76961 5.88988 4.98132 4.42322 4.42328 7.86145 7.423 3.19791 4.42325 3.8754 5.88986 7.0733 
4.42325 7.98102 4.98132 6.19763 5.53922 4.98129 4.98132 2.76959 4.98129 7.86148 4.98132 4.98129 
4.98129 6.07712 4.98129 2.76959 4.42328 4.42322 0 ]xsh
71.9999 189.72 mo
(inthetableof)
[2.7696 7.98104 2.7696 4.9813 7.42299 2.76959 4.42325 4.9813 2.7696 7.42299 4.9813 0 
]xsh
ARMEJE+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
131.591 189.72 mo
(x)sh
ARMEJG+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
137.52 191.16 mo
(i)sh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
140.88 189.72 mo
('s,givensomeparticularvalue)
[2.71773 3.87537 5.7305 4.98129 2.5295 4.86176 4.42325 7.86148 3.87537 4.98131 7.7509 7.30344 
4.98129 4.42325 3.31747 2.76959 2.76961 4.42326 4.98129 2.76959 4.42325 6.19766 4.7412 4.42323 
2.76961 4.98131 0 ]xsh
ARMEJE+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
267.047 189.72 mo
(x)sh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
275.926 189.72 mo
(atwhichthefunctionevaluation)
[4.42325 5.76935 7.19284 4.98129 2.76959 4.42325 7.98105 2.76959 4.98129 7.423 3.31747 4.98129 
4.98129 4.42325 2.76962 2.76959 4.98129 7.74094 4.18317 4.74118 4.42325 2.76959 4.98132 4.42322 
2.76962 2.76959 4.98129 0 ]xsh
71.9996 201.6 mo
(isdesired.Thisproblemisnotproperlyoneofnumericalanalysis,butitoccursso)
[2.7696 6.87511 4.9813 4.42325 3.87537 2.7696 3.31747 4.42324 4.9813 7.17108 6.08707 4.98129 
2.76961 6.63503 4.98129 3.31747 4.98129 4.98129 2.76961 4.42325 10.391 2.76961 6.87511 4.98131 
4.98129 5.52924 4.98129 3.31747 4.98132 4.98129 4.42325 3.31747 2.76959 7.6214 4.98129 4.98129 
7.18289 4.98129 6.07712 4.98129 4.98132 7.75089 4.42325 3.31747 2.76959 4.42325 4.42325 5.4097 
4.42325 4.98129 4.42325 2.76959 4.98129 3.87537 2.76962 3.87537 5.49039 4.74121 4.98129 5.52924 
2.76962 5.76932 4.98129 4.42325 4.42325 4.98129 3.31747 6.63504 3.87537 0 ]xsh
71.9996 213.6 mo
(ofteninpracticethatitwouldbenegligentofustoignoreit.)
[4.9813 3.31747 2.7696 4.42324 8.10159 2.76959 8.10159 4.98129 3.31747 4.42325 4.42325 2.76959 
2.76961 4.42325 7.54352 2.76961 4.98131 4.42325 6.00943 2.76959 6.00945 7.07329 4.98131 4.98131 
2.76959 8.10159 4.98129 7.66309 4.98129 4.30371 4.98129 2.76959 2.76959 4.98129 4.42325 4.98132 
5.76932 4.98129 6.43777 4.98129 7.1152 2.76959 8.22113 2.76962 4.98129 4.98129 4.98129 3.31747 
7.42297 2.76962 2.76959 0 ]xsh
91.9198 225.6 mo
(Formally,theproblemisthis:Givenanarrayofabscissas)
[5.41965 4.98129 3.31747 7.7509 4.42325 2.7696 2.7696 4.38155 4.29089 2.76959 4.98131 6.46358 
4.98131 3.31747 4.98131 4.98129 2.76959 4.42325 9.55115 2.76959 5.91571 2.76962 4.98129 2.76959 
3.87538 6.24954 7.19286 2.5295 4.86174 4.42325 6.78154 4.42325 7.02164 4.42323 3.31747 3.31747 
4.42325 6.90106 4.98132 5.23724 4.42325 4.98129 3.87537 4.42328 2.76959 3.87537 3.87537 4.42328 
0 ]xsh
%ADOBeginSubsetFont: IMLBAA+CMTT10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /IMLBAA+CMTT10 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMTT10) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 115 /s put
dup 116 /t put
dup 120 /x put
def
/FontBBox {-4 -235 731 800} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 611 622 431 440] def
/OtherBlues [-229 -222] def
/BlueScale 0.04796 def
/StdHW [61] def
/StdVW [69] def
/StemSnapH [61] def
/StemSnapV [69] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
18 dict dup begin
/plus <1C60D8A8C9B78E05CEC0B7C247655374E3BE05C48AC4DBEBF3284E217
3BB9257D75F1336D85639CE1B44879A6274F433DF01C312507B4ED5702B826BC
FDBE56E2B89D60C1AD38DAF9060DAEE8BBDA089D3223CA93B6018460384EA> |-
/zero <1C60D8A8C9B78E0592363F02EABA8630279B0EA86344C40570AA3BC19
20CB8E12235D0FD4AA9EC2E54DF6465132340CE8EFDCD5C601247BD44E7419AD
2B5A968D240080A828315E2409F038E226358EF4149DC6CD6CA47B409BDAFFFD
3> |-
/one <1C60D8A8C9B78E05996B35731BD1E8649ABE00B4A62CA06EFFF6A69179
B83E2350F8D68EAD6865F6D8537E41F0E30FE946EE08B7943FE12AABC935EC50
D487D4B94DA6881ACD175F5D02F7926A03A6A7857F69CA1B3AEACC576ECE133B
94CCC57736> |-
/bracketleft <1C60D8A8C9B78E052AEAA9A593768B15FFD788D3D7E1905BBD
4EED1E00FA6EC2F77BF09AEFB342DFDEB6AA9C18C144877AF0831574EC612A62
23C5AFC25B6029D6528AF0581717> |-
/bracketright <1C60D8A8C9B78E052AEAA9A593768B15F03FEC67971B74369
11DED884DEC3124638157144FC2A2E30CC9215269E50536B11C6AE7D3255DE92
485F22252F3368E5509B6EBE5E2A7> |-
/a <1C60D8A8C9B78E05996B357CFC3D6A68429CE44210300ADBF33D3BA65564
22DB30AA2C2DE7C9116C427A19DC90F7A98606BDBFB27DF4235F2AAAEBA26184
E5C8D38867C076F8FDD8600853EA72DC9D3F2800940687EC72A6F334200BA15B
ADC95674191868FBF18D675A9DF803EE70B50222D29881504A1059B3AFD24FEF
30B48C4F1746ADB09F7A9701B6D22B65D1EEEC5210E72A1090FCFC77ADC9FE9D
0DCBF3CF0D355063BE501BF4AD72162F8BF2> |-
/c <1C60D8A8C9B78E0597CED2992C40EF0933D2EB4E9751CE6D26C4230365A0
1A77D6560F9665D142AC6129BE55DB79B05CBF5497F12914BB4720E37487DE2D
C750A4E03E76022EAF5BAC6844F7A9B88979942D3D8CB528AD7DB48ACEAE040A
6F2C3348862BFCF3> |-
/e <1C60D8A8C9B78E0597CED296E4DF68F57D691EB40490BC0E3694A5AD16EF
8A4C42509F5EC82DED1ADE3F99EFB62E9AEDC7EDD5864ED4AD854BBBC30F02BB
3445BE2D343398E4E410DA907E4AF891E988EBF702755D737A3F1D7180EE892E
12328CBC80382D1CE834408AB8F4B8> |-
/i <1C60D8A8C9B78E05996B3573566568C75479E22564A3834F3FF0CB347574
CC2A502F85F740F591300E69B039D730185D703A65E03A7AE8A5896360C52193
422D46DCA3858C85C7D3735F0189AE0EC4B26122B3CC5C6F5305A44DCAC7D12D
B652EFBBCAE7FA1BC7AD5F1A111355C1CBFB8911D5457DF2D53DF380C7> |-
/j <1C60D8A8C9B78E05E95DE290973D6E3674FD41050C9E7D0273D33E7699F2
FB9B5536B33664BF450FAC4C4F7DBAEFDD64238BE8BBF8705C94D41864D5BAE4
E3DBB0078E2B6E2BB0632B2AC43E39B59AE162F8F427A40CDDB7A8F8C6BD486F
F93D11512FCE1804C8F7767DDB46DAC923CC69CE1315428707B94A99F2F3C382
6FD38B8F3556856FDB7040ACFF1D7E547782B4B6DB4D57D6DDB03D> |-
/l <1C60D8A8C9B78E05996B3573EACCBDF587501E2E2A7DAB07F1EC7DA6B38D
A835EA10078B9E2B100F85897D223789968CA4EAC10C4518C8484F6D351A45C2
631D45E58DD2D017C08AC6FE6E789829FF> |-
/n <1C60D8A8C9B78E05996B3573566568D3BD7DBC88EC0DBB494335B1E5E2B7
545BF5C126FAD117D4185F678CBDBB86A3D5BF7A1FC96E952495142FC1403365
3DC2225A5B237F6F93C2AB3A660518B2D756CB3253126D6E9E75DC70BD3EABEF
FBE1F4DCC612E90D6C3F42A291FC34C6A59A26A0FAEA5C060CBCF99AA0FD3CFE
C907624115BA8AEF49BE1FD04968360B30D105FA904CA39A0D7F> |-
/o <1C60D8A8C9B78E0597CED2992C40EF191A4C45874D1ADBEC70B4332BD16F
C6E72E6C0814914F733B15187F2AE02ECDDAAD323B8CE54E5890D7A8B16ADA89
C162996B3F0E21E0F239A7E5BD13615A4D755DB24A> |-
/p <1C60D8A8C9B78E05E9579C8066B5A1A06B36B7FF66195215C79244992D77
B97EFBEA0A8D05A6CA95BB13E70354726AE8C05FABCDDE3F7B30CB6672B8B8A3
301542E48301FFDEAE69AFD0B49FEA49CBD0CA48EE7014446B9B4ED70741C91C
2C1D2C9254171ABA5A747575563C7A28538E954047A3BBAECB0D48226D3CC60A
10275408D602711ED86FED017A11D96C70DEF32508C2E3F127F50D> |-
/s <1C60D8A8C9B78E0597CED2992C40EF0E23ED992D0847EBD4D7A32405CA34
8BE21E2815FE9E3B4F6CE7DE8ED79CBFF6780D984520D4E47AFC689725072389
774DDC786F016BFD014DEFD2D215C8F3AE1E706DA78EBC69748F186A9961B36E
72753BE06922009C0C56DA25E5958E9D5F9FCB985581D87937C60A27317D1C79
3A386C4DBD7CAA3075189E1D814800E18C62454A70859C018D7795D755A68960
0B8BC77ED035A4776C85B9D6A70EB62E3E37E5723F2E6B9267> |-
/t <1C60D8A8C9B78E0597CED299252BC7B05D988F4F7EE667DF4F850255BD28
5E9BDB6F1D9734666CE6E99228B4903C845663259737533F426C749652248BD5
8E77C356FC8FFF7AAAF4F3EDBBF4F304000495C28895CB8E17AE8F20B0D8171A
FE2F325DCA0172B98285FEDEFC5314F65074B9> |-
/x <1C60D8A8C9B78E05996B3573566568995105A112EC758F266EB06CA3D030
D24193382A89A5EF5D11E36C2DB4A4D3E11F57036BAB7F8643E2D88760A64A76
20AA8F58DD7AAD84A999CEBD138256AF5276829F5EF2F7EBAE1D157FAE0734E6
C7087C366BC363834BDFEC21C84A88208EC7054A8B9EAC0C20BC1441822D6372
A252B0319D772C186FDD8B3CADAB9A0E90A21E7C08A8467C30BB500007> |-
/.notdef <1C60D8A8C9B78E051C> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEJH+CMTT10 /IMLBAA+CMTT10 findfont ct_VMDictPut
/ARMEJH+CMTT10*1 
[43{/.notdef}rp /plus 4{/.notdef}rp /zero /one 41{/.notdef}rp /bracketleft /.notdef 
/bracketright 3{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp 
/i /j /.notdef /l /.notdef /n /o /p 
2{/.notdef}rp /s /t 3{/.notdef}rp /x 135{/.notdef}rp]
ARMEJH+CMTT10 nf
ARMEJH+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
318.971 225.6 mo
(xx[j])
[5.27911 5.27911 5.27914 5.27911 0 ]xsh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
345.127 225.6 mo
(,)sh
ARMEJH+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
349.778 225.6 mo
(j)sh
ARMEJF+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
355.057 225.6 mo
(=)sh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
362.856 225.6 mo
(1,2,)
[4.98129 4.41046 4.98129 0 ]xsh
ARMEJE+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
381.76 225.6 mo
(...,)
[4.44131 4.44135 4.44131 0 ]xsh
ARMEJH+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
397.837 225.6 mo
(n)sh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
403.117 225.6 mo
(,)sh
71.9996 237.481 mo
(withtheelementseithermonotonicallyincreasingormonotonicallydecreasing,and)
[7.19285 2.7696 2.7696 7.50084 2.76961 4.9813 6.82323 4.42325 2.76959 4.42325 7.7509 4.42325 
4.98129 2.76961 6.39493 4.42323 2.76961 2.76959 4.98129 4.42325 5.71747 7.7509 4.98131 4.98129 
4.98129 2.76961 4.98131 4.98129 2.76959 4.42325 4.42325 2.76959 2.76962 7.14117 2.76959 4.98129 
4.42325 3.31747 4.42325 4.42325 3.87537 2.76962 4.98129 7.26175 4.98129 5.83701 7.75092 4.98129 
4.98129 4.98129 2.76962 4.98129 4.98129 2.76959 4.42325 4.42325 2.76959 2.76959 7.1412 4.98129 
4.42325 4.42325 3.31747 4.42325 4.42325 3.87537 2.76959 4.98132 4.98129 4.77109 4.42325 4.98129 
0 ]xsh
71.9996 249.481 mo
(givenanumber)
[4.9813 2.5295 4.86175 4.42325 7.98103 7.54353 4.98129 4.98131 7.7509 4.9813 4.42324 0 
]xsh
ARMEJH+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
137.635 249.481 mo
(x)sh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
142.794 249.481 mo
(,\256ndaninteger)
[5.85103 5.53922 4.98129 8.10159 4.42325 7.98103 2.76961 4.98129 2.76959 4.3037 4.98131 4.42325 
0 ]xsh
ARMEJH+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
210.217 249.481 mo
(j)sh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
218.616 249.481 mo
(suchthat)
[3.87538 4.98129 4.42325 7.98103 2.76961 4.98129 4.42325 0 ]xsh
ARMEJH+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
257.942 249.481 mo
(x)sh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
266.341 249.481 mo
(liesbetween)
[2.76959 2.76962 4.42322 7.11523 4.98129 4.42325 2.76959 7.19284 4.42325 4.42325 0 ]xsh
ARMEJH+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
319.614 249.481 mo
(xx[j])
[5.27911 5.27911 5.27914 5.27911 0 ]xsh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
348.889 249.481 mo
(and)
[4.42325 4.98129 0 ]xsh
ARMEJH+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
366.395 249.481 mo
(xx[j+1])
[5.27911 5.27911 5.27914 5.27911 5.27911 5.27911 0 ]xsh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
402.989 249.481 mo
(.)sh
71.9986 261.48 mo
(Forthistask,letusde\256ne\256ctitiousarrayelements)
[5.41965 4.98129 6.79741 2.7696 4.9813 2.7696 7.59541 2.7696 4.42325 3.87537 4.9813 6.33024 
2.76959 4.42325 6.48962 4.98131 7.47487 4.98129 4.42325 5.5392 4.98131 7.90317 5.53922 4.42325 
2.76959 2.76959 2.76961 2.76961 4.98129 4.98131 7.47585 4.42325 3.31747 3.31747 4.42325 8.46124 
4.42325 2.76959 4.42325 7.75092 4.42322 4.98132 2.76959 0 ]xsh
ARMEJH+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
285.101 261.48 mo
(xx[0])
[5.27911 5.27911 5.27914 5.27911 0 ]xsh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
314.856 261.48 mo
(and)
[4.42325 4.98129 0 ]xsh
ARMEJH+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
332.722 261.48 mo
(xx[n+1])
[5.27911 5.27911 5.27914 5.27911 5.27911 5.27911 0 ]xsh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
373.035 261.48 mo
(equalto)
[4.42325 4.98129 4.98129 4.42325 6.24954 2.76959 0 ]xsh
71.9986 273.361 mo
(plusorminusin\256nity\(inwhicheverorderisconsistentwiththemonotonicityofthe)
[4.9813 2.7696 4.9813 6.39492 4.9813 5.83701 7.7509 2.7696 4.9813 4.9813 6.27537 2.76959 
4.98131 5.5392 4.98129 2.76961 2.76961 7.38129 3.31747 2.76959 7.50085 7.19284 4.98129 2.76961 
4.42325 4.98131 4.18314 4.86174 4.42325 5.59792 4.98129 3.31747 4.98131 4.42323 5.71747 2.76959 
6.51547 4.42323 4.98131 4.98129 3.87537 2.76959 3.8754 2.76962 4.42322 4.98132 5.16956 7.19287 
2.76959 2.76959 7.50085 2.76959 4.98129 6.94278 7.75092 4.98126 4.98132 4.98132 2.76959 4.98126 
4.98132 2.76959 4.42328 2.76959 2.76959 7.14117 4.98132 5.83698 2.76965 4.98126 0 ]xsh
71.9986 285.361 mo
(table\).Then)
[2.7696 4.42325 4.9813 2.7696 4.42324 3.31747 8.73022 6.08707 4.9813 4.42325 0 ]xsh
ARMEJH+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
127.128 285.361 mo
(j)sh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
135.767 285.361 mo
(willalwaysbebetween0and)
[7.19284 2.76961 2.76961 6.24953 4.42325 2.65005 7.07329 4.42325 4.98129 7.23576 4.98129 7.78363 
4.98129 4.42325 2.76961 7.19284 4.42325 4.42323 8.22115 8.34169 4.42325 4.98129 0 ]xsh
ARMEJH+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
260.823 285.361 mo
(n)sh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
265.981 285.361 mo
(,inclusive;avalueof0indicates)
[6.21069 2.76959 4.98129 4.42325 2.76959 4.98132 3.87537 2.52951 4.86172 4.42325 6.48965 11.143 
4.74121 4.42325 2.76959 4.98129 7.78363 4.98132 6.55731 8.34167 2.76959 4.98132 4.98129 2.76959 
4.42325 4.42325 2.76959 4.42325 0 ]xsh
71.9996 297.241 mo
(\252off-scale\272atoneendofthetable,)
[4.42324 4.98131 3.07737 3.31747 3.31747 3.87537 4.42325 4.42324 2.76961 4.42324 7.06333 4.42325 
5.6498 4.98129 4.98129 7.18289 4.42325 4.98129 7.74095 4.98131 6.0771 2.76961 4.98129 7.18289 
2.76959 4.42325 4.98129 2.76962 4.42325 0 ]xsh
ARMEJH+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
213.192 297.241 mo
(n)sh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
221.351 297.241 mo
(indicatesoff-scaleattheotherend.)
[2.76961 4.98129 4.98131 2.76959 4.42325 4.42325 2.76959 4.42325 6.63501 4.98129 3.07739 3.31747 
3.31747 3.87537 4.42325 4.42325 2.76959 7.06332 4.42325 5.64978 2.76962 4.98129 7.30344 4.98129 
2.76959 4.98132 4.42322 5.95758 4.42325 4.98129 4.98129 0 ]xsh
91.9198 309.241 mo
(Inmostcases,whenallissaidanddone,itishardtodobetterthan)
[3.31747 7.86148 7.7509 4.98131 3.87537 5.6498 4.42325 4.42323 3.87538 4.42325 3.87537 5.49039 
7.19286 4.98131 4.42323 7.74095 4.42325 2.76959 5.76935 2.76959 6.87512 3.87537 4.42325 2.76959 
7.86148 4.42325 4.98131 7.74094 4.98131 4.98129 4.98131 4.42323 5.37085 2.76959 5.76935 2.76959 
6.75555 4.98132 4.42325 3.31747 7.74094 2.76962 7.86148 4.98129 7.86151 4.98126 4.42328 2.76959 
2.76959 4.42325 6.19766 2.76959 4.98132 4.42322 0 ]xsh
%%IncludeResource: font Times-Italic
/ARMEJI+Times-Italic /Times-Italic findfont ct_VMDictPut
/ARMEJI+Times-Italic*1 
[98{/.notdef}rp /b /c /.notdef /e 3{/.notdef}rp /i 4{/.notdef}rp 
/n /o 3{/.notdef}rp /s /t 139{/.notdef}rp]
ARMEJI+Times-Italic nf
ARMEJI+Times-Italic*1 [9.9626 0 0 -9.9626 0 0 ]msf
367.11 309.241 mo
(bisection)
[4.98129 2.76962 3.87537 4.42325 4.42325 2.76959 2.76959 4.98129 0 ]xsh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
403.085 309.241 mo
(,)sh
72.0006 321.241 mo
(whichwill\256ndtherightplaceinthetableinabout)
[7.19285 4.9813 2.7696 4.42324 7.74094 7.19285 2.7696 2.7696 5.6498 5.5392 4.98129 7.74094 
2.76961 4.98131 7.18288 3.31747 2.76961 4.98129 4.98129 5.52925 4.98131 2.76959 4.42325 4.42325 
7.18289 2.76959 7.74095 2.76959 4.98131 7.18289 2.76959 4.42325 4.98129 2.76961 7.30344 2.76961 
7.74094 4.42325 4.98132 4.98126 4.98132 0 ]xsh
ARMEJF+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
279.027 321.241 mo
(log)
[2.76163 5.03909 0 ]xsh
%ADOBeginSubsetFont: GLBBAA+CMR7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /GLBBAA+CMR7 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMR7) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
def
/FontBBox {-27 -250 1122 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 -0 683 703 431 446 664 674] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [36] def
/StdVW [79] def
/StemSnapH [28 36] def
/StemSnapV [79 95] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/two <1C60D8A8C9B7E2CE5B2D2AF3C16D655586ADDFD255F342CC78E0CFD77C
BD9B63EF6E836EA2677FC1E3515560DC8E1709808740B3E922280CDDC6B1DE59
498D3F96D52EB7A68A65E121CBB4EE62A5F7C7620A42A7CFE5CDEB9DCEFA2914
61A983E5129317168388213985652593802B6BD46B323DAA41AA2361FFE1897E
F8609C> |-
/.notdef <1C60D8A8C9B73A41C7> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEJJ+CMR7 /GLBBAA+CMR7 findfont ct_VMDictPut
/ARMEJJ+CMR7*1 
[50{/.notdef}rp /two 205{/.notdef}rp]
ARMEJJ+CMR7 nf
ARMEJJ+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
292.92 323.64 mo
(2)sh
ARMEJH+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
297.36 321.24 mo
(n)sh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
305.399 321.24 mo
(tries.Wealreadydiduse)
[2.76959 3.31747 2.76962 4.42322 3.8754 7.17108 8.5647 7.42297 4.42325 2.76959 3.31747 4.42325 
4.42325 4.98129 7.6214 4.98129 2.76959 7.74094 4.98132 3.87537 0 ]xsh
72.001 333.12 mo
(bisectioninthesplineevaluationroutine)
[4.9813 2.7696 3.87537 4.42325 4.42324 2.76961 2.7696 4.9813 8.22113 2.76961 8.22114 2.7696 
4.98129 7.66309 3.87538 4.98131 2.76959 2.76959 4.98131 7.66309 4.18315 4.74118 4.42325 2.76961 
4.98131 4.42323 2.76961 2.76959 4.98131 8.10158 3.31747 4.98131 4.98129 2.76961 2.76959 4.98131 
0 ]xsh
ARMEJH+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
240.15 333.12 mo
(splint)
[5.27911 5.27913 5.27911 5.27913 5.27911 0 ]xsh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
274.825 333.12 mo
(oftheprecedingsection,soyou)
[4.98129 6.55731 2.76959 4.98132 7.66309 4.98129 3.31747 4.42325 4.42322 4.42325 4.98132 2.76959 
4.98129 7.98105 3.87537 4.42325 4.42325 2.76959 2.76962 4.98129 4.98129 5.85104 3.87537 8.34171 
4.98126 4.98132 0 ]xsh
72.001 345.12 mo
(mightglancebackatthat.Standingbyitself,abisectionroutinelookslikethis:)
[7.7509 2.7696 4.9813 4.9813 5.28915 4.9813 2.7696 4.42324 4.98131 4.42324 6.82323 4.98129 
4.42325 4.42325 7.50085 4.42323 5.4097 2.76961 4.98129 4.42325 2.76959 6.45079 5.5392 2.76959 
4.42325 4.98131 4.98131 2.76959 4.98129 7.38129 4.98132 7.50082 2.76959 2.76959 3.8754 4.42325 
2.76959 3.31747 5.13074 7.06332 4.98129 2.76959 3.8754 4.42322 4.42325 2.76962 2.76959 4.98129 
7.50085 3.31744 4.98132 4.98129 2.76959 2.76959 4.98132 6.82324 2.76959 4.98129 4.98132 4.98129 
6.3949 2.76959 2.76962 4.86176 7.06332 2.76959 4.98129 2.76962 3.87537 0 ]xsh
%ADOBeginSubsetFont: HEJAAA+CMTT8 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /HEJAAA+CMTT8 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMTT8) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 59 /semicolon put
dup 61 /equal put
dup 62 /greater put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 123 /braceleft put
dup 125 /braceright put
def
/FontBBox {-5 -232 545 699} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-10 -0 611 621 431 439] def
/OtherBlues [-228 -222] def
/BlueScale 0.04796 def
/StdHW [66] def
/StdVW [76] def
/StemSnapH [66] def
/StemSnapV [76] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
35 dict dup begin
/parenleft <1C60D8A8C9B7883CF464839EB6B239ED34DD418F4ED0AF7EA422
FC3C6BD7C1B9E173AF8B5BCC28C5CB81F9196D2AD1C32793B0AF5CA66A9E7EFF
3859F2E2087B497AE4C260CFF49E23D28981E45F47C3EA4A16747B95ACBE> |-
/parenright <1C60D8A8C9B7883CF464839EB6B239EDDA334E31DE8AA5AB2EB
6CB7D8C0C56EB81E0625A49A6A93F7A291D9628B42FAF1F0784ABA589B580291
CB9F55D2D8130F5B4EF0FC05173E85D3745B44F55258C525E109A37325D3563> |-
/asterisk <1C60D8A8C9B7883C29B4926474EA12156D8DAE08A133F4EE2C8D5
36C77C7B20F8E6F218ECA6AD4A062649BA1219CB62A50A4ABF117C498067C924
034079DE22B6D6263D8AF5A19F3EA2105B29B51E00AC6DDE1BCE466E5B208DE3
35F4A71D33FCAAEBD2CC600EE111D3D282A34EB2BABF61CC134FCC3240032C61
614242B887F34A79043CB7C8086987F1A1F183552C5D490EA7AFE161D08806F1
73DA36BF0BD9290B77420569447900D53B57F69DCC5717D56> |-
/plus <1C60D8A8C9B7883C15534D4E2BF3167CB61B4809C27DDC21EFB21FA09
72DABB5AA433141802AA985D4B4867AAD091C4467D6F51D68DFE5C69A80C8499
A0497EBA63AD9CF91502A46DAAEADF23CC528CD71DB0DB3D8500392AB73DA> |-
/comma <1C60D8A8C9B7883C3741EA86A23C06E46672DF0D727F341C4FDC7B55
10DA0F848C41FC15917DC25282FE6922A98D871D9DCF3BC18D634ADCBB75D3DC
C8B98738796CFA49F3A2E24C1981> |-
/hyphen <1C60D8A8C9B7883C3B073729B4E389B42E79295C08101196E06B913
67D99537B429ABCD9298C5EB237263DAD5F61> |-
/zero <1C60D8A8C9B7883C4DD6B519314A3320BBB907C889B327F809DBA0078
8A87A456BB5C4F1874B6CF757FA285A07142F9E056475CA45FC4554C89CD6E26
34F7A71A0B534AF130B735BD75C2AE93ED4730EBB4AC347EBCBBC24368BA625F
6> |-
/one <1C60D8A8C9B7883C478830D24C3F6416C397CCD7D4C535C8ADC225A18A
A0E8C31FBF4952EEAE0B7353BF0C7A5F54CF70D2FABDCF00BBEFD2F36C366ED0
EB4828666B57F567D0F2A46290DAF721EF3F49F031212DF59D79DFF18EA897FA
BE555CB294> |-
/semicolon <1C60D8A8C9B7883C3741EA86A23C06E46694648BEB38F12DB851
1E989C476DD34C7F2FAC7A8C3AB360619128D3BAB007AB1DE3BB50438742965D
762EEC3CEF8FAD84F898EA39546B9A9CF152A5D505EDA014AFBFA2C726CE5C01
27DDA35AC2F589208109> |-
/equal <1C60D8A8C9B7883C3BCB227077E73D8CFA35921F3AD54BD0531B2D23
CB7347759AB098CC24D56DAE17C1B3A3854AE08DBFF23830D3A9ABACA019CB26
2AC88B0C0BDE284A0013AEC872120E09739399> |-
/greater <1C60D8A8C9B7883C7251C6DC5086A537AC6C625823805853B44EA8
5ABADBF9E127ECCDEE0D5F4A09D32E931FC03AAB89DC948DE1CE0BDAA68239C0
CBF4CC1B118641EAB16ACFF4691EF007805C7A7E87E81F1B5124F55C3B7260C4
5D31> |-
/bracketleft <1C60D8A8C9B7883CF40923E2D1CA298F26E232930E97D71BB9
65A65A57E9B0612C5EA0601FC41093D062AD30C2B1BCBE71C8D4378D35FEA2C6
9EB2122ACDC2AF92308DCD74E69E> |-
/bracketright <1C60D8A8C9B7883CF40923E2D1CA298F36CB4F4E7F1E1E7C8
8CCEBFFF43BE5EFBF219FA0040B1AD8E286282DF79DDEFA6C0F870B6F642B799
B06AE2AE8579BBE97C70E28C9725A> |-
/a <1C60D8A8C9B7883C478830DD8A5BFB452538458154F4CE3B20AD66AD581A
DF189C4AA24F8CBBC0F70339A3AC822FEE3457B7E5F60BEFA6CFDF765B8A3D2F
273CC300F8F8736B1B2290BF6D64B521AB42268778DDD081E97AF1F166EABEF5
8CAACAFD7314321FAABBFB171C6401E8BC138F90EAB8EAC011C39D38EC2210C7
CD76FC3051095C80212DE7950D4EEF9B6992774477395A54> |-
/c <1C60D8A8C9B7883C4A7D20AF02F248405BB0FEB5BEB4424866E4AA8F7D1C
96E7B766FF4C7548AFD9BCEED1405BE68EEDAC184D6FA024DEEB00C6D3EAA865
A5DA65F020516612C5C28F3550F2FA31F4BFD863231970126034040555433EAD
DB9C42D590ADC0EE374998B8B8B5AB6D> |-
/d <1C60D8A8C9B7883C4A7D20AF0DD3ED7104BEE7F6D84DAE7EA020CA7AFA2C
BFE4AC36897205198721830A8AB1EAC205FA933B72BED81C5D5CF5D35E96AF4F
501D61996653C99302F0913D5B28065C17C79D42CBA02B6F956C63467FC09B35
4AB3AC510D8FB3DF115C3D51800C44B77444BCC0972329CE5F0067004D23925D
DC> |-
/e <1C60D8A8C9B7883C4A7D20A0A2FB7F2250F0DBD938F9100315996944235D
A4D35522DC5271E0997530F8F11CDC910ECE5428D0632B4858C70F59802E7E55
F069BB51A48FA483655B9CF2246FBCE33DD8D793CBF78B460B1AEB2359A0A7ED
9C180739C2D45FBC5051E3D6690D1A> |-
/f <1C60D8A8C9B7883C478830D208D625ED20D4215FF985DD676DC5BC2A1A63
501158AACA945017F911C2111684137446B54CAB850A66781409BDC92EC035F1
E33BF970187700C459FBA93F0ADCB5EF454EEE57A28A9A4D4EBD4C39A8680068
4B0229BE71DE1E6C7D6B07A91E1667941CAF1694F3A42E5B99E532> |-
/g <1C60D8A8C9B7883C3726489C458D0799001161A278FAE7520D22FEC683F8
1B67E72D39B273A40C0DF57A109D016FA40F92646BBA7EAC1A83D2AD5B1957E8
2D91509F7E20E4E5CD52564A699A8F1AE342E1036F7B7ED905A8B77C7B9BE9BA
5513F882542C9A2B8B4042D854B2BCD70634E9D2A7DD36431BEFB6F1B0C1E019
2CA38C620F1C27F012DED5E10248E9C34C89FB8F0361A0E9D37E40F6C7C3CEE2
3C7F07A49FDD7C7AB53D1774431D880563394764824E39D44C3D9DCEADC2EC88
9DC120D5A6EDD38A6B818C249CD53AC9A3DA07676E77A1E4DC5CEC5A8E82F61B
A4> |-
/h <1C60D8A8C9B7883C478830D20F0D4843C402F45DB9BECD77059F06484889
F902119F32FCEB497A95B198E71C1F94089E3E94F29A3051C3B126B0A4114AD7
2356E65E7E3BE096156B77074D24131680E327D8EFB42A9BD03329AA74062396
1BC0BFB051E3368135D06C4E611FAA43DEB16EA7B458F594D0E6E59189C74F6D
5C737F6DEBD2DA677B09C5FE4233> |-
/i <1C60D8A8C9B7883C478830D208D625ED16FFC4A91D386BCAC0EAE25622BB
1E44E76B43D5E9C02FB35DD2E716D71DB34EC5EF64E6676204311902DF93FA14
06434F9C55AC89918A3CB5264191C5A857EEB6C55C2A58756AE17BE12F9B5C9C
7E384136ACA12CCE72424CD36982DD> |-
/j <1C60D8A8C9B7883C37293D8C0E2267BFEB7904AE6E8AF439AFDFC95147D1
1A9FC6D1CFA2A87897181D44B53F63C883C42BD86CB241695DBA9507FAF1098D
8B5DC292B708014E42D23ACBF0447850F1B72CB459089603796BDE129B00B539
EADCBBD708E3422AA16B76899EB9A00B1C1DA6CD670DF12DBB1A3FCD9979AB43
E08E439E9A04F7AABD371A> |-
/l <1C60D8A8C9B7883C478830D2BCF2481623045F78FD9BBADFFA8FB26EC510
AF3C97F27FDF441DB62E62A99256AEE465959742BAD1238681D42B1BB9244EBE
B8EFC1F9DC1EEC08C5424940618DBDED6D> |-
/m <1C60D8A8C9B7883C723869652C2C4BE148BA3D584F34AA5166985C580D4F
C2E7320A841F1FEBE11C84F5B65F33C2E7104A49F22050ED0B804913DA2B9A9B
B5C28241A23D6F9115B86D9999414DB56B6FB62589084A1E15D0E2F7ADBBF17D
3BEC313D7D5CE685493E6537618EB1E00AF99E6AE73BAA30CF47A99387C435F9
058FFEAB2950B5C55A47A99878FBBD1A19B085333728D666186421A061F913BB
DB44AD6DB95FF9209EFEAC75A300BEBC463F11D5C5> |-
/n <1C60D8A8C9B7883C478830D20F0D48516C48529F19D4390ACA3CB636CB31
9811B28F3CFCE38D45413DC6FB2F60CD27C9B65282627A370A88296FC733A876
DAAB2711060AC3E24A4B2BDE2B5A6B0094E1A0426DD1D62A3B7328123FBD866F
AEDB59AD4AB57FC303BB5EA4EEDB39B4BA18C7408D49E86AF1FF5B06EA08EDF6
F4EE2B0915E7E1> |-
/o <1C60D8A8C9B7883C4A7D20AF02F248519684D53CFC242E61C1496541B9CE
EA6A7897D7666699B03F21228EC7BA0848E96D7EFB315379B280A7E230CB4070
45785C70CEEF55D239B1E02EDF4333F6E8CF5B72DA> |-
/s <1C60D8A8C9B7883C4A7D20AF02F24847FCBC8320F552027E1BBA91727306
4B448C1E219D6771761953C699F55B69457599199C875CDE2C30B3404A099D9B
D065A195F90F73C05A7D7F57AAC3D9F6EBB22D3F04B13B217ECCDF33DA1500F9
04D56D439E52DC2B512A70F982EC661140B0BDF112DF780936562D79444CE561
55462716CFDD2033F98AFA3CF96979279CA5205E169D73FDE5BCE3AEADA13903
F78E1FE55129> |-
/t <1C60D8A8C9B7883C4A7D20AF0A7E92D5613B65AFEF55536C0C6DE4AFE20A
10C6970CE6FF2962A760B86C1D6370051A1B73D246B7D29444833B836A1EF0D8
3987BF5FB340E234471E761030FA005E3AF2243B9712C481663C21DCF2CA6EC2
311095E46BBCC49268EA2E747C71F6FBE1B8091D703C> |-
/u <1C60D8A8C9B7883C4A7D20AF0A7E92C75650A881710C1F05569716C5E79C
8B5E9DB2C0282130B445F6B57C4C1EF5C3C4088CE7D59E0BC4663C84334AE7BA
E2D2B560AE21587354649ED8CFFE69A3646B532DDE50AE6692B8BC6E873FA805
5C1CC683BFA7767A858597E206274A2B4A78380B44A399BD22> |-
/v <1C60D8A8C9B7883C4A103CD4EAE01FD804A0FC808A4B05A1CCDBF8105C59
77886FA30B95DE52399F2602278CEFF27631D0210BE832CAB5740D0194255CEA
F6224C1CAA5232C6677DF2C9430039A8A9338092F66BD1F888FCB191E106F666
25432E847076772AEC8CF9B58C> |-
/w <1C60D8A8C9B7883C4A103CD4EAE01FE7EC75D3177B2C2FBC05FF760BEA5A
516239287D9A5EA8F87A7FC84516447DBC3D0998D25C9364221E071483844478
87BF80207CF003A42FD0B1A924B527934EC9A8EE1928E70B00D8F0E73DD63DB0
68236D3331866576B74AF1B4E40142C3F97FE564FDDF189DA62E475BAF08A81A
3C373E08FA7C6A6125CBCEA364E204184F602710219B3E1C3A1F10090B429172
97A1CD550FE6> |-
/x <1C60D8A8C9B7883C478830D208D625E202B27052B97E3F39D7983FD856E0
CF68EA6192CFECF20342512BDDE3A5FC2F89457723FD72613413C44E5760B6CD
C10601A970B37F52D6CB67913ABFBB4678B04D3E8EA46D39AAE09138EA9A42AD
31262C87F4CC3D48A7F703E63E8FC29551E84A105DF870666DDEEED2BCFAA23C
C6302642588B93056B22EA50411A72A83D6B523AC0E644524B> |-
/braceleft <1C60D8A8C9B7883CF40923EC4D515696A78DB3358C4D5997030B
8784D1B42A2C941E72C3EAD6F0A6E60F1A9AD784AEFB13307FBA8734114EA5FE
5617F897EB502676B0A6A3346B38F7ED1E4E2FE91AA124DE5AEA9AFEA04E838A
29A23E2A1FAE5701E96D4BCB28D30F50E0F503635AA6439AC595A35AA300C3F2
8C5A89BA5F09B0B696EBCAE7F872014770FE499B0E0FACA29B8C71> |-
/braceright <1C60D8A8C9B7883CF40923EC4D515696A78DB3358C4D5997030
BBB6A4B603C5F7B9F9E746B3BF688EDCBBF64C15A1F39A369CEAFC5A5A994233
FF2E35FD42225469B896E7ABCA9A54E35BA5CDB94DA90B2BEDBCE53EDA030736
B1B3C11072F61A1086D73AFCA4AA7B919739AE6BB2E83F4DA91B6EC72B536635
60608DADDFE3ECC775F8CCAF26E6712FC4B9FA9208610E775EBCBB333F7888D2
DAB> |-
/.notdef <1C60D8A8C9B7883CC2> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEJK+CMTT8 /HEJAAA+CMTT8 findfont ct_VMDictPut
/ARMEJK+CMTT8*1 
[40{/.notdef}rp /parenleft /parenright /asterisk /plus /comma /hyphen 2{/.notdef}rp 
/zero /one 9{/.notdef}rp /semicolon /.notdef /equal /greater 28{/.notdef}rp 
/bracketleft /.notdef /bracketright 3{/.notdef}rp /a /.notdef /c /d 
/e /f /g /h /i /j /.notdef /l 
/m /n /o 3{/.notdef}rp /s /t /u /v 
/w /x 2{/.notdef}rp /braceleft /.notdef /braceright 130{/.notdef}rp]
ARMEJK+CMTT8 nf
ARMEJK+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
72 368.16 mo
(voidlocate\(floatxx[],unsignedlongn,floatx,unsignedlong*j\))
[4.1971 4.19711 4.1971 8.51769 4.19711 4.1971 4.19711 4.1971 4.1971 4.1971 4.1971 4.19711 
4.19711 4.1971 4.1971 8.87714 4.19711 4.19708 4.19711 4.19708 8.63725 4.1971 4.1971 4.1971 
4.19711 4.19708 4.19711 4.1971 8.63725 4.1971 4.1971 4.1971 8.63724 4.19711 8.51768 4.1971 
4.19711 4.1971 4.19708 8.5177 4.19711 8.5177 4.19711 4.19708 4.19708 4.19711 4.19711 4.19708 
4.19708 8.75763 4.19708 4.19711 4.19711 8.5177 4.19711 4.19711 0 ]xsh
%ADOBeginSubsetFont: DLPBAA+CMSS8 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /DLPBAA+CMSS8 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMSS8) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 46 /period put
dup 71 /G put
dup 73 /I put
dup 82 /R put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
dup 122 /z put
dup 174 /fi put
def
/FontBBox {-65 -250 1062 761} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-21 -0 694 715 444 459 656 677] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [66] def
/StdVW [87] def
/StemSnapH [59 66] def
/StemSnapV [87 101] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
30 dict dup begin
/comma <1C60D8A8C9B845C878C1CFCCB5F5F9E3A52F2BE8C6E51D4412DCD0D6
EA31615EB5727C1F99B3> |-
/period <1C60D8A8C9B845C80860AB44A338CC6083B186B062A47301A0A0> |-
/G <1C60D8A8C9B639EE071BE8242701378AD42DF6804E37D767548B620A2FA5
56F5285103938E8A376D8DCD09E2492320DBFD2AD3E9DE68FDC80ADC9E08C0B9
17BB9743269002633495265FCB95BF2EC601EAE7FE6736AD0D1606021244097B
3D84F65F6026EA2C99013A78E42509> |-
/I <1C60D8A8C9B845C808251600A255C99B753981E42091FC248AE4E0F76F30
6400> |-
/R <1C60D8A8C9B625CE18D5A316D9645BA11538887A1F01B52160A7A602B007
B669D89BDF21E4A3A5AD5231E7F409393E3B35708755DC83EC99996F80C92385
1660DFEEA6E60DC71A5DF521B96ACED50F58695BBD5FB2F82AD12C3D385006> |-
/T <1C60D8A8C9B60BC6FA14843A5E7B4F8106FF8EB164A22D0F763873A27898
5BEACD5BA3A81B0C31C87D718ED98197A92DE9AC18ED4C8A7625E52D02D4AF8D> |-
/a <1C60D8A8C9B7BDE3EC5076B9DD7E38E64E726A6C54B306A0C490A11BFAA5
A7F2BFE5727664F0EE3908FB9FE3259630AE60DA068A29D724CA5EDADE792224
9BD245A92F2621C6B1F65F693FB98346367FF40A5058BB83441A5B2D0F836DA5
C75B78DE7B95D7D78354EAC9ADFEAE9D23804AB0D195FD1BF3> |-
/b <1C60D8A8C9B7967682E8E54742F49032E80413F610CF78732B372CA38672
C3B9828FD54AC1A5BFA620E912D6B2EFEB4132CFC7F73BD0029ED58ADDD443B2
D87F4E0AB4F2EE5A0DBD5CD0DE2EEB58E0BF59CC7D37181AC388A8C5562B9A6F
FFBB4F925FF769FD4A18632E5A> |-
/c <1C60D8A8C9B74383EFE2AED1D20DB94D25F65EA0DDCFCFB4A826D66997A3
91AF5D7A5B5FBB73D056E81114D01C5FE3ACFCCA4AA70FA75F3348C80CC88517
20B7369EF1022939925699461F8805AE42EB5D6DBB> |-
/d <1C60D8A8C9B7967682E8E54742F49032E80413B97DE6ABD0BEA040F18EB6
B957ED534F93F87C25CCCE606AB15E87D378F5D78382F96D5F45BBC8BAC55E6F
32CE4F2223BBC310FCC7C379D2088E5EF1F1365A41A382DBFE9E946DAC1CFA85
0DB4A35843> |-
/e <1C60D8A8C9B74383EFFF10C87598D4A3D5946A491C4C0AC6E2B8E58E9559
2041F7F708467C72BD9F4C9318DC61A7F3A3A2A776A0B5C761D1F735E0EDD54B
F6FD0F1F356781F961059A6E20FD864DCA47293E8BA42814C097640FDB33F82B
4A97FA9A> |-
/f <1C60D8A8C9B827990E4578150F1625517477194A0A9F58BFB8DD527961FD
8E1E1C8A08A81670231949877B49F410182698C913BBD82FC48DBA8D095B203E
4740906A8EB5346A88FF0C26B91FB52874> |-
/g <1C60D8A8C9B7883C373F644420BDFE6066184AB4968D81C59DD800329B9D
81FBB06ED60AF28107A0DDF501D6F8A72DEB35FABD098C4C6724101AB7C40841
175CD716B26483B36ABE899150213E6E5D57A36A6307F5E38084B6A515D5BDEF
446308AFEEB3DAD1CB1FEB524393850D9F2761D0B9F9524E1192200BEFBFD5FA
D5E9C79EC986E315F412E36F02FA1E3C9BF92DFB5816F700890659AADB7DB279
65D140B5EA2197FE7C9AB634D3C2294EAD45A4B945C45FDB08FBABDCA4080059
3CB1BAE4CAD7BA670521646F11E006C82EDB2374C8B2CD24> |-
/h <1C60D8A8C9B79676885C9E82F970D03A3EA564673B28D25469F15427ABEA
1B44D3CC94AA13907FF2C9D6CD72F75DBBAF5F619F0A97C8B984A88D15812FE2
F3093055E243C78E0BE1F6F5> |-
/i <1C60D8A8C9B86FAE6A72F95D40DFC0014093276B4B8451DBCAF1A4FF5653
63ABB851E8B0984AFAFDEA481FD7589BA4> |-
/l <1C60D8A8C9B86FAE6A72F95C980400B16FB0876AC9DC237314DDD8191AED
CEE6> |-
/m <1C60D8A8C9B681FF4AC4A6219D01D0E90BE687ED1286018E853CF99B3B70
A708BD7F59983CE82A3E40C43B3E472041ECF4F68FC049B0CC1A7FA8BBE5D594
86A71601ECA8E8DD72E5678592FAA35762D266F86ED555E960BB3166D69803F2
EEC490553F38C504703C> |-
/n <1C60D8A8C9B79676885C9E82F970D01D47FD1FE922CC158415BE4CC338A7
2202E1ED65025A24B388E99D73616E595F28C4A4014C1C85111B44755B1BCD4E
74ECA524192B0F> |-
/o <1C60D8A8C9B7883C4DCBD75181A7FF6E6971E5C276A30685F0E1C3A50A98
195E99E32A3BD4AC4B6385045A7923253550E4F4C560D3FD17093917A13A3580
186A49C75945BBE1162D2FA0F817EB6A3D2BE8E2DA3B7EC0211E5F> |-
/p <1C60D8A8C9B79676F81A548F2A3AA3F01980623A4E67AC1E039DAFC14730
4927D5B1AA45D7C48455D12B4D6726328822BD905764AE3B9EF2FDFF3CF4D4BB
8801EE59A2A3C7954518978E33AAE49E3BC325D9A7B3BE29C1F3C8B1F496A638
F8DFE0925BA886DCEE> |-
/r <1C60D8A8C9B801FDB7D99B90CA4C2B0E219FE557019AB7A075EE85AB1DB7
8178C0D4C6BE5A99A3C0709B3986AA8EB9916187BA> |-
/s <1C60D8A8C9B704CCCD10E3D8345FD533ED38163C3E3BB669B7A294C1DBDD
F78275A299FF2227F844370DB83C3EFAAEEDA78F237317918CE17D2489E24998
738E3756354592FE28D229BC7EEAAC44E9AAC80ED39081CF46F30A90D57A1062
439E799BFA68E8398A84FBF51768B0BE7E6AC49320A4AE84C1ABCE09E7D14E86
ED999DE409BA9B> |-
/t <1C60D8A8C9B73B17047A7EDA9F6F31E3EA1A295736984E1D18E34820EAA5
37FC6B9EA6B3F9D0B075F655BF278168F2718223D509FD407F3F41CE16107A08
FC979309226C82AB6E2F17D655FF539CC8CAADF2> |-
/u <1C60D8A8C9B7967682E3DDB03E6BB5EE72A3B68B77ECE4659260E2C49167
AF4E3E6F4BBF0D13961A011158B739C6EF267565215CB4438FC6DD7F94266BB1
0338CC1ADB6E> |-
/v <1C60D8A8C9B751D5746CBC3A5E1D072240F5E641991AFCF9D3C65AAB09E2
76830801ED12889F123B114B28606759705FA786836D971EB1E73F30> |-
/w <1C60D8A8C9B60BC6FA14843A9F920EAF3E3669EDF48260377441EF336A0A
86A1DC9C56363F2494483695FE64D2A3E7B5F17EF614B5CC980F2FD23846C319
F767C5C64233127071C20DEE479871D1CCD256C88EF06507F2F6A0069C253397
22A47165BE54955CB90C0D170C9D48DECC14A54907F7F3E9713878594C1D559B
F1> |-
/y <1C60D8A8C9B751D5041C6AD215AEAD58DEF97ED0CE6C9DD04E918FB93DD1
99BDB1C3718B925E2E045F50D56F0A8CD5C93FDCA0C2B58684AF3944E79AEAF6
C2DE5C0F0EED4A01CD978A85DD0734B3A0B132FD63C32844EBF336CFA6135FD6
1F2913> |-
/z <1C60D8A8C9B74D93D6C1C1914A22609E077966A3760742878DF216F0AB17
1C19A66EF01C2949398FF6BFFE2448BE952489C7792D9D1C83A5FCB3559F6991
55B8BCBBBF35E8> |-
/fi <1C60D8A8C9B7E2CE5B6DC6886C8D0AA0C7F0107DA84B899CB7B2A0BB03C
3F577271DA5806DCE492242DA291CCFB505031F9160603B9593E154CBAE90B2C
2B6E2360844370A813A2E408FFAFC8259348736BBBBA7E3330707177CE868256
03F2A56539E1629724D42C15FC9> |-
/.notdef <1C60D8A8C9B808980A> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEJL+CMSS8 /DLPBAA+CMSS8 findfont ct_VMDictPut
/ARMEJL+CMSS8*1 
[44{/.notdef}rp /comma /.notdef /period 24{/.notdef}rp /G /.notdef /I 
8{/.notdef}rp /R /.notdef /T 12{/.notdef}rp /a /b /c 
/d /e /f /g /h /i 2{/.notdef}rp /l 
/m /n /o /p /.notdef /r /s /t 
/u /v /w /.notdef /y /z 51{/.notdef}rp /fi 
81{/.notdef}rp]
ARMEJL+CMSS8 nf
ARMEJL+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
72 377.16 mo
(Givenanarray)
[5.6364 2.03561 3.96278 3.71726 6.84229 4.07587 6.8423 3.83597 2.88045 2.88044 3.83596 0 
]xsh
%ADOBeginSubsetFont: OVSAAA+CMTT9 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2008 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /OVSAAA+CMTT9 def
/FontInfo 8 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (CMTT9) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 61 /equal put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 106 /j put
dup 110 /n put
dup 120 /x put
def
/FontBBox {-6 -233 542 698} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 611 622 431 439] def
/OtherBlues [-228 -222] def
/BlueScale 0.04796 def
/StdHW [65] def
/StdVW [74] def
/StemSnapH [65] def
/StemSnapV [74] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
11 dict dup begin
/plus <1C60D8A8C9B78E05C9F8D89FFF7A6643E5A5E2A88EC35BC975B0F0653
C27C4449BB5325E097EB9A330DEF7153ED5C741046EAA1BA2A30AFB502167383
626F4D123BB9746533A807F56ED03F26C680F0A7C40724464858E9E78B8EC> |-
/period <1C60D8A8C9B78E059954BBB8A5007692C4FF0DC21623ADCBCBC5AD5
607A6F4AA1A3DA926D580DC6DF7ABDF> |-
/zero <1C60D8A8C9B78E059232053453D7C701C100CB84113014EA6FCD610F9
FDB66274938484CDE6CEED752F7F1C1BEDAA686980D927020D86D93A28F4FCC7
8BF293262D994EF0FC695F63E43F4627D028B6E0A581AAE47302E1A9F0365A3E
C> |-
/one <1C60D8A8C9B78E05996F6CB6318B0C24FDE0F928ADCAFF3192A90D2FB5
A9E5330EC1110F982A83EEE906383E3A7467DF6BD5EE324B77D031AA3B940CD8
C46DF07F5751DD461B81170026CA6694D0EC929D3F8660FCE02A5AB8BBCB35A2
E356B5A4AA> |-
/equal <1C60D8A8C9B78E05E5B8F4079D52A24BEBAAA7F6F1A17413C5959340
016C7956CBFA4A7F107BEB02F885F440CC7B1E3814A20A3F233ED359CD97E19C
32DBAB843D63A3FCBFD3F5923F0C2CBD344DCC> |-
/bracketleft <1C60D8A8C9B78E052AEEE373354B3AB3330A1A774B464B7A8A
A8BF0C06AA3278289C38E89AFD6F360FEBF697B06FB94E43571156D5BEFFF91A
EA343DFC3E384824547B31FA0CB0> |-
/bracketright <1C60D8A8C9B78E052AEEE373354B3AB3218EAD86E0C470986
A04142AAD7EA61C5ED0CB601DF691CA2C7740A2DEFE8F2489735E69F1A82AB90
A80F1A29060B2A195547B04FF05C5> |-
/j <1C60D8A8C9B78E05E95280E85497A2CBC3E6B66C607F0D48313F23CB5D82
0072D77A9D00AC1254EF93388A09A5AC6060CA13850B1807111EB836D381FD3E
D679117D924D8DE018EBC0089218AAE2842AC4B8670CF0071E175B0D12ED8DDB
7CFC3EAA8D7D8CE6F4AA5632F78365BCA5A5549F03CB2E4BE84CC851DFDFB5DE
10223ED2978E1ADB59DB> |-
/n <1C60D8A8C9B78E05996F6CB6712F7999C891D9AA450FEC6A7B0BA5B5BCE0
5249B928911742195C5A9CAE9C2A1FC34D0A4320DEBCC97D05726DC00DD35C1C
05E66D14443B41AB8728F2340E579ABA439BE32258BFD47CA7013C285CEA1A48
F0D2AFA792A3C7BD965BC44F79002C37F3715ED6ACE122493CB41EC30B490A3E
F97780070F29CE> |-
/x <1C60D8A8C9B78E05996F6CB67482346509975DCA20F66B51DA69BAAED4A6
85DCB69DDD6F6BF9DA3B6F50543EF832BF715F0E016CDBDF2AC27B3FCFBF4F77
1B5EEFFEC889BAC3D6161A1C507BBEC084972F56B1CB7357A849FFB10646457E
B61E8910E42CBE0C332CFBED466EFA1DB031902477652DE1D15DC3E775C657F8
B932F83C342A93B43A4AFB479BAC71897EFCCA0175258E32DE> |-
/.notdef <1C60D8A8C9B78E051C> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ARMEJM+CMTT9 /OVSAAA+CMTT9 findfont ct_VMDictPut
/ARMEJM+CMTT9*1 
[43{/.notdef}rp /plus 2{/.notdef}rp /period /.notdef /zero /one 11{/.notdef}rp 
/equal 29{/.notdef}rp /bracketleft /.notdef /bracketright 12{/.notdef}rp /j 3{/.notdef}rp 
/n 9{/.notdef}rp /x 135{/.notdef}rp]
ARMEJM+CMTT9 nf
ARMEJM+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
124.912 377.16 mo
(xx[1..n])
[4.67951 4.6795 4.6795 4.67952 4.6795 4.67952 4.6795 0 ]xsh
ARMEJL+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
162.586 377.16 mo
(,andgivenavalue)
[4.91833 4.07587 4.32216 6.96265 4.1971 2.0356 3.95003 3.71725 6.8423 6.47566 3.95003 4.07587 
2.06111 4.32216 0 ]xsh
ARMEJM+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
230.736 377.16 mo
(x)sh
ARMEJL+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
235.415 377.16 mo
(,returnsavalue)
[4.91833 2.88045 3.70929 3.00793 4.32295 2.88043 4.32297 5.99667 6.59601 3.96277 4.07587 2.03561 
4.32297 0 ]xsh
ARMEJM+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
294.567 377.16 mo
(j)sh
ARMEJL+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
301.766 377.16 mo
(suchthat)
[3.23026 4.32217 3.74832 6.96265 3.00235 4.32217 4.05115 0 ]xsh
ARMEJM+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
337.041 377.16 mo
(x)sh
ARMEJL+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
344.24 377.16 mo
(isbetween)
[2.03561 5.75677 4.56207 3.71725 2.76166 5.52167 3.71725 3.71725 0 ]xsh
ARMEJM+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
383.115 377.16 mo
(xx[j])
[4.6795 4.6795 4.67953 4.6795 0 ]xsh
ARMEJL+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
72 386.16 mo
(and)
[4.07587 4.32215 0 ]xsh
ARMEJM+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
87.5978 386.16 mo
(xx[j+1])
[4.67951 4.6795 4.67951 4.67951 4.6795 4.67951 0 ]xsh
ARMEJL+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
120.592 386.16 mo
(.)sh
ARMEJM+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
127.072 386.16 mo
(xx)
[4.67951 0 ]xsh
ARMEJL+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
139.31 386.16 mo
(mustbemonotonic,eitherincreasingordecreasing.)
[6.69005 4.3389 3.20715 5.88196 4.56204 6.59766 6.69006 4.1955 4.3389 4.1955 3.02388 4.19551 
4.3389 2.0356 3.72523 5.39813 3.72523 2.03561 3.02388 4.3389 3.72522 5.8804 2.03561 4.32214 
3.72523 2.85654 3.72523 4.07587 3.20715 2.03561 4.3389 7.19705 3.95721 5.64047 4.3389 3.72522 
3.72522 2.85651 3.72522 4.07587 3.20715 2.03561 4.3389 4.1955 0 ]xsh
ARMEJM+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
325.762 386.16 mo
(j=0)
[4.6795 4.6795 0 ]xsh
ARMEJL+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
342.56 386.16 mo
(or)
[3.95721 0 ]xsh
ARMEJM+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
352.279 386.16 mo
(j=n)
[4.6795 4.6795 0 ]xsh
ARMEJL+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
369.196 386.16 mo
(isreturned)
[1.99976 5.99747 2.87646 3.74515 3.00235 4.32217 2.87646 4.32214 3.74515 0 ]xsh
72.0006 395.04 mo
(toindicatethat)
[3.00634 8.0371 2.03561 4.32136 4.32136 2.03561 3.70769 4.07587 3.00635 7.55725 3.00633 4.32136 
4.07587 0 ]xsh
ARMEJM+CMTT9*1 [8.9664 0 0 -8.9664 0 0 ]msf
132.352 395.04 mo
(x)sh
ARMEJL+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
140.751 395.04 mo
(isoutofrange.)
[2.03561 6.95708 4.18993 4.33331 6.84236 4.1971 6.3625 2.88045 4.07587 4.32216 4.18993 3.71965 
0 ]xsh
ARMEJK+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
72 404.04 mo
({)sh
87.9602 413.04 mo
(unsignedlongju,jm,jl;)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 8.63725 4.1971 4.1971 4.1971 8.63725 
4.19708 4.19711 4.19708 4.19711 4.1971 4.1971 4.1971 4.1971 0 ]xsh
87.9602 421.92 mo
(intascnd;)
[4.1971 4.19711 8.51769 4.1971 4.19711 4.1971 4.19711 4.1971 0 ]xsh
87.9602 439.92 mo
(jl=0;)
[4.1971 4.19711 4.1971 4.19711 0 ]xsh
ARMEJL+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
206.756 439.92 mo
(Initializelower)
[2.37747 4.32214 2.04279 3.00237 2.04279 4.091 2.04279 2.04279 3.70853 7.07745 2.03561 3.9572 
5.52167 3.71725 0 ]xsh
ARMEJK+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
87.9602 448.919 mo
(ju=n+1;)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 0 ]xsh
ARMEJL+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
206.755 448.919 mo
(andupperlimits.)
[4.07347 4.32216 7.8019 4.32216 4.32214 4.56206 3.71725 6.48055 2.02524 2.02527 6.73547 2.02527 
3.00235 3.25256 0 ]xsh
ARMEJK+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
87.9601 457.8 mo
(ascnd=\(xx[n]>=xx[1]\);)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.1971 8.87715 
4.1971 8.39734 4.1971 4.19711 4.19708 4.19711 4.19708 4.19711 0 ]xsh
87.9601 466.799 mo
(while\(ju-jl>1\){)
[4.1971 4.19711 4.1971 4.19711 8.63725 4.1971 4.19711 4.1971 4.1971 4.1971 8.63725 8.39734 
4.19711 8.51767 0 ]xsh
ARMEJL+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
206.749 466.799 mo
(Ifwearenotyetdone,)
[2.39819 5.8819 5.52168 7.07744 3.83597 2.88045 6.9579 4.32214 4.19073 6.48212 3.72287 3.71725 
6.36176 4.32214 4.19073 4.33411 3.72043 0 ]xsh
ARMEJK+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
103.919 475.799 mo
(jm=\(ju+jl\)>>1;)
[4.1971 4.19711 4.1971 4.19711 4.1971 4.1971 4.19711 4.1971 4.1971 8.75758 4.19711 8.51768 
4.1971 0 ]xsh
ARMEJL+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
206.749 475.799 mo
(computeamidpoint,)
[3.71327 4.18355 6.72034 4.32693 4.32695 3.01192 7.31735 7.43605 6.72035 2.03561 4.32693 4.56204 
4.18356 2.03558 4.32697 3.0119 0 ]xsh
ARMEJK+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
103.919 484.68 mo
(if\(x>=xx[jm]==ascnd\))
[4.1971 8.51769 4.19711 8.39734 4.1971 8.5177 4.1971 4.1971 4.1971 4.1971 4.1971 8.63725 
4.1971 8.5177 4.19708 4.19711 4.19708 4.19711 4.1971 0 ]xsh
119.88 493.679 mo
(jl=jm;)
[4.1971 4.1971 4.19711 4.1971 4.1971 0 ]xsh
ARMEJL+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
206.755 493.679 mo
(andreplaceeitherthelowerlimit)
[4.07587 4.32214 7.56201 2.88045 3.71327 4.32693 2.0356 4.07587 3.71327 7.07745 3.71326 2.03561 
3.01193 4.32693 3.71326 6.12109 3.01193 4.32693 7.07745 2.03561 3.95718 5.52167 3.71329 6.12109 
2.03558 2.03564 6.72034 2.03561 0 ]xsh
ARMEJK+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
103.919 502.679 mo
(else)
[4.1971 4.19711 4.1971 0 ]xsh
119.88 511.679 mo
(ju=jm;)
[4.1971 4.1971 4.19711 4.1971 4.1971 0 ]xsh
ARMEJL+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
206.755 511.679 mo
(ortheupperlimit,asappropriate.)
[3.9572 6.00075 3.00235 4.32216 7.07745 4.32214 4.32216 4.56204 3.71725 6.24065 2.02446 2.02444 
6.73468 2.02448 3.00235 5.51849 4.07587 6.35693 4.07587 4.32214 4.08224 2.90118 4.19708 4.08224 
2.88046 2.02444 4.07269 3.00235 3.71725 0 ]xsh
ARMEJK+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
87.9601 520.559 mo
(})sh
ARMEJL+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
206.759 520.559 mo
(Repeatuntilthetestconditionissatis\256ed.)
[5.5233 3.71727 4.56204 3.71725 4.07587 6.12186 4.32454 4.32455 3.00952 2.03561 5.1559 3.00954 
4.32455 6.83752 3.00238 3.71088 3.23743 6.24222 3.71725 4.18115 4.32455 4.32452 2.03561 3.00952 
2.03564 4.18115 7.56201 2.03558 6.2374 3.23743 4.07587 3.00955 2.03558 3.23746 4.55569 3.71088 
4.32458 0 ]xsh
ARMEJK+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
87.9601 529.559 mo
(if\(x==xx[1]\)*j=1;)
[4.1971 8.51769 4.19711 8.51769 4.1971 8.39735 4.1971 4.1971 4.1971 4.1971 4.1971 8.63725 
4.1971 4.1971 4.1971 4.1971 0 ]xsh
ARMEJL+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
206.748 529.559 mo
(Thensettheoutput)
[5.73766 4.32693 3.71327 7.8019 3.23744 3.71725 6.4821 3.00237 4.32693 7.19778 4.18356 4.32693 
3.0119 4.32697 4.3269 0 ]xsh
ARMEJK+CMTT8*1 [7.9701 0 0 -7.9701 0 0 ]msf
87.9601 538.559 mo
(elseif\(x==xx[n]\)*j=n-1;)
[4.1971 4.19711 4.1971 8.51769 4.19711 4.1971 4.19711 8.63725 4.19708 8.5177 4.1971 4.1971 
4.1971 4.1971 4.19711 8.63724 4.1971 4.1971 4.1971 4.1971 4.19711 4.19708 0 ]xsh
87.9601 547.559 mo
(else*j=jl;)
[4.1971 4.19711 4.1971 8.51769 4.19711 4.1971 4.19711 4.1971 4.1971 0 ]xsh
72 556.439 mo
(})sh
ARMEJL+CMSS8*1 [7.9701 0 0 -7.9701 0 0 ]msf
206.759 556.439 mo
(andreturn.)
[4.07587 4.32216 7.92224 2.88045 3.70929 3.00793 4.32295 2.88045 4.32295 0 ]xsh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
91.92 585.12 mo
(Aunit-offsetarray)
[11.0324 4.9813 4.9813 2.7696 2.7696 3.31747 4.9813 3.07738 3.31747 3.87537 4.42325 6.37009 
4.42325 3.31746 3.31747 4.42325 0 ]xsh
ARMEJH+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
171.88 585.12 mo
(xx)
[5.27911 0 ]xsh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
186.158 585.12 mo
(isassumed.Touse)
[2.76961 7.71495 4.42325 3.87538 3.87537 4.98131 7.7509 4.42325 4.98129 9.93073 5.24722 8.82088 
4.98131 3.87537 0 ]xsh
ARMEJH+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
272.074 585.12 mo
(locate)
[5.27911 5.27911 5.27914 5.27911 5.27911 0 ]xsh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
307.228 585.12 mo
(withazero-offsetarray,)
[7.19284 2.76962 2.76959 8.70132 8.26285 4.42322 4.42325 3.31747 4.98132 3.31744 4.98132 3.07736 
3.31747 3.87537 4.42325 6.37009 4.42325 3.31747 3.31744 4.42328 4.38153 0 ]xsh
71.9998 597 mo
(remembertosubtract)
[3.31747 4.42324 7.7509 4.42325 7.7509 4.9813 4.42324 5.59792 2.7696 7.38129 3.87537 4.98131 
4.98129 2.76961 3.31747 4.42325 4.42323 0 ]xsh
ARMEJF+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
158.761 597 mo
(1)sh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
166.32 597 mo
(fromtheaddressof)
[3.31747 3.31747 4.98129 10.1509 2.76961 4.98129 6.82323 4.42325 4.98131 4.98129 3.31747 4.42325 
3.87538 6.27536 4.98129 0 ]xsh
ARMEJH+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
245.758 597 mo
(xx)
[5.27911 0 ]xsh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
256.195 597 mo
(,andalsofromthereturnedvalue)
[5.01019 4.42325 4.98129 7.38129 4.42325 2.76959 3.8754 7.50082 3.31747 3.31747 4.98129 10.0313 
2.76962 4.98129 6.94278 3.31747 4.42325 2.76959 4.98132 3.31744 4.98132 4.42322 7.26175 4.74121 
4.42325 2.76959 4.98129 0 ]xsh
ARMEJH+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
391.997 597 mo
(j)sh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
397.277 597 mo
(.)sh
ARMEJD+Helvetica-BoldOblique*1 [11.9552 0 0 -11.9552 0 0 ]msf
72 623.04 mo
(SearchwithCorrelatedValues)
[7.97402 6.64709 6.64709 4.41018 6.52753 10.7847 9.30114 3.32354 3.981 10.5444 8.63147 7.30453 
4.65048 4.65048 6.64709 3.32355 6.64709 3.98099 6.64708 10.6651 7.25433 6.64708 3.32355 7.30453 
6.64709 0 ]xsh
ARMEJB+Times-Roman*1 [9.9626 0 0 -9.9626 0 0 ]msf
91.92 648.12 mo
(Sometimesyouwillbeinthesituationofsearchingalargetablemanytimes,)
[5.5392 4.9813 7.75091 4.42324 2.7696 2.76961 7.7509 4.42325 6.87511 4.98129 4.98131 7.86148 
7.19284 2.76962 2.76959 5.88989 4.98129 7.54353 2.76961 7.98103 2.76961 4.98129 7.42297 3.87538 
2.76961 2.76959 4.98131 4.42325 2.76959 2.76961 4.98129 7.98103 4.98131 6.3172 3.87537 4.42328 
4.42322 3.31747 4.42325 4.98132 2.76959 4.98129 7.86148 7.54352 2.76962 4.42325 3.19794 4.98129 
7.30344 2.76959 4.42325 4.98129 2.76959 7.54358 7.75085 4.42328 4.86072 7.86151 2.76959 2.76959 
7.75092 4.42328 3.87537 0 ]xsh
71.9998 660 mo
(andwithnearlyidenticalabscissasonconsecutivesearches.Forexample,you)
[4.42324 4.98131 9.30108 7.19285 2.7696 2.7696 9.30109 4.98129 4.42325 4.42325 3.31747 2.76959 
9.18153 2.76959 4.98131 4.42323 4.98131 2.76961 2.76959 4.42325 4.42325 6.96983 4.42325 4.98129 
3.87538 4.42325 2.76959 3.87537 3.8754 4.42325 8.31567 4.98132 9.30106 4.42325 4.98132 4.98129 
3.87537 4.42325 4.42325 4.98129 2.76959 2.52951 4.86176 8.50293 3.8754 4.42325 4.42322 3.31747 
4.42325 4.98129 4.42325 3.8754 11.731 5.41965 4.98132 7.63724 4.30371 4.98129 4.42325 7.75089 
4.98132 2.76959 4.42325 7.05054 4.98132 4.98129 0 ]xsh
71.9998 672 mo
(maybegeneratingafunctionthatisusedontheright-handsideofadifferential)
[7.7509 4.42325 8.58178 4.9813 8.14328 4.9813 4.42325 4.9813 4.42324 3.31747 4.42325 2.76961 
2.76959 4.98129 8.34169 8.14328 3.31747 4.98131 4.98129 4.42325 2.76959 2.76961 4.98131 8.46123 
2.76961 4.98129 4.42325 6.36908 2.76962 7.71497 4.98129 3.87537 4.42325 8.58179 4.98129 8.58078 
2.76959 4.98132 8.14325 3.31747 2.76962 4.98129 4.98129 2.76959 3.31747 4.98132 4.42322 4.98132 
8.34167 3.87537 2.76959 4.98132 8.14328 4.98129 6.91696 8.14328 4.98129 2.76959 3.07739 3.31747 
4.42322 3.31747 4.42325 4.98132 2.76959 2.76959 4.42325 0 ]xsh
71.9998 683.881 mo
(equation:Mostdifferential-equationintegrators,asweshallseeinChapter16,call)
[4.42324 4.98131 4.98129 4.42325 2.7696 2.7696 4.9813 4.9813 6.84929 8.85667 4.9813 3.87537 
5.52925 4.98129 2.76959 3.07739 3.31746 4.42325 3.31746 4.42325 4.98131 2.76961 2.76959 4.42325 
2.76959 3.31747 4.42325 4.98129 4.98131 4.42323 2.76962 2.76959 4.98129 7.38129 2.76962 4.98129 
2.76959 4.30371 4.98129 3.31747 4.42325 2.76959 4.98129 3.31747 3.87537 5.13074 4.42325 6.75558 
7.19284 7.18289 3.87537 4.98129 4.42325 2.76959 5.64981 3.87537 4.42325 7.18289 2.76959 7.86151 
6.64496 4.98132 4.42325 4.98129 2.76959 4.42325 5.95755 4.98129 4.98132 5.37082 4.42325 4.42325 
2.76962 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/4 ]]
] del_res
/ARMEJF+CMR10*1 uf
/ARMEJF+CMR10 uf
/BKUAAA+CMR10 uf
/ARMEJG+CMMI7*1 uf
/ARMEJG+CMMI7 uf
/IPIBAA+CMMI7 uf
/ARMEJL+CMSS8*1 uf
/ARMEJL+CMSS8 uf
/DLPBAA+CMSS8 uf
/ARMEJI+Times-Italic*1 uf
/ARMEJH+CMTT10*1 uf
/ARMEJH+CMTT10 uf
/IMLBAA+CMTT10 uf
/ARMEJA+Helvetica-Oblique*1 uf
/ARMEJJ+CMR7*1 uf
/ARMEJJ+CMR7 uf
/GLBBAA+CMR7 uf
/ARMEJK+CMTT8*1 uf
/ARMEJK+CMTT8 uf
/HEJAAA+CMTT8 uf
/ARMEJD+Helvetica-BoldOblique*1 uf
/ARMEJE+CMMI10*1 uf
/ARMEJE+CMMI10 uf
/MMFAAA+CMMI10 uf
/ARMEJC+Helvetica*1 uf
/ARMEJB+Times-Roman*1 uf
/ARMEJM+CMTT9*1 uf
/ARMEJM+CMTT9 uf
/OVSAAA+CMTT9 uf
[
[/Procedure [/0 /1 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 5
%%DocumentNeededResources: font Times-Italic
%%+ font Times-Roman
%%+ font Helvetica-BoldOblique
%%+ font Helvetica
%%+ font Helvetica-Oblique
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: *PageSize A4
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
